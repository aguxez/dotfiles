{
  "{\"filename\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test/AuctionsTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/AuctionsTest.js",
      "filenameRelative": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/AuctionsTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "AuctionsTest.js",
      "sourceFileName": "AuctionsTest.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "AuctionsTest"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar Core = artifacts.require(\"Core\");\nvar SaleAuction = artifacts.require(\"SaleAuction\");\nvar GOPCreator = artifacts.require(\"GOPCreator\");\nvar HorseData = artifacts.require(\"HorseData\");\n\ncontract(\"Auctions\", function (acc) {\n  var core = void 0,\n      instance = void 0,\n      gop = void 0,\n      hd = void 0;\n  var owner = acc[1];\n  var buyer = acc[8];\n  var amount = web3.utils.toWei(\"5\", \"ether\");\n  var minimum = web3.utils.toWei(\"0.001\", \"ether\");\n\n  before(\"setup instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Core.autogas = true;\n\n            _context.next = 3;\n            return Core.new();\n\n          case 3:\n            core = _context.sent;\n            _context.next = 6;\n            return core.initialize(owner);\n\n          case 6:\n            _context.next = 8;\n            return GOPCreator.new();\n\n          case 8:\n            gop = _context.sent;\n            _context.next = 11;\n            return gop.initialize(core.address, owner);\n\n          case 11:\n            _context.next = 13;\n            return SaleAuction.new();\n\n          case 13:\n            instance = _context.sent;\n            _context.next = 16;\n            return instance.initialize(core.address, owner);\n\n          case 16:\n            _context.next = 18;\n            return HorseData.new();\n\n          case 18:\n            hd = _context.sent;\n            _context.next = 21;\n            return hd.initialize();\n\n          case 21:\n            _context.next = 23;\n            return core.setGOPCreator(gop.address, { from: owner });\n\n          case 23:\n            _context.next = 25;\n            return core.setSaleAuctionAddress(instance.address, { from: owner });\n\n          case 25:\n            _context.next = 27;\n            return core.setHorseDataAddr(hd.address, { from: owner });\n\n          case 27:\n            _context.next = 29;\n            return gop.openBatch(1, { from: owner });\n\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  /*\n  Since we can't test the oracle, we're going to try to recreate\n  the function.\n  */\n  // it(\"should create an auction\", async () => {\n  //   await gop.createGOP(buyer, \"some hash\", { from: owner, value: amount }); // 0\n\n  //   await core.createAuction(10, 0, minimum, { from: buyer, value: amount });\n\n  //   let auctions = await instance.getAuctionsLength();\n  //   assert.equal(auctions.toString(), \"1\");\n\n  //   let status = await instance.getAuctionStatus(0);\n  //   assert.equal(status, true);\n\n  //   // 0\n  // })\n\n  // it(\"should record a new bid for an address\", async () => {\n  //   await gop.createGOP(buyer, \"other hash\", { from: owner, value: amount }); // 1\n\n  //   let res = await core.createAuction(1, 1, minimum, { from: buyer, value: amount });\n  //   let auctionId = web3.utils.toBN(res.logs[1].args._auctionId).toNumber();\n\n  //   // Auction should be open for a while, we're not calling the __callback function anyway.\n  //   await instance.userAuctionBid(auctionId, { from: acc[3], value: web3.utils.toWei(\"0.025\", \"ether\") });\n\n  //   // No one has bidded yet so the user should be the max bidder.\n  //   let maxBidder = await instance.getMaxBidder(auctionId);\n  //   assert.equal(maxBidder[0], acc[3]);\n\n  //   // Record another bid for a higher amount\n  //   await instance.userAuctionBid(auctionId, { from: acc[4], value: web3.utils.toWei(\"0.030\", \"ether\") });\n\n  //   let newMaxBidder = await instance.getMaxBidder(auctionId);\n  //   assert.equal(newMaxBidder[0], acc[4]);\n\n  //   // amount of bidders should be two (2)\n  //   let bidders = await instance.amountOfBidders(auctionId);\n  //   assert.equal(bidders.toString(), \"2\");\n\n  //   // 0, 1\n  // })\n\n  // it(\"should revert if the new bid amount is lower than the maxBid\", async () => {\n  //   await gop.createGOP(buyer, \"third hash\", { from: owner, value: amount }); // 2\n\n  //   let res = await core.createAuction(1, 2, minimum, { from: buyer, value: amount })\n  //   let auctionId = web3.utils.toBN(res.logs[1].args._auctionId).toNumber();\n\n  //   // Record a new bid.\n  //   await instance.userAuctionBid(auctionId, { from: acc[4], value: web3.utils.toWei(\"1\", \"ether\") })\n\n  //   // OpenZeppelin implementation.\n  //   try {\n  //     await instance.userAuctionBid(auctionId, { from: acc[3], value: web3.utils.toWei(\"0.5\", \"finney\") });\n\n  //     assert.fail(\"Expected revert not received\");\n  //   } catch (err) {\n  //     let revertFound = err.message.search(\"revert\") >= 0;\n  //     assert(revertFound, `Expected \"revert\", got ${err} instead`);\n  //   }\n\n  //   // 0, 1, 2\n  // })\n\n  // it(\"should let the owner close an auction\", async () => {\n  //   // We're going to close an already open auction\n  //   let status = await instance.getAuctionStatus(0);\n  //   assert.equal(status, true);\n\n  //   await instance.closeAuction(0, { from: owner });\n\n  //   status = await instance.getAuctionStatus(0);\n  //   assert.equal(status, false);\n\n  //   // 1, 2\n  // })\n\n  // it(\"should revert if not the owner tries to close an auction\", async () => {\n  //   // Again, we're using an existing auction.\n  //   let status = await instance.getAuctionStatus(1);\n\n  //   assert.equal(status, true);\n\n  //   try {\n  //     await instance.closeAuction(1, { from: acc[4] });\n  //     assert.fail(\"Expected revert not received\");\n  //   } catch (err) {\n  //     let revertFound = err.message.search(\"revert\") >= 0;\n  //     assert(revertFound, `Expected \"revert\", got ${err} instead`);\n  //   }\n\n  //   // 1, 2\n  // })\n\n  // it(\"should send the token to the max bidder of an auction\", async () => {\n  //   await gop.createGOP(buyer, \"fourth hash\", { from: owner, value: amount }) // 3\n\n  //   let res = await core.createAuction(1, 3, minimum, { from: buyer, value: amount })\n  //   let auctionId = web3.utils.toBN(res.logs[1].args._auctionId).toNumber();\n\n  //   await instance.userAuctionBid(auctionId, { from: acc[7], value: amount })\n\n  //   // Auction closed\n  //   await instance.closeAuction(auctionId, { from: owner });\n\n  //   // maxBidder claims the reward\n  //   await instance.userAuctionWithdraw(auctionId, { from: acc[7] });\n\n  //   let tokenOwner = await core.ownerOf(3);\n\n  //   assert.equal(tokenOwner, acc[7]);\n\n  //   // Horse should be +1 to amount of times being sold.\n  //   let data = await core.getHorseData(3);\n\n  //   assert.equal(web3.utils.toBN(data[5]).toNumber(), 1);\n  //   // 1, 2\n  // })\n\n  // it(\"should send max bid to the auction owner\", async () => {\n  //   await gop.createGOP(buyer, \"fifth hash\", { from: owner, value: amount }) // 4\n\n  //   let res = await core.createAuction(1, 4, minimum, { from: buyer, value: amount });\n\n  //   let auction = web3.utils.toBN(res.logs[1].args._auctionId).toNumber();\n\n  //   await instance.userAuctionBid(auction, { from: acc[4], value: web3.utils.toWei(\"1\", \"finney\") });\n\n  //   await instance.closeAuction(auction, { from: owner });\n\n  //   let withdraw = await instance.userAuctionWithdraw(auction, { from: buyer });\n  //   let withdraw_returns = withdraw.logs[0].args;\n  //   let user = withdraw_returns._user\n  //   let payout = withdraw_returns._payout;\n\n  //   assert.equal(user, buyer);\n  //   assert.equal(payout, web3.utils.toWei(\"1\", \"finney\"));\n\n  //   // 1, 2\n  // })\n\n  // it(\"should get the amount they bid if they're not the owner or winner\", async () => {\n  //   await gop.createGOP(buyer, \"fifth hash\", { from: owner, value: amount }); // 5\n\n  //   let res = await core.createAuction(1, 5, minimum, { from: buyer, value: amount });\n  //   let auction = web3.utils.toBN(res.logs[1].args._auctionId).toNumber();\n\n  //   await instance.userAuctionBid(auction, { from: acc[5], value: web3.utils.toWei(\"1\", \"finney\") });\n\n  //   await instance.userAuctionBid(auction, { from: acc[4], value: web3.utils.toWei(\"2\", \"finney\") });\n\n  //   await instance.closeAuction(auction, { from: owner });\n\n  //   // Not the winner nor the owner\n  //   let withdraw = await instance.userAuctionWithdraw(auction, { from: acc[5] });\n  //   let withdraw_returns = withdraw.logs[0].args;\n  //   let address = withdraw_returns._user;\n  //   let payout = withdraw_returns._payout;\n\n  //   assert.equal(address, acc[5]);\n  //   assert.equal(payout, web3.utils.toWei(\"1\", \"finney\"));\n\n  //   // 1, 2\n  // })\n\n  // it(\"should return the bid of a given address in an auction\", async () => {\n  //   let bidAmount = web3.utils.toWei(\"1\", \"finney\");\n  //   // We'll create another token and auction here\n  //   await gop.createGOP(acc[4], \"6th hash\", { from: owner, value: amount }); // 6\n\n  //   let response = await core.createAuction(1, 6, minimum, { from: acc[4], value: amount });\n  //   let auction = web3.utils.toBN(response.logs[1].args._auctionId).toNumber();\n\n  //   await instance.userAuctionBid(auction, { from: acc[5], value: bidAmount });\n\n  //   // current bid should be 1 finney\n  //   let bidData = await instance.getBidData(auction, acc[5]);\n\n  //   assert.equal(bidData[0], bidAmount);\n\n  //   // 1, 2, 6\n  // })\n\n  // it(\"should return the open auctions\", async () => {\n  //   // last line comments on test above show the auctions that should be open at that time\n  //   // above this, auction 1, 2 and 6 should be open in no particular order.\n  //   let openAuctions = await instance.getOpenAuctions();\n\n  //   assert.equal(openAuctions.length, 3);\n  // })\n\n  // it(\"should revert when the minimum is not met in a bid\", async () => {\n  //   let newMinimum = web3.utils.toWei(\"2\", \"ether\");\n\n  //   await gop.createGOP(acc[9], \"7th hash\", { from: owner, value: amount }); // 7\n\n  //   let response = await core.createAuction(10, 7, newMinimum, { from: acc[9], value: amount });\n  //   let auction = web3.utils.toBN(response.logs[1].args._auctionId).toNumber();\n\n  //   try {\n  //     await instance.userAuctionBid(auction, { from: acc[1], value: web3.utils.toWei(\"1\", \"ether\") });\n  //     assert.fail(\"Expected revert not received\");\n  //   } catch (err) {\n  //     let revertFound = err.message.search(\"revert\") >= 0;\n  //     assert(revertFound, `Expected \"revert\", got ${err} instead`);\n  //   }\n\n  //   // 1, 2, 6, 7\n  // })\n\n  // it(\"should return the correct list of auctions where a user is participating\", async () => {\n  //   await gop.createGOP(acc[4], \"8th hash\", { from: owner, value: amount }); // 8\n\n  //   let response = await core.createAuction(1, 8, minimum, { from: acc[4], value: amount });\n  //   let auction = web3.utils.toBN(response.logs[1].args._auctionId).toNumber();\n\n  //   let participating = await instance.participatingIn(acc[6]);\n  //   assert.deepEqual(participating.length, 0);\n\n  //   await instance.userAuctionBid(auction, { from: acc[6], value: web3.utils.toWei(\"3\", \"ether\") });\n\n  //   participating = await instance.participatingIn(acc[6]);\n  //   assert.equal(participating.length, 1);\n\n  //   // 1, 2, 6, 7, 8\n  // })\n\n  // it(\"should send the horse back to the owner if there are no bidders on the Auction\", async () => {\n  //   await gop.createGOP(acc[4], \"9th hash\", { from: owner, value: amount }); // 9\n\n  //   let response = await core.createAuction(1, 9, minimum, { from: acc[4], value: amount });\n\n  //   let auction = web3.utils.toBN(response.logs[1].args._auctionId).toNumber();\n\n  //   let initOwner = await core.ownerOf(9);\n  //   assert.equal(initOwner, instance.address);\n\n  //   await instance.closeAuction(auction, { from: owner });\n  //   await instance.userAuctionWithdraw(auction, { from: acc[4] });\n\n  //   let newOwner = await core.ownerOf(9);\n  //   assert.equal(newOwner, acc[4]);\n  // })\n\n  // it(\"should cancel an auction whenever an owner wants\", async () => {\n  //   await gop.createGOP(acc[3], \"10th hash\", { from: acc[3], value: amount }); // 10\n\n  //   let response = await core.createAuction(100, 10, minimum, { from: acc[3], value: amount });\n  //   let auction = web3.utils.toBN(response.logs[1].args._auctionId).toNumber();\n\n  //   // should be true\n  //   let status = await instance.getAuctionStatus(auction);\n\n  //   assert.isTrue(status);\n\n  //   await instance.cancelAuction(auction, { from: acc[3] });\n\n  //   status = await instance.getAuctionStatus(auction);\n\n  //   assert.isFalse(status);\n  // })\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "AuctionsTest.js"
      ],
      "names": [
        "Core",
        "artifacts",
        "require",
        "SaleAuction",
        "GOPCreator",
        "HorseData",
        "contract",
        "core",
        "instance",
        "gop",
        "hd",
        "owner",
        "acc",
        "buyer",
        "amount",
        "web3",
        "utils",
        "toWei",
        "minimum",
        "before",
        "autogas",
        "new",
        "initialize",
        "address",
        "setGOPCreator",
        "from",
        "setSaleAuctionAddress",
        "setHorseDataAddr",
        "openBatch"
      ],
      "mappings": "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",
      "file": "AuctionsTest.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "sourcesContent": [
        "const Core = artifacts.require(\"Core\");\nconst SaleAuction = artifacts.require(\"SaleAuction\");\nconst GOPCreator = artifacts.require(\"GOPCreator\");\nconst HorseData = artifacts.require(\"HorseData\");\n\ncontract(\"Auctions\", acc => {\n  let core, instance, gop, hd;\n  let owner = acc[1];\n  let buyer = acc[8];\n  let amount = web3.utils.toWei(\"5\", \"ether\");\n  let minimum = web3.utils.toWei(\"0.001\", \"ether\");\n\n  before(\"setup instances\", async () => {\n    Core.autogas = true;\n\n    core = await Core.new();\n    await core.initialize(owner);\n\n    gop = await GOPCreator.new();\n    await gop.initialize(core.address, owner);\n\n    instance = await SaleAuction.new();\n    await instance.initialize(core.address, owner);\n\n    hd = await HorseData.new();\n    await hd.initialize();\n\n    await core.setGOPCreator(gop.address, { from: owner });\n    await core.setSaleAuctionAddress(instance.address, { from: owner });\n    await core.setHorseDataAddr(hd.address, { from: owner });\n\n    await gop.openBatch(1, { from: owner });\n  })\n\n  /*\n  Since we can't test the oracle, we're going to try to recreate\n  the function.\n  */\n  // it(\"should create an auction\", async () => {\n  //   await gop.createGOP(buyer, \"some hash\", { from: owner, value: amount }); // 0\n\n  //   await core.createAuction(10, 0, minimum, { from: buyer, value: amount });\n\n  //   let auctions = await instance.getAuctionsLength();\n  //   assert.equal(auctions.toString(), \"1\");\n\n  //   let status = await instance.getAuctionStatus(0);\n  //   assert.equal(status, true);\n\n  //   // 0\n  // })\n\n  // it(\"should record a new bid for an address\", async () => {\n  //   await gop.createGOP(buyer, \"other hash\", { from: owner, value: amount }); // 1\n\n  //   let res = await core.createAuction(1, 1, minimum, { from: buyer, value: amount });\n  //   let auctionId = web3.utils.toBN(res.logs[1].args._auctionId).toNumber();\n\n  //   // Auction should be open for a while, we're not calling the __callback function anyway.\n  //   await instance.userAuctionBid(auctionId, { from: acc[3], value: web3.utils.toWei(\"0.025\", \"ether\") });\n\n  //   // No one has bidded yet so the user should be the max bidder.\n  //   let maxBidder = await instance.getMaxBidder(auctionId);\n  //   assert.equal(maxBidder[0], acc[3]);\n\n  //   // Record another bid for a higher amount\n  //   await instance.userAuctionBid(auctionId, { from: acc[4], value: web3.utils.toWei(\"0.030\", \"ether\") });\n\n  //   let newMaxBidder = await instance.getMaxBidder(auctionId);\n  //   assert.equal(newMaxBidder[0], acc[4]);\n\n  //   // amount of bidders should be two (2)\n  //   let bidders = await instance.amountOfBidders(auctionId);\n  //   assert.equal(bidders.toString(), \"2\");\n\n  //   // 0, 1\n  // })\n\n  // it(\"should revert if the new bid amount is lower than the maxBid\", async () => {\n  //   await gop.createGOP(buyer, \"third hash\", { from: owner, value: amount }); // 2\n\n  //   let res = await core.createAuction(1, 2, minimum, { from: buyer, value: amount })\n  //   let auctionId = web3.utils.toBN(res.logs[1].args._auctionId).toNumber();\n\n  //   // Record a new bid.\n  //   await instance.userAuctionBid(auctionId, { from: acc[4], value: web3.utils.toWei(\"1\", \"ether\") })\n\n  //   // OpenZeppelin implementation.\n  //   try {\n  //     await instance.userAuctionBid(auctionId, { from: acc[3], value: web3.utils.toWei(\"0.5\", \"finney\") });\n\n  //     assert.fail(\"Expected revert not received\");\n  //   } catch (err) {\n  //     let revertFound = err.message.search(\"revert\") >= 0;\n  //     assert(revertFound, `Expected \"revert\", got ${err} instead`);\n  //   }\n\n  //   // 0, 1, 2\n  // })\n\n  // it(\"should let the owner close an auction\", async () => {\n  //   // We're going to close an already open auction\n  //   let status = await instance.getAuctionStatus(0);\n  //   assert.equal(status, true);\n\n  //   await instance.closeAuction(0, { from: owner });\n\n  //   status = await instance.getAuctionStatus(0);\n  //   assert.equal(status, false);\n\n  //   // 1, 2\n  // })\n\n  // it(\"should revert if not the owner tries to close an auction\", async () => {\n  //   // Again, we're using an existing auction.\n  //   let status = await instance.getAuctionStatus(1);\n\n  //   assert.equal(status, true);\n\n  //   try {\n  //     await instance.closeAuction(1, { from: acc[4] });\n  //     assert.fail(\"Expected revert not received\");\n  //   } catch (err) {\n  //     let revertFound = err.message.search(\"revert\") >= 0;\n  //     assert(revertFound, `Expected \"revert\", got ${err} instead`);\n  //   }\n\n  //   // 1, 2\n  // })\n\n  // it(\"should send the token to the max bidder of an auction\", async () => {\n  //   await gop.createGOP(buyer, \"fourth hash\", { from: owner, value: amount }) // 3\n\n  //   let res = await core.createAuction(1, 3, minimum, { from: buyer, value: amount })\n  //   let auctionId = web3.utils.toBN(res.logs[1].args._auctionId).toNumber();\n\n  //   await instance.userAuctionBid(auctionId, { from: acc[7], value: amount })\n\n  //   // Auction closed\n  //   await instance.closeAuction(auctionId, { from: owner });\n\n  //   // maxBidder claims the reward\n  //   await instance.userAuctionWithdraw(auctionId, { from: acc[7] });\n\n  //   let tokenOwner = await core.ownerOf(3);\n\n  //   assert.equal(tokenOwner, acc[7]);\n\n  //   // Horse should be +1 to amount of times being sold.\n  //   let data = await core.getHorseData(3);\n\n  //   assert.equal(web3.utils.toBN(data[5]).toNumber(), 1);\n  //   // 1, 2\n  // })\n\n  // it(\"should send max bid to the auction owner\", async () => {\n  //   await gop.createGOP(buyer, \"fifth hash\", { from: owner, value: amount }) // 4\n\n  //   let res = await core.createAuction(1, 4, minimum, { from: buyer, value: amount });\n\n  //   let auction = web3.utils.toBN(res.logs[1].args._auctionId).toNumber();\n\n  //   await instance.userAuctionBid(auction, { from: acc[4], value: web3.utils.toWei(\"1\", \"finney\") });\n\n  //   await instance.closeAuction(auction, { from: owner });\n\n  //   let withdraw = await instance.userAuctionWithdraw(auction, { from: buyer });\n  //   let withdraw_returns = withdraw.logs[0].args;\n  //   let user = withdraw_returns._user\n  //   let payout = withdraw_returns._payout;\n\n  //   assert.equal(user, buyer);\n  //   assert.equal(payout, web3.utils.toWei(\"1\", \"finney\"));\n\n  //   // 1, 2\n  // })\n\n  // it(\"should get the amount they bid if they're not the owner or winner\", async () => {\n  //   await gop.createGOP(buyer, \"fifth hash\", { from: owner, value: amount }); // 5\n\n  //   let res = await core.createAuction(1, 5, minimum, { from: buyer, value: amount });\n  //   let auction = web3.utils.toBN(res.logs[1].args._auctionId).toNumber();\n\n  //   await instance.userAuctionBid(auction, { from: acc[5], value: web3.utils.toWei(\"1\", \"finney\") });\n\n  //   await instance.userAuctionBid(auction, { from: acc[4], value: web3.utils.toWei(\"2\", \"finney\") });\n\n  //   await instance.closeAuction(auction, { from: owner });\n\n  //   // Not the winner nor the owner\n  //   let withdraw = await instance.userAuctionWithdraw(auction, { from: acc[5] });\n  //   let withdraw_returns = withdraw.logs[0].args;\n  //   let address = withdraw_returns._user;\n  //   let payout = withdraw_returns._payout;\n\n  //   assert.equal(address, acc[5]);\n  //   assert.equal(payout, web3.utils.toWei(\"1\", \"finney\"));\n\n  //   // 1, 2\n  // })\n\n  // it(\"should return the bid of a given address in an auction\", async () => {\n  //   let bidAmount = web3.utils.toWei(\"1\", \"finney\");\n  //   // We'll create another token and auction here\n  //   await gop.createGOP(acc[4], \"6th hash\", { from: owner, value: amount }); // 6\n\n  //   let response = await core.createAuction(1, 6, minimum, { from: acc[4], value: amount });\n  //   let auction = web3.utils.toBN(response.logs[1].args._auctionId).toNumber();\n\n  //   await instance.userAuctionBid(auction, { from: acc[5], value: bidAmount });\n\n  //   // current bid should be 1 finney\n  //   let bidData = await instance.getBidData(auction, acc[5]);\n\n  //   assert.equal(bidData[0], bidAmount);\n\n  //   // 1, 2, 6\n  // })\n\n  // it(\"should return the open auctions\", async () => {\n  //   // last line comments on test above show the auctions that should be open at that time\n  //   // above this, auction 1, 2 and 6 should be open in no particular order.\n  //   let openAuctions = await instance.getOpenAuctions();\n\n  //   assert.equal(openAuctions.length, 3);\n  // })\n\n  // it(\"should revert when the minimum is not met in a bid\", async () => {\n  //   let newMinimum = web3.utils.toWei(\"2\", \"ether\");\n\n  //   await gop.createGOP(acc[9], \"7th hash\", { from: owner, value: amount }); // 7\n\n  //   let response = await core.createAuction(10, 7, newMinimum, { from: acc[9], value: amount });\n  //   let auction = web3.utils.toBN(response.logs[1].args._auctionId).toNumber();\n\n  //   try {\n  //     await instance.userAuctionBid(auction, { from: acc[1], value: web3.utils.toWei(\"1\", \"ether\") });\n  //     assert.fail(\"Expected revert not received\");\n  //   } catch (err) {\n  //     let revertFound = err.message.search(\"revert\") >= 0;\n  //     assert(revertFound, `Expected \"revert\", got ${err} instead`);\n  //   }\n\n  //   // 1, 2, 6, 7\n  // })\n\n  // it(\"should return the correct list of auctions where a user is participating\", async () => {\n  //   await gop.createGOP(acc[4], \"8th hash\", { from: owner, value: amount }); // 8\n\n  //   let response = await core.createAuction(1, 8, minimum, { from: acc[4], value: amount });\n  //   let auction = web3.utils.toBN(response.logs[1].args._auctionId).toNumber();\n\n  //   let participating = await instance.participatingIn(acc[6]);\n  //   assert.deepEqual(participating.length, 0);\n\n  //   await instance.userAuctionBid(auction, { from: acc[6], value: web3.utils.toWei(\"3\", \"ether\") });\n\n  //   participating = await instance.participatingIn(acc[6]);\n  //   assert.equal(participating.length, 1);\n\n  //   // 1, 2, 6, 7, 8\n  // })\n\n  // it(\"should send the horse back to the owner if there are no bidders on the Auction\", async () => {\n  //   await gop.createGOP(acc[4], \"9th hash\", { from: owner, value: amount }); // 9\n\n  //   let response = await core.createAuction(1, 9, minimum, { from: acc[4], value: amount });\n\n  //   let auction = web3.utils.toBN(response.logs[1].args._auctionId).toNumber();\n\n  //   let initOwner = await core.ownerOf(9);\n  //   assert.equal(initOwner, instance.address);\n\n  //   await instance.closeAuction(auction, { from: owner });\n  //   await instance.userAuctionWithdraw(auction, { from: acc[4] });\n\n  //   let newOwner = await core.ownerOf(9);\n  //   assert.equal(newOwner, acc[4]);\n  // })\n\n  // it(\"should cancel an auction whenever an owner wants\", async () => {\n  //   await gop.createGOP(acc[3], \"10th hash\", { from: acc[3], value: amount }); // 10\n\n  //   let response = await core.createAuction(100, 10, minimum, { from: acc[3], value: amount });\n  //   let auction = web3.utils.toBN(response.logs[1].args._auctionId).toNumber();\n\n  //   // should be true\n  //   let status = await instance.getAuctionStatus(auction);\n\n  //   assert.isTrue(status);\n\n  //   await instance.cancelAuction(auction, { from: acc[3] });\n\n  //   status = await instance.getAuctionStatus(auction);\n\n  //   assert.isFalse(status);\n  // })\n})\n"
      ]
    },
    "mtime": 1600876828535
  },
  "{\"filename\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test/BreedingTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/BreedingTest.js",
      "filenameRelative": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/BreedingTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "BreedingTest.js",
      "sourceFileName": "BreedingTest.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "BreedingTest"
    },
    "ignored": false,
    "code": "'use strict';\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar Breeding = artifacts.require('Breeding');\nvar Core = artifacts.require('Core');\nvar GOPCreator = artifacts.require('GOPCreatorV2');\nvar PrivGOP = artifacts.require('PrivateGOPCreatorV2');\nvar HorseData = artifacts.require('HorseData');\nvar StudService = artifacts.require('StudServiceV4');\nvar BreedTypes = artifacts.require('BreedTypes');\n\ncontract('Breeding', function (acc) {\n  var core = void 0,\n      breeding = void 0,\n      privGOP = void 0,\n      gop = void 0,\n      hd = void 0,\n      breedTypes = void 0,\n      studService = void 0;\n  var owner = acc[1];\n  var poolAddress = acc[9];\n  var amount = web3.utils.toWei('1', 'ether');\n  var priceyAmount = web3.utils.toWei('25', 'ether');\n\n  before(_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Core.autogas = true;\n\n          case 1:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  beforeEach('setup instances', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return Core.new();\n\n          case 2:\n            core = _context2.sent;\n            _context2.next = 5;\n            return core.initialize(owner);\n\n          case 5:\n            _context2.next = 7;\n            return PrivGOP.new();\n\n          case 7:\n            privGOP = _context2.sent;\n            _context2.next = 10;\n            return GOPCreator.new(owner, privGOP.address, core.address, acc[3], {\n              from: owner\n            });\n\n          case 10:\n            gop = _context2.sent;\n            _context2.next = 13;\n            return HorseData.new();\n\n          case 13:\n            hd = _context2.sent;\n            _context2.next = 16;\n            return hd.initialize();\n\n          case 16:\n            _context2.next = 18;\n            return BreedTypes.new();\n\n          case 18:\n            breedTypes = _context2.sent;\n            _context2.next = 21;\n            return breedTypes.initialize(owner);\n\n          case 21:\n            _context2.next = 23;\n            return breedTypes.populateMatrix({\n              from: owner\n            });\n\n          case 23:\n            _context2.next = 25;\n            return StudService.new(core.address, breedTypes.address, acc[2], {\n              from: owner\n            });\n\n          case 25:\n            studService = _context2.sent;\n            _context2.next = 28;\n            return Breeding.new();\n\n          case 28:\n            breeding = _context2.sent;\n            _context2.next = 31;\n            return breeding.initialize(owner, core.address, studService.address, poolAddress, breedTypes.address, breeding.address);\n\n          case 31:\n            _context2.next = 33;\n            return core.setBreedingAddr(breeding.address, {\n              from: owner\n            });\n\n          case 33:\n            _context2.next = 35;\n            return core.setGOPCreator(gop.address, {\n              from: owner\n            });\n\n          case 35:\n            _context2.next = 37;\n            return core.setHorseDataAddr(hd.address, {\n              from: owner\n            });\n\n          case 37:\n            _context2.next = 39;\n            return breedTypes.setBreedingAddress(breeding.address, {\n              from: owner\n            });\n\n          case 39:\n            _context2.next = 41;\n            return gop.openBatch(1, {\n              from: owner\n            });\n\n          case 41:\n            _context2.next = 43;\n            return gop.createGOP(owner, 'male hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 43:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })) // 0 Genesis token\n  );\n\n  it('should mix two horses', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var firstOffspringStats, secondOffspringStats, ownerOfToken;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context3.next = 4;\n            return gop.createGOP(acc[2], 'male hash', {\n              from: acc[2],\n              value: amount\n            });\n\n          case 4:\n            _context3.next = 6;\n            return studService.putInStud(2, amount, 1000, {\n              from: acc[2]\n            });\n\n          case 6:\n            _context3.next = 8;\n            return breeding.mix(2, 1, 'offspring hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 8:\n            _context3.next = 10;\n            return breeding.getHorseOffspringStats(1);\n\n          case 10:\n            firstOffspringStats = _context3.sent;\n            _context3.next = 13;\n            return breeding.getHorseOffspringStats(1);\n\n          case 13:\n            secondOffspringStats = _context3.sent;\n\n\n            assert.equal(web3.utils.toBN(firstOffspringStats).toNumber(), 1);\n            assert.equal(web3.utils.toBN(secondOffspringStats).toNumber(), 1);\n\n            // Ensure the owner is the owner of the female horse\n            _context3.next = 18;\n            return core.ownerOf(3);\n\n          case 18:\n            ownerOfToken = _context3.sent;\n\n            assert.equal(ownerOfToken, owner);\n\n          case 20:\n          case 'end':\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  })));\n\n  it('should create a base value for the offspring', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    var baseValue;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context4.next = 4;\n            return gop.createGOP(acc[2], 'male hash', {\n              from: acc[2],\n              value: amount\n            });\n\n          case 4:\n            _context4.next = 6;\n            return studService.putInStud(2, amount, 1000, {\n              from: acc[2]\n            });\n\n          case 6:\n            _context4.next = 8;\n            return breeding.mix(2, 1, 'offspring hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 8:\n            _context4.next = 10;\n            return core.getBaseValue(3);\n\n          case 10:\n            baseValue = _context4.sent;\n\n            assert.notEqual(web3.utils.toBN(baseValue).toNumber(), 0);\n\n            // The parents of the third horse are horses from the first Gen, they have high base value\n            // so offspring's base value shoul dbe at least 50.\n            assert.isAbove(web3.utils.toBN(baseValue).toNumber(), 50);\n\n          case 13:\n          case 'end':\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined);\n  })));\n  //\n  it('should return the correct genotype for a given horse', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n    var genotype;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context5.next = 4;\n            return gop.createGOP(acc[2], 'male hash', {\n              from: acc[2],\n              value: amount\n            });\n\n          case 4:\n            _context5.next = 6;\n            return studService.putInStud(2, amount, 1000, {\n              from: acc[2]\n            });\n\n          case 6:\n            _context5.next = 8;\n            return breeding.mix(2, 1, 'offspring hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 8:\n            _context5.next = 10;\n            return core.getHorseData(3);\n\n          case 10:\n            genotype = _context5.sent;\n            // At this point parents had 1 and 1 as genotype.\n            assert.equal(web3.utils.toBN(genotype[5]).toNumber(), 2);\n\n          case 12:\n          case 'end':\n            return _context5.stop();\n        }\n      }\n    }, _callee5, undefined);\n  })));\n  //\n  // Maybe same as above tests but with a more direct approach\n  it('should revert when mixing two offsprings from the same parents', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n    var maleOffspring, femaleOffspring;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context6.next = 4;\n            return gop.createGOP(acc[2], 'male hash', {\n              from: acc[2],\n              value: amount\n            });\n\n          case 4:\n            _context6.next = 6;\n            return studService.putInStud(2, amount, 1000, {\n              from: acc[2]\n            });\n\n          case 6:\n            _context6.next = 8;\n            return createOffspring(2, 1, 'offspring hash', owner, amount, 'M');\n\n          case 8:\n            maleOffspring = _context6.sent;\n            _context6.next = 11;\n            return createOffspring(2, 1, 'offspring hash', owner, amount, 'F');\n\n          case 11:\n            femaleOffspring = _context6.sent;\n            _context6.next = 14;\n            return studService.putInStud(maleOffspring, amount, 1000, {\n              from: owner\n            });\n\n          case 14:\n            _context6.prev = 14;\n            _context6.next = 17;\n            return breeding.mix(maleOffspring, femaleOffspring, 'failed female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 17:\n            assert.fail('Expected revert not received');\n            _context6.next = 23;\n            break;\n\n          case 20:\n            _context6.prev = 20;\n            _context6.t0 = _context6['catch'](14);\n\n            assert.equal(_context6.t0.reason, 'BR horsesAreBrothers');\n\n          case 23:\n          case 'end':\n            return _context6.stop();\n        }\n      }\n    }, _callee6, undefined, [[14, 20]]);\n  })));\n\n  it('should revert when mixing an offspring with a parent', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n    var femaleOffspring;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context7.next = 4;\n            return gop.createGOP(acc[2], 'male hash', {\n              from: acc[2],\n              value: amount\n            });\n\n          case 4:\n            _context7.next = 6;\n            return studService.putInStud(2, amount, 1000, {\n              from: acc[2]\n            });\n\n          case 6:\n            _context7.next = 8;\n            return createOffspring(2, 1, 'offspring hash', owner, amount, 'F');\n\n          case 8:\n            femaleOffspring = _context7.sent;\n            _context7.prev = 9;\n            _context7.next = 12;\n            return breeding.mix(2, femaleOffspring, 'failed female hash', {\n              from: owner,\n              value: priceyAmount\n            });\n\n          case 12:\n            assert.fail('Expected revert not received');\n            _context7.next = 18;\n            break;\n\n          case 15:\n            _context7.prev = 15;\n            _context7.t0 = _context7['catch'](9);\n\n            assert.equal(_context7.t0.reason, 'BR horsesAreDirectlyRelated');\n\n          case 18:\n          case 'end':\n            return _context7.stop();\n        }\n      }\n    }, _callee7, undefined, [[9, 15]]);\n  })));\n\n  it('should revert when mixing two horses with the same sex', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context8.next = 4;\n            return gop.createGOP(acc[2], 'male hash', {\n              from: acc[2],\n              value: amount\n            });\n\n          case 4:\n            _context8.next = 6;\n            return gop.createGOP(acc[2], 'female hash', {\n              from: acc[2],\n              value: amount\n            });\n\n          case 6:\n            _context8.next = 8;\n            return gop.createGOP(acc[2], 'male hash', {\n              from: acc[2],\n              value: amount\n            });\n\n          case 8:\n            _context8.next = 10;\n            return studService.putInStud(2, amount, 1000, {\n              from: acc[2]\n            });\n\n          case 10:\n            _context8.prev = 10;\n            _context8.next = 13;\n            return breeding.mix(1, 3, 'failed male hash', {\n              from: acc[4]\n            });\n\n          case 13:\n            assert.fail('Expected revert not received');\n            _context8.next = 19;\n            break;\n\n          case 16:\n            _context8.prev = 16;\n            _context8.t0 = _context8['catch'](10);\n\n            assert.equal(_context8.t0.reason, 'BR expectedMaleHorseReceivedFemale');\n\n          case 19:\n          case 'end':\n            return _context8.stop();\n        }\n      }\n    }, _callee8, undefined, [[10, 16]]);\n  })));\n\n  it(\"should revert when the second parameter isn't a female horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context9.next = 4;\n            return gop.createGOP(acc[2], 'male hash', {\n              from: acc[2],\n              value: amount\n            });\n\n          case 4:\n            _context9.next = 6;\n            return gop.createGOP(acc[2], 'female hash', {\n              from: acc[2],\n              value: amount\n            });\n\n          case 6:\n            _context9.next = 8;\n            return gop.createGOP(acc[2], 'male hash', {\n              from: acc[2],\n              value: amount\n            });\n\n          case 8:\n            _context9.next = 10;\n            return studService.putInStud(2, amount, 1000, {\n              from: acc[2]\n            });\n\n          case 10:\n            _context9.prev = 10;\n            _context9.next = 13;\n            return breeding.mix(2, 4, 'failed male hash', {\n              from: acc[3]\n            });\n\n          case 13:\n            assert.fail('Expected revert not received');\n            _context9.next = 19;\n            break;\n\n          case 16:\n            _context9.prev = 16;\n            _context9.t0 = _context9['catch'](10);\n\n            assert.equal(_context9.t0.reason, 'BR expectedFemaleHorseReceivedMale');\n\n          case 19:\n          case 'end':\n            return _context9.stop();\n        }\n      }\n    }, _callee9, undefined, [[10, 16]]);\n  })));\n\n  it('should revert when mixing with ancestors', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n    var firstOffspringMale, secondOffspringMale;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context10.next = 4;\n            return gop.createGOP(owner, 'male hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 4:\n            _context10.next = 6;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 6:\n            _context10.next = 8;\n            return gop.createGOP(owner, 'male hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 8:\n            _context10.next = 10;\n            return studService.putInStud(2, amount, 1, {\n              from: owner\n            });\n\n          case 10:\n            _context10.next = 12;\n            return studService.putInStud(4, amount, 1, {\n              from: owner\n            });\n\n          case 12:\n            _context10.next = 14;\n            return createOffspring(2, 1, 'offspring', owner, amount, 'M');\n\n          case 14:\n            firstOffspringMale = _context10.sent;\n            _context10.next = 17;\n            return studService.putInStud(firstOffspringMale, amount, 1, {\n              from: owner\n            });\n\n          case 17:\n            _context10.next = 19;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 19:\n            _context10.next = 21;\n            return createOffspring(firstOffspringMale, firstOffspringMale + 1, 'ofspring', owner, amount, 'M');\n\n          case 21:\n            secondOffspringMale = _context10.sent;\n            _context10.next = 24;\n            return studService.putInStud(secondOffspringMale, amount, 1, {\n              from: owner\n            });\n\n          case 24:\n            _context10.next = 26;\n            return gop.createGOP(owner, 'male hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 26:\n            _context10.next = 28;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 28:\n            _context10.next = 30;\n            return createOffspring(firstOffspringMale, secondOffspringMale + 2, 'offspring', owner, amount, 'M');\n\n          case 30:\n            _context10.prev = 30;\n            _context10.next = 33;\n            return breeding.mix(secondOffspringMale, 1, 'failed female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 33:\n            assert.fail('Expected revert not received');\n            _context10.next = 39;\n            break;\n\n          case 36:\n            _context10.prev = 36;\n            _context10.t0 = _context10['catch'](30);\n\n            assert.equal(_context10.t0.reason, 'BR horseIsGrandchild');\n\n          case 39:\n          case 'end':\n            return _context10.stop();\n        }\n      }\n    }, _callee10, undefined, [[30, 36]]);\n  })));\n\n  it('should send part of the reserve amount to the owner of the horse when mixing', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n    var preBalance, currBalance;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context11.next = 4;\n            return gop.createGOP(acc[3], 'male hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 4:\n            _context11.t0 = web3.utils;\n            _context11.next = 7;\n            return web3.eth.getBalance(acc[3]);\n\n          case 7:\n            _context11.t1 = _context11.sent;\n            preBalance = _context11.t0.toWei.call(_context11.t0, _context11.t1);\n            _context11.next = 11;\n            return studService.putInStud(2, amount, 1, {\n              from: acc[3]\n            });\n\n          case 11:\n            _context11.next = 13;\n            return breeding.mix(2, 1, 'male offspring hash', {\n              from: owner,\n              value: priceyAmount\n            });\n\n          case 13:\n            _context11.t2 = web3.utils;\n            _context11.next = 16;\n            return web3.eth.getBalance(acc[3]);\n\n          case 16:\n            _context11.t3 = _context11.sent;\n            currBalance = _context11.t2.toWei.call(_context11.t2, _context11.t3);\n\n\n            assert.isTrue(preBalance < currBalance);\n\n          case 19:\n          case 'end':\n            return _context11.stop();\n        }\n      }\n    }, _callee11, undefined);\n  })));\n\n  it('should select the correct bloodline based in parents', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n    var data, i, lastHorse;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context12.next = 4;\n            return gop.createGOP(acc[6], 'male hash', {\n              from: acc[6],\n              value: amount\n            });\n\n          case 4:\n            _context12.next = 6;\n            return studService.putInStud(2, amount, 1, {\n              from: acc[6]\n            });\n\n          case 6:\n            _context12.next = 8;\n            return breeding.mix(2, 1, 'offspring hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 8:\n            _context12.next = 10;\n            return core.getHorseData(3);\n\n          case 10:\n            data = _context12.sent;\n            // Nakamoto + Nakamoto = Nakamoto\n\n            assert.equal(web3.utils.hexToUtf8(data[6]), 'N');\n\n            i = 3;\n\n          case 13:\n            if (!(i <= 300)) {\n              _context12.next = 27;\n              break;\n            }\n\n            if (!(i == 100)) {\n              _context12.next = 19;\n              break;\n            }\n\n            _context12.next = 17;\n            return gop.openBatch(2, {\n              from: owner\n            });\n\n          case 17:\n            _context12.next = 22;\n            break;\n\n          case 19:\n            if (!(i == 299)) {\n              _context12.next = 22;\n              break;\n            }\n\n            _context12.next = 22;\n            return gop.openBatch(3, {\n              from: owner\n            });\n\n          case 22:\n            _context12.next = 24;\n            return gop.createGOP(acc[5], 'random hash', {\n              from: acc[5],\n              value: amount\n            });\n\n          case 24:\n            i++;\n            _context12.next = 13;\n            break;\n\n          case 27:\n            _context12.next = 29;\n            return breeding.mix(2, 300, 'male offspring hash', {\n              from: acc[5],\n              value: amount\n            });\n\n          case 29:\n            _context12.next = 31;\n            return core.totalSupply();\n\n          case 31:\n            lastHorse = _context12.sent;\n            _context12.next = 34;\n            return core.getHorseData(lastHorse - 1);\n\n          case 34:\n            data = _context12.sent;\n\n            assert.equal(web3.utils.hexToUtf8(data[6]), 'S');\n\n          case 36:\n          case 'end':\n            return _context12.stop();\n        }\n      }\n    }, _callee12, undefined);\n  })));\n\n  it('should change the type of the horse once it has has its first offspring', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n    var maleType, femaleType;\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context13.next = 4;\n            return gop.createGOP(acc[6], 'male hash', {\n              from: acc[6],\n              value: amount\n            });\n\n          case 4:\n            _context13.next = 6;\n            return studService.putInStud(2, amount, 1, {\n              from: acc[6]\n            });\n\n          case 6:\n            _context13.next = 8;\n            return core.getHorseData(2);\n\n          case 8:\n            maleType = _context13.sent;\n            _context13.next = 11;\n            return core.getHorseData(1);\n\n          case 11:\n            femaleType = _context13.sent;\n\n\n            assert.equal(web3.utils.hexToUtf8(maleType[7]), 'Colt'); // Colt\n            assert.equal(web3.utils.hexToUtf8(femaleType[7]), 'Filly'); // Filly\n\n            _context13.next = 16;\n            return breeding.mix(2, 1, 'offspring hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 16:\n            _context13.next = 18;\n            return core.getHorseData(2);\n\n          case 18:\n            maleType = _context13.sent;\n            _context13.next = 21;\n            return core.getHorseData(1);\n\n          case 21:\n            femaleType = _context13.sent;\n\n\n            assert.equal(web3.utils.hexToUtf8(maleType[7]), 'Stallion');\n            assert.equal(web3.utils.hexToUtf8(femaleType[7]), 'Mare');\n\n          case 24:\n          case 'end':\n            return _context13.stop();\n        }\n      }\n    }, _callee13, undefined);\n  })));\n\n  it('should distribute funds differently when owners are not the same', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n    var breed, breedingFunds, studOwnerPay, racesPoolPay;\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context14.next = 4;\n            return gop.createGOP(acc[6], 'male hash', {\n              from: acc[6],\n              value: amount\n            });\n\n          case 4:\n            _context14.next = 6;\n            return studService.putInStud(2, amount, 1, {\n              from: acc[6]\n            });\n\n          case 6:\n            _context14.next = 8;\n            return breeding.mix(2, 1, 'male offspring hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 8:\n            breed = _context14.sent;\n            breedingFunds = breed.logs[0];\n\n            // horse 18 is in stud for 1 day (default)\n            // owner should get 24%\n\n            studOwnerPay = amount * 24 / 100;\n\n            // races pool should get 56%\n\n            racesPoolPay = amount * 56 / 100;\n\n            // zed should get 0%\n\n            assert.equal(breedingFunds.args._studOwner.toString(), studOwnerPay.toString());\n            assert.equal(breedingFunds.args._racesPool.toString(), racesPoolPay.toString());\n            assert.equal(breedingFunds.args._zed.toString(), '0');\n\n          case 15:\n          case 'end':\n            return _context14.stop();\n        }\n      }\n    }, _callee14, undefined);\n  })));\n\n  it('should distribute the funds differently when owners are the same', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n    var breed, breedingFunds;\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.next = 2;\n            return gop.createGOP(owner, 'female hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context15.next = 4;\n            return gop.createGOP(owner, 'male hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 4:\n            _context15.next = 6;\n            return studService.putInStud(2, amount, 100, {\n              from: owner\n            });\n\n          case 6:\n            _context15.next = 8;\n            return breeding.mix(2, 1, 'offspring hash', {\n              from: owner,\n              value: amount\n            });\n\n          case 8:\n            breed = _context15.sent;\n            breedingFunds = breed.logs[0];\n\n            // stud owner should get 0\n            // races pool should get 100%\n            // zed should get 0%\n\n            assert.equal(breedingFunds.args._studOwner.toString(), '0');\n            assert.equal(breedingFunds.args._racesPool.toString(), amount.toString());\n            assert.equal(breedingFunds.args._zed.toString(), '0');\n\n          case 13:\n          case 'end':\n            return _context15.stop();\n        }\n      }\n    }, _callee15, undefined);\n  })));\n\n  var createOffspring = function () {\n    var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(male, female, hash, from, value, wantedGender) {\n      var lastHorseId, lastHorse, sex;\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              lastHorseId = void 0;\n\n            case 1:\n              if (!true) {\n                _context16.next = 15;\n                break;\n              }\n\n              _context16.next = 4;\n              return breeding.mix(male, female, hash, {\n                from: from,\n                value: value\n              });\n\n            case 4:\n              _context16.next = 6;\n              return core.totalSupply();\n\n            case 6:\n              lastHorse = _context16.sent;\n              _context16.next = 9;\n              return core.getHorseSex(lastHorse - 1);\n\n            case 9:\n              sex = _context16.sent;\n\n              if (!(web3.utils.toUtf8(sex) === wantedGender)) {\n                _context16.next = 13;\n                break;\n              }\n\n              lastHorseId = lastHorse - 1;\n              return _context16.abrupt('break', 15);\n\n            case 13:\n              _context16.next = 1;\n              break;\n\n            case 15:\n              return _context16.abrupt('return', lastHorseId);\n\n            case 16:\n            case 'end':\n              return _context16.stop();\n          }\n        }\n      }, _callee16, undefined);\n    }));\n\n    return function createOffspring(_x, _x2, _x3, _x4, _x5, _x6) {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "BreedingTest.js"
      ],
      "names": [
        "Breeding",
        "artifacts",
        "require",
        "Core",
        "GOPCreator",
        "PrivGOP",
        "HorseData",
        "StudService",
        "BreedTypes",
        "contract",
        "core",
        "breeding",
        "privGOP",
        "gop",
        "hd",
        "breedTypes",
        "studService",
        "owner",
        "acc",
        "poolAddress",
        "amount",
        "web3",
        "utils",
        "toWei",
        "priceyAmount",
        "before",
        "autogas",
        "beforeEach",
        "new",
        "initialize",
        "address",
        "from",
        "populateMatrix",
        "setBreedingAddr",
        "setGOPCreator",
        "setHorseDataAddr",
        "setBreedingAddress",
        "openBatch",
        "createGOP",
        "value",
        "it",
        "putInStud",
        "mix",
        "getHorseOffspringStats",
        "firstOffspringStats",
        "secondOffspringStats",
        "assert",
        "equal",
        "toBN",
        "toNumber",
        "ownerOf",
        "ownerOfToken",
        "getBaseValue",
        "baseValue",
        "notEqual",
        "isAbove",
        "getHorseData",
        "genotype",
        "createOffspring",
        "maleOffspring",
        "femaleOffspring",
        "fail",
        "reason",
        "firstOffspringMale",
        "secondOffspringMale",
        "eth",
        "getBalance",
        "preBalance",
        "currBalance",
        "isTrue",
        "data",
        "hexToUtf8",
        "i",
        "totalSupply",
        "lastHorse",
        "maleType",
        "femaleType",
        "breed",
        "breedingFunds",
        "logs",
        "studOwnerPay",
        "racesPoolPay",
        "args",
        "_studOwner",
        "toString",
        "_racesPool",
        "_zed",
        "male",
        "female",
        "hash",
        "wantedGender",
        "lastHorseId",
        "getHorseSex",
        "sex",
        "toUtf8"
      ],
      "mappings": "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",
      "file": "BreedingTest.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "sourcesContent": [
        "const Breeding = artifacts.require('Breeding')\nconst Core = artifacts.require('Core')\nconst GOPCreator = artifacts.require('GOPCreatorV2')\nconst PrivGOP = artifacts.require('PrivateGOPCreatorV2')\nconst HorseData = artifacts.require('HorseData')\nconst StudService = artifacts.require('StudServiceV4')\nconst BreedTypes = artifacts.require('BreedTypes')\n\ncontract('Breeding', acc => {\n  let core, breeding, privGOP, gop, hd, breedTypes, studService\n  let owner = acc[1]\n  let poolAddress = acc[9]\n  let amount = web3.utils.toWei('1', 'ether')\n  let priceyAmount = web3.utils.toWei('25', 'ether')\n\n  before(async() => {\n    Core.autogas = true\n  })\n\n  beforeEach('setup instances', async() => {\n    core = await Core.new()\n    await core.initialize(owner)\n\n    privGOP = await PrivGOP.new();\n\n    gop = await GOPCreator.new(owner, privGOP.address, core.address, acc[3], {\n      from: owner\n    })\n\n    hd = await HorseData.new()\n    await hd.initialize()\n\n    breedTypes = await BreedTypes.new()\n    await breedTypes.initialize(owner)\n    await breedTypes.populateMatrix({\n      from: owner\n    })\n\n    studService = await StudService.new(core.address, breedTypes.address, acc[2], {\n      from: owner\n    })\n\n    breeding = await Breeding.new()\n    await breeding.initialize(owner, core.address, studService.address, poolAddress,\n      breedTypes.address, breeding.address)\n\n    await core.setBreedingAddr(breeding.address, {\n      from: owner\n    })\n    await core.setGOPCreator(gop.address, {\n      from: owner\n    })\n    await core.setHorseDataAddr(hd.address, {\n      from: owner\n    })\n\n    await breedTypes.setBreedingAddress(breeding.address, {\n      from: owner\n    })\n\n    await gop.openBatch(1, {\n      from: owner\n    });\n\n    // Creating a genesis token since we can't mix with a genesis horse.\n    await gop.createGOP(owner, 'male hash', {\n        from: owner,\n        value: amount\n      }) // 0 Genesis token\n  })\n\n  it('should mix two horses', async() => {\n    // Mint two tokens.\n    await gop.createGOP(owner, 'female hash', {\n        from: owner,\n        value: amount\n      }) // 1\n    await gop.createGOP(acc[2], 'male hash', {\n        from: acc[2],\n        value: amount\n      }) // 2\n\n    await studService.putInStud(2, amount, 1000, {\n      from: acc[2]\n    })\n\n    // This should create another token.\n    await breeding.mix(2, 1, 'offspring hash', {\n        from: owner,\n        value: amount\n      }) // 3\n\n    let firstOffspringStats = await breeding.getHorseOffspringStats(1)\n    let secondOffspringStats = await breeding.getHorseOffspringStats(1)\n\n    assert.equal(web3.utils.toBN(firstOffspringStats)\n      .toNumber(), 1)\n    assert.equal(web3.utils.toBN(secondOffspringStats)\n      .toNumber(), 1)\n\n    // Ensure the owner is the owner of the female horse\n    let ownerOfToken = await core.ownerOf(3)\n    assert.equal(ownerOfToken, owner)\n  })\n\n  it('should create a base value for the offspring', async() => {\n      await gop.createGOP(owner, 'female hash', {\n          from: owner,\n          value: amount\n        }) // 1\n      await gop.createGOP(acc[2], 'male hash', {\n          from: acc[2],\n          value: amount\n        }) // 2\n\n      await studService.putInStud(2, amount, 1000, {\n        from: acc[2]\n      })\n\n      await breeding.mix(2, 1, 'offspring hash', {\n          from: owner,\n          value: amount\n        }) // 3\n\n      let baseValue = await core.getBaseValue(3)\n      assert.notEqual(web3.utils.toBN(baseValue)\n        .toNumber(), 0)\n\n      // The parents of the third horse are horses from the first Gen, they have high base value\n      // so offspring's base value shoul dbe at least 50.\n      assert.isAbove(web3.utils.toBN(baseValue)\n        .toNumber(), 50)\n    })\n    //\n  it('should return the correct genotype for a given horse', async() => {\n      // At this point we're going to use two ZED 1 (0) horses.\n      await gop.createGOP(owner, 'female hash', {\n          from: owner,\n          value: amount\n        }) // 1\n      await gop.createGOP(acc[2], 'male hash', {\n          from: acc[2],\n          value: amount\n        }) // 2\n\n      await studService.putInStud(2, amount, 1000, {\n        from: acc[2]\n      })\n\n      await breeding.mix(2, 1, 'offspring hash', {\n          from: owner,\n          value: amount\n        }) // 3\n\n      let genotype = await core.getHorseData(3) // At this point parents had 1 and 1 as genotype.\n      assert.equal(web3.utils.toBN(genotype[5])\n        .toNumber(), 2)\n    })\n    //\n    // Maybe same as above tests but with a more direct approach\n  it('should revert when mixing two offsprings from the same parents', async() => {\n    await gop.createGOP(owner, 'female hash', {\n        from: owner,\n        value: amount\n      }) // 1\n    await gop.createGOP(acc[2], 'male hash', {\n        from: acc[2],\n        value: amount\n      }) // 2\n\n    await studService.putInStud(2, amount, 1000, {\n      from: acc[2]\n    })\n\n    let maleOffspring = await createOffspring(2, 1, 'offspring hash', owner, amount, 'M')\n    let femaleOffspring = await createOffspring(2, 1, 'offspring hash', owner, amount, 'F')\n\n    await studService.putInStud(maleOffspring, amount, 1000, {\n      from: owner\n    })\n\n    // Mixing the two horses from the same parents (5 and 6)\n    try {\n      await breeding.mix(maleOffspring, femaleOffspring, 'failed female hash', {\n        from: owner,\n        value: amount\n      })\n      assert.fail('Expected revert not received')\n    } catch(err) {\n      assert.equal(err.reason, 'BR horsesAreBrothers')\n    }\n  })\n\n  it('should revert when mixing an offspring with a parent', async() => {\n    await gop.createGOP(owner, 'female hash', {\n        from: owner,\n        value: amount\n      }) // 1\n    await gop.createGOP(acc[2], 'male hash', {\n        from: acc[2],\n        value: amount\n      }) // 2\n\n    await studService.putInStud(2, amount, 1000, {\n      from: acc[2]\n    })\n\n    let femaleOffspring = await createOffspring(2, 1, 'offspring hash', owner, amount, 'F')\n\n    // Mix 2 with 'femaleOffspring' which is an offspring of 2.\n    try {\n      await breeding.mix(2, femaleOffspring, 'failed female hash', {\n        from: owner,\n        value: priceyAmount\n      })\n      assert.fail('Expected revert not received')\n    } catch(err) {\n      assert.equal(err.reason, 'BR horsesAreDirectlyRelated')\n    }\n  })\n\n  it('should revert when mixing two horses with the same sex', async() => {\n    await gop.createGOP(owner, 'female hash', {\n        from: owner,\n        value: amount\n      }) // 1\n    await gop.createGOP(acc[2], 'male hash', {\n        from: acc[2],\n        value: amount\n      }) // 2\n    await gop.createGOP(acc[2], 'female hash', {\n        from: acc[2],\n        value: amount\n      }) // 3\n    await gop.createGOP(acc[2], 'male hash', {\n        from: acc[2],\n        value: amount\n      }) // 4\n\n    await studService.putInStud(2, amount, 1000, {\n      from: acc[2]\n    })\n\n    // 1 and 3 are two females and not related, if the second parameter isn't a female horse it'll throw.\n    try {\n      await breeding.mix(1, 3, 'failed male hash', {\n        from: acc[4]\n      })\n      assert.fail('Expected revert not received')\n    } catch(err) {\n      assert.equal(err.reason, 'BR expectedMaleHorseReceivedFemale')\n    }\n  })\n\n  it(\"should revert when the second parameter isn't a female horse\", async() => {\n    await gop.createGOP(owner, 'female hash', {\n        from: owner,\n        value: amount\n      }) // 1\n    await gop.createGOP(acc[2], 'male hash', {\n        from: acc[2],\n        value: amount\n      }) // 2\n    await gop.createGOP(acc[2], 'female hash', {\n        from: acc[2],\n        value: amount\n      }) // 3\n    await gop.createGOP(acc[2], 'male hash', {\n        from: acc[2],\n        value: amount\n      }) // 4\n\n    await studService.putInStud(2, amount, 1000, {\n      from: acc[2]\n    })\n\n    try {\n      await breeding.mix(2, 4, 'failed male hash', {\n        from: acc[3]\n      })\n      assert.fail('Expected revert not received')\n    } catch(err) {\n      assert.equal(err.reason, 'BR expectedFemaleHorseReceivedMale')\n    }\n  })\n\n  it('should revert when mixing with ancestors', async() => {\n    // Ancestors have a limit until grandparents, that would be two ancestors lines.\n    // We'll go for Paternal grandparents\n    // We'll use new horses for this.\n\n    /*\n           G     -      G\n        |F - M   -   F - M|\n          ||     -    ||\n        S -- S   -  S -- S\n\n        Family tree... sort of, we want to reach S and mate one of S with a G\n    */\n\n    // * Grandparents\n    await gop.createGOP(owner, 'female hash', {\n        from: owner,\n        value: amount\n      }) // 1\n    await gop.createGOP(owner, 'male hash', {\n        from: owner,\n        value: amount\n      }) // 2\n    await gop.createGOP(owner, 'female hash', {\n        from: owner,\n        value: amount\n      }) // 3\n    await gop.createGOP(owner, 'male hash', {\n        from: owner,\n        value: amount\n      }) // 4\n\n    await studService.putInStud(2, amount, 1, {\n      from: owner\n    })\n    await studService.putInStud(4, amount, 1, {\n      from: owner\n    })\n\n    // parents 8, 9\n    let firstOffspringMale = await createOffspring(2, 1, 'offspring', owner, amount, 'M')\n\n    await studService.putInStud(firstOffspringMale, amount, 1, {\n      from: owner\n    })\n\n    await gop.createGOP(owner, 'female hash', {\n        from: owner,\n        value: amount\n      }) // firstOffspringMale + 1\n      // parents firstOffspringMale, firstOffspringMale + 1 / grandparents 2, 1.\n    let secondOffspringMale = await createOffspring(firstOffspringMale, firstOffspringMale +\n      1, 'ofspring', owner, amount, 'M')\n    await studService.putInStud(secondOffspringMale, amount, 1, {\n      from: owner\n    })\n\n    await gop.createGOP(owner, 'male hash', {\n        from: owner,\n        value: amount\n      }) // secondOffspringMale + 1\n    await gop.createGOP(owner, 'female hash', {\n        from: owner,\n        value: amount\n      }) // secondOffspringMale + 2\n      // parents firstOffspringMale, secondOffspringMale - grandparents 2, 1.\n    await createOffspring(firstOffspringMale, secondOffspringMale + 2, 'offspring', owner,\n      amount, 'M')\n\n    // Trying to mate 12 with 9 should revert.\n    try {\n      await breeding.mix(secondOffspringMale, 1, 'failed female hash', {\n        from: owner,\n        value: amount\n      })\n      assert.fail('Expected revert not received')\n    } catch(err) {\n      assert.equal(err.reason, 'BR horseIsGrandchild')\n    }\n  })\n\n  it('should send part of the reserve amount to the owner of the horse when mixing',\n    async() => {\n      await gop.createGOP(owner, 'female hash', {\n          from: owner,\n          value: amount\n        }) // 1\n      await gop.createGOP(acc[3], 'male hash', {\n          from: owner,\n          value: amount\n        }) // 2\n\n      let preBalance = web3.utils.toWei(await web3.eth.getBalance(acc[3]))\n\n      await studService.putInStud(2, amount, 1, {\n        from: acc[3]\n      })\n\n      await breeding.mix(2, 1, 'male offspring hash', {\n          from: owner,\n          value: priceyAmount\n        }) // 16\n\n      let currBalance = web3.utils.toWei(await web3.eth.getBalance(acc[3]))\n\n      assert.isTrue(preBalance < currBalance)\n    })\n\n  it('should select the correct bloodline based in parents', async() => {\n    await gop.createGOP(owner, 'female hash', {\n        from: owner,\n        value: amount\n      }) // 1\n    await gop.createGOP(acc[6], 'male hash', {\n        from: acc[6],\n        value: amount\n      }) // 2\n    await studService.putInStud(2, amount, 1, {\n      from: acc[6]\n    })\n    await breeding.mix(2, 1, 'offspring hash', {\n        from: owner,\n        value: amount\n      }) // 3\n\n    let data = await core.getHorseData(3) // Nakamoto + Nakamoto = Nakamoto\n\n    assert.equal(web3.utils.hexToUtf8(data[6]), 'N')\n\n    for(let i = 3; i <= 300; i++) {\n      if(i == 100) {\n        await gop.openBatch(2, {\n          from: owner\n        })\n      } else if(i == 299) {\n        await gop.openBatch(3, {\n          from: owner\n        })\n      }\n\n      // We're going to create ~300 horses so we have a different genotype\n      await gop.createGOP(acc[5], 'random hash', {\n        from: acc[5],\n        value: amount\n      })\n    }\n\n    await breeding.mix(2, 300, 'male offspring hash', {\n      from: acc[5],\n      value: amount\n    })\n\n    let lastHorse = await core.totalSupply()\n\n    data = await core.getHorseData(lastHorse - 1)\n    assert.equal(web3.utils.hexToUtf8(data[6]), 'S')\n  })\n\n  it('should change the type of the horse once it has has its first offspring', async() => {\n    await gop.createGOP(owner, 'female hash', {\n        from: owner,\n        value: amount\n      }) // 1\n    await gop.createGOP(acc[6], 'male hash', {\n        from: acc[6],\n        value: amount\n      }) // 2\n    await studService.putInStud(2, amount, 1, {\n      from: acc[6]\n    })\n\n    let maleType = await core.getHorseData(2)\n    let femaleType = await core.getHorseData(1)\n\n    assert.equal(web3.utils.hexToUtf8(maleType[7]), 'Colt') // Colt\n    assert.equal(web3.utils.hexToUtf8(femaleType[7]), 'Filly') // Filly\n\n    await breeding.mix(2, 1, 'offspring hash', {\n      from: owner,\n      value: amount\n    })\n\n    maleType = await core.getHorseData(2)\n    femaleType = await core.getHorseData(1)\n\n    assert.equal(web3.utils.hexToUtf8(maleType[7]), 'Stallion')\n    assert.equal(web3.utils.hexToUtf8(femaleType[7]), 'Mare')\n  })\n\n  it('should distribute funds differently when owners are not the same', async() => {\n    await gop.createGOP(owner, 'female hash', {\n        from: owner,\n        value: amount\n      }) // 1\n    await gop.createGOP(acc[6], 'male hash', {\n        from: acc[6],\n        value: amount\n      }) // 2\n    await studService.putInStud(2, amount, 1, {\n      from: acc[6]\n    })\n\n    // Public - not the same stable\n    let breed = await breeding.mix(2, 1, 'male offspring hash', {\n      from: owner,\n      value: amount\n    })\n    let breedingFunds = breed.logs[0]\n\n    // horse 18 is in stud for 1 day (default)\n    // owner should get 24%\n    let studOwnerPay = amount * 24 / 100\n\n    // races pool should get 56%\n    let racesPoolPay = amount * 56 / 100\n\n    // zed should get 0%\n\n    assert.equal(breedingFunds.args._studOwner.toString(), studOwnerPay.toString())\n    assert.equal(breedingFunds.args._racesPool.toString(), racesPoolPay.toString())\n    assert.equal(breedingFunds.args._zed.toString(), '0')\n  })\n\n  it('should distribute the funds differently when owners are the same', async() => {\n    // Private - same owner\n    await gop.createGOP(owner, 'female hash', {\n        from: owner,\n        value: amount\n      }) // 1\n    await gop.createGOP(owner, 'male hash', {\n        from: owner,\n        value: amount\n      }) // 2\n    await studService.putInStud(2, amount, 100, {\n      from: owner\n    })\n\n    let breed = await breeding.mix(2, 1, 'offspring hash', {\n      from: owner,\n      value: amount\n    })\n    let breedingFunds = breed.logs[0]\n\n    // stud owner should get 0\n    // races pool should get 100%\n    // zed should get 0%\n\n    assert.equal(breedingFunds.args._studOwner.toString(), '0')\n    assert.equal(breedingFunds.args._racesPool.toString(), amount.toString())\n    assert.equal(breedingFunds.args._zed.toString(), '0')\n  })\n\n  let createOffspring = async(male, female, hash, from, value, wantedGender) => {\n    let lastHorseId\n\n    while(true) {\n      await breeding.mix(male, female, hash, {\n        from: from,\n        value: value\n      })\n      let lastHorse = await core.totalSupply()\n      let sex = await core.getHorseSex(lastHorse - 1)\n\n      if(web3.utils.toUtf8(sex) === wantedGender) {\n        lastHorseId = lastHorse - 1\n        break\n      }\n    }\n\n    return lastHorseId\n  }\n})\n"
      ]
    },
    "mtime": 1604685067294
  },
  "{\"filename\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test/BreedTypesTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/BreedTypesTest.js",
      "filenameRelative": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/BreedTypesTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "BreedTypesTest.js",
      "sourceFileName": "BreedTypesTest.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "BreedTypesTest"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar Core = artifacts.require(\"Core\");\nvar GOPCreator = artifacts.require(\"GOPCreatorV2\");\nvar PrivGOP = artifacts.require('PrivateGOPCreatorV2');\nvar Breeding = artifacts.require(\"Breeding\");\nvar StudService = artifacts.require(\"StudServiceV4\");\nvar BreedTypes = artifacts.require(\"BreedTypes\");\nvar HorseData = artifacts.require(\"HorseData\");\n\ncontract(\"BreedTypes\", function (acc) {\n  var core = void 0,\n      breedTypes = void 0,\n      breeding = void 0,\n      studService = void 0,\n      privGOP = void 0,\n      gop = void 0,\n      hd = void 0;\n  var horseValue = web3.utils.toWei(\"1\", \"ether\");\n  var query = web3.utils.toWei(\"0.5\", \"ether\");\n  var owner = acc[1];\n  var poolAddress = acc[9];\n\n  before(\"setup instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Core.new();\n\n          case 2:\n            core = _context.sent;\n            _context.next = 5;\n            return core.initialize(owner);\n\n          case 5:\n            _context.next = 7;\n            return PrivGOP.new();\n\n          case 7:\n            privGOP = _context.sent;\n            _context.next = 10;\n            return GOPCreator.new(owner, privGOP.address, core.address, acc[3], {\n              from: owner\n            });\n\n          case 10:\n            gop = _context.sent;\n            _context.next = 13;\n            return HorseData.new();\n\n          case 13:\n            hd = _context.sent;\n            _context.next = 16;\n            return hd.initialize();\n\n          case 16:\n            _context.next = 18;\n            return BreedTypes.new();\n\n          case 18:\n            breedTypes = _context.sent;\n            _context.next = 21;\n            return breedTypes.initialize(owner);\n\n          case 21:\n            _context.next = 23;\n            return breedTypes.populateMatrix({\n              from: owner\n            });\n\n          case 23:\n            _context.next = 25;\n            return StudService.new(core.address, breedTypes.address, acc[2], {\n              from: owner\n            });\n\n          case 25:\n            studService = _context.sent;\n            _context.next = 28;\n            return Breeding.new();\n\n          case 28:\n            breeding = _context.sent;\n            _context.next = 31;\n            return breeding.initialize(owner, core.address, studService.address, poolAddress, breedTypes.address, breeding.address);\n\n          case 31:\n            _context.next = 33;\n            return breedTypes.setBreedingAddress(breeding.address, {\n              from: owner\n            });\n\n          case 33:\n            _context.next = 35;\n            return core.setBreedingAddr(breeding.address, {\n              from: owner\n            });\n\n          case 35:\n            _context.next = 37;\n            return core.setGOPCreator(gop.address, {\n              from: owner\n            });\n\n          case 37:\n            _context.next = 39;\n            return core.setHorseDataAddr(hd.address, {\n              from: owner\n            });\n\n          case 39:\n            _context.next = 41;\n            return gop.openBatch(1, {\n              from: owner\n            });\n\n          case 41:\n            _context.next = 43;\n            return gop.createGOP(owner, \"genesis horse\", {\n              from: owner,\n              value: horseValue\n            });\n\n          case 43:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })) // 0\n  );\n\n  it(\"should get breed type from parents\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var breedType;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return gop.createGOP(owner, \"female horse\", {\n              from: owner,\n              value: horseValue\n            });\n\n          case 2:\n            _context2.next = 4;\n            return gop.createGOP(owner, \"male horse\", {\n              from: owner,\n              value: horseValue\n            });\n\n          case 4:\n            _context2.next = 6;\n            return studService.putInStud(2, web3.utils.toWei(\"1\", \"ether\"), 86400, {\n              from: owner\n            });\n\n          case 6:\n            _context2.next = 8;\n            return breeding.mix(2, 1, \"female horse\", {\n              from: owner,\n              value: horseValue\n            });\n\n          case 8:\n            _context2.next = 10;\n            return breedTypes.getBreedType(3);\n\n          case 10:\n            breedType = _context2.sent;\n\n\n            assert.equal(web3.utils.toUtf8(breedType), \"legendary\");\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "BreedTypesTest.js"
      ],
      "names": [
        "Core",
        "artifacts",
        "require",
        "GOPCreator",
        "PrivGOP",
        "Breeding",
        "StudService",
        "BreedTypes",
        "HorseData",
        "contract",
        "core",
        "breedTypes",
        "breeding",
        "studService",
        "privGOP",
        "gop",
        "hd",
        "horseValue",
        "web3",
        "utils",
        "toWei",
        "query",
        "owner",
        "acc",
        "poolAddress",
        "before",
        "new",
        "initialize",
        "address",
        "from",
        "populateMatrix",
        "setBreedingAddress",
        "setBreedingAddr",
        "setGOPCreator",
        "setHorseDataAddr",
        "openBatch",
        "createGOP",
        "value",
        "it",
        "putInStud",
        "mix",
        "getBreedType",
        "breedType",
        "assert",
        "equal",
        "toUtf8"
      ],
      "mappings": "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",
      "file": "BreedTypesTest.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "sourcesContent": [
        "const Core = artifacts.require(\"Core\");\nconst GOPCreator = artifacts.require(\"GOPCreatorV2\");\nconst PrivGOP = artifacts.require('PrivateGOPCreatorV2')\nconst Breeding = artifacts.require(\"Breeding\");\nconst StudService = artifacts.require(\"StudServiceV4\");\nconst BreedTypes = artifacts.require(\"BreedTypes\");\nconst HorseData = artifacts.require(\"HorseData\");\n\ncontract(\"BreedTypes\", acc => {\n  let core, breedTypes, breeding, studService, privGOP, gop, hd;\n  let horseValue = web3.utils.toWei(\"1\", \"ether\");\n  let query = web3.utils.toWei(\"0.5\", \"ether\");\n  let owner = acc[1];\n  let poolAddress = acc[9];\n\n  before(\"setup instances\", async() => {\n    core = await Core.new();\n    await core.initialize(owner);\n\n    privGOP = await PrivGOP.new();\n\n    gop = await GOPCreator.new(owner, privGOP.address, core.address, acc[3], {\n      from: owner\n    })\n\n    hd = await HorseData.new();\n    await hd.initialize();\n\n    breedTypes = await BreedTypes.new();\n    await breedTypes.initialize(owner);\n    await breedTypes.populateMatrix({\n      from: owner\n    });\n\n    studService = await StudService.new(core.address, breedTypes.address, acc[2], {\n      from: owner\n    })\n\n    breeding = await Breeding.new()\n    await breeding.initialize(owner, core.address, studService.address, poolAddress,\n      breedTypes.address, breeding.address)\n\n    await breedTypes.setBreedingAddress(breeding.address, {\n      from: owner\n    });\n\n    await core.setBreedingAddr(breeding.address, {\n      from: owner\n    });\n    await core.setGOPCreator(gop.address, {\n      from: owner\n    });\n    await core.setHorseDataAddr(hd.address, {\n      from: owner\n    });\n\n    await gop.openBatch(1, {\n      from: owner\n    });\n    await gop.createGOP(owner, \"genesis horse\", {\n      from: owner,\n      value: horseValue\n    }); // 0\n  })\n\n  it(\"should get breed type from parents\", async() => {\n    await gop.createGOP(owner, \"female horse\", {\n      from: owner,\n      value: horseValue\n    }); // 1\n    await gop.createGOP(owner, \"male horse\", {\n      from: owner,\n      value: horseValue\n    }); // 2\n\n    await studService.putInStud(2, web3.utils.toWei(\"1\", \"ether\"), 86400, {\n      from: owner\n    })\n\n    await breeding.mix(2, 1, \"female horse\", {\n      from: owner,\n      value: horseValue\n    }); // 3\n\n    // Parents are Genesis so we should have a Legendary\n    let breedType = await breedTypes.getBreedType(3);\n\n    assert.equal(web3.utils.toUtf8(breedType), \"legendary\");\n  })\n})\n"
      ]
    },
    "mtime": 1604685403379
  },
  "{\"filename\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test/CryptofieldBaseTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/CryptofieldBaseTest.js",
      "filenameRelative": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/CryptofieldBaseTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "CryptofieldBaseTest.js",
      "sourceFileName": "CryptofieldBaseTest.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "CryptofieldBaseTest"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar Core = artifacts.require(\"Core\");\nvar GOPCreator = artifacts.require(\"GOPCreatorV2\");\nvar PrivGOP = artifacts.require('PrivateGOPCreatorV2');\nvar HorseData = artifacts.require(\"HorseData\");\n\ncontract(\"CryptofieldBaseContract\", function (accounts) {\n  var core = void 0,\n      privGOP = void 0,\n      gop = void 0,\n      hd = void 0,\n      project = void 0;\n  var hash = \"QmTsG4gGyRYXtBeTY7wqcyoksUp9QUpjzoYNdz8Y91GwoQ\";\n  var owner = accounts[1];\n  var amount = web3.utils.toWei(\"0.5\", \"ether\");\n\n  before(\"setup instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Core.new();\n\n          case 2:\n            core = _context.sent;\n            _context.next = 5;\n            return core.initialize(owner);\n\n          case 5:\n            _context.next = 7;\n            return PrivGOP.new();\n\n          case 7:\n            privGOP = _context.sent;\n            _context.next = 10;\n            return GOPCreator.new(owner, privGOP.address, core.address, accounts[3], {\n              from: owner\n            });\n\n          case 10:\n            gop = _context.sent;\n            _context.next = 13;\n            return HorseData.new();\n\n          case 13:\n            hd = _context.sent;\n            _context.next = 16;\n            return hd.initialize();\n\n          case 16:\n            _context.next = 18;\n            return core.setGOPCreator(gop.address, {\n              from: owner\n            });\n\n          case 18:\n            _context.next = 20;\n            return core.setHorseDataAddr(hd.address, {\n              from: owner\n            });\n\n          case 20:\n            _context.next = 22;\n            return gop.openBatch(1, {\n              from: owner\n            });\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  it(\"should be able to buy a horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var horseHash;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return gop.createGOP(owner, hash, {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context2.next = 4;\n            return core.getHorseData(0);\n\n          case 4:\n            horseHash = _context2.sent;\n\n\n            assert.equal(horseHash[0], hash);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })));\n\n  it(\"should create correct genotype based on number of sale\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var genotype, i, genotype2;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return core.getHorseData(0);\n\n          case 2:\n            genotype = _context3.sent;\n\n            assert.equal(web3.utils.toBN(genotype[5]).toNumber(), 1);\n\n            i = 0;\n\n          case 5:\n            if (!(i <= 305)) {\n              _context3.next = 19;\n              break;\n            }\n\n            if (!(i === 100)) {\n              _context3.next = 11;\n              break;\n            }\n\n            _context3.next = 9;\n            return gop.openBatch(2, {\n              from: owner\n            });\n\n          case 9:\n            _context3.next = 14;\n            break;\n\n          case 11:\n            if (!(i === 299)) {\n              _context3.next = 14;\n              break;\n            }\n\n            _context3.next = 14;\n            return gop.openBatch(3, {\n              from: owner\n            });\n\n          case 14:\n            _context3.next = 16;\n            return gop.createGOP(accounts[5], \"random hash\", {\n              from: accounts[5],\n              value: amount\n            });\n\n          case 16:\n            i++;\n            _context3.next = 5;\n            break;\n\n          case 19:\n            _context3.next = 21;\n            return core.getHorseData(100);\n\n          case 21:\n            genotype = _context3.sent;\n\n            assert.equal(web3.utils.toBN(genotype[5]).toNumber(), 1);\n\n            _context3.next = 25;\n            return core.getHorseData(120);\n\n          case 25:\n            genotype2 = _context3.sent;\n\n            assert.equal(web3.utils.toBN(genotype2[5]).toNumber(), 2);\n\n          case 27:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  })));\n\n  it(\"should create the correct bloodline for a horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    var bloodline;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return core.getHorseData(88);\n\n          case 2:\n            bloodline = _context4.sent;\n\n            assert.equal(web3.utils.hexToUtf8(bloodline[6]), \"N\");\n\n            _context4.next = 6;\n            return core.getHorseData(150);\n\n          case 6:\n            bloodline = _context4.sent;\n\n            assert.equal(web3.utils.hexToUtf8(bloodline[6]), \"N\");\n\n            _context4.next = 10;\n            return core.getHorseData(302);\n\n          case 10:\n            bloodline = _context4.sent;\n\n            assert.equal(web3.utils.hexToUtf8(bloodline[6]), \"S\");\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "CryptofieldBaseTest.js"
      ],
      "names": [
        "Core",
        "artifacts",
        "require",
        "GOPCreator",
        "PrivGOP",
        "HorseData",
        "contract",
        "core",
        "privGOP",
        "gop",
        "hd",
        "project",
        "hash",
        "owner",
        "accounts",
        "amount",
        "web3",
        "utils",
        "toWei",
        "before",
        "new",
        "initialize",
        "address",
        "from",
        "setGOPCreator",
        "setHorseDataAddr",
        "openBatch",
        "it",
        "createGOP",
        "value",
        "getHorseData",
        "horseHash",
        "assert",
        "equal",
        "genotype",
        "toBN",
        "toNumber",
        "i",
        "genotype2",
        "bloodline",
        "hexToUtf8"
      ],
      "mappings": "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",
      "file": "CryptofieldBaseTest.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "sourcesContent": [
        "const Core = artifacts.require(\"Core\");\nconst GOPCreator = artifacts.require(\"GOPCreatorV2\");\nconst PrivGOP = artifacts.require('PrivateGOPCreatorV2')\nconst HorseData = artifacts.require(\"HorseData\");\n\ncontract(\"CryptofieldBaseContract\", accounts => {\n  let core, privGOP, gop, hd, project;\n  let hash = \"QmTsG4gGyRYXtBeTY7wqcyoksUp9QUpjzoYNdz8Y91GwoQ\";\n  let owner = accounts[1];\n  let amount = web3.utils.toWei(\"0.5\", \"ether\");\n\n  before(\"setup instances\", async() => {\n    core = await Core.new();\n    await core.initialize(owner);\n\n    privGOP = await PrivGOP.new();\n\n    gop = await GOPCreator.new(owner, privGOP.address, core.address, accounts[3], {\n      from: owner\n    })\n\n    hd = await HorseData.new();\n    await hd.initialize();\n\n    await core.setGOPCreator(gop.address, {\n      from: owner\n    });\n    await core.setHorseDataAddr(hd.address, {\n      from: owner\n    });\n\n    await gop.openBatch(1, {\n      from: owner\n    });\n  })\n\n\n  it(\"should be able to buy a horse\", async() => {\n    await gop.createGOP(owner, hash, {\n      from: owner,\n      value: amount\n    }); // 0\n\n    let horseHash = await core.getHorseData(0);\n\n    assert.equal(horseHash[0], hash);\n  })\n\n  it(\"should create correct genotype based on number of sale\", async() => {\n    // If we get the first one, we should have genotype 1.\n    let genotype = await core.getHorseData(0);\n    assert.equal(web3.utils.toBN(genotype[5])\n      .toNumber(), 1);\n\n    for(let i = 0; i <= 305; i++) {\n      if(i === 100) {\n        await gop.openBatch(2, {\n          from: owner\n        });\n      } else if(i === 299) {\n        await gop.openBatch(3, {\n          from: owner\n        });\n      }\n\n      await gop.createGOP(accounts[5], \"random hash\", {\n        from: accounts[5],\n        value: amount\n      });\n    }\n\n    genotype = await core.getHorseData(100);\n    assert.equal(web3.utils.toBN(genotype[5])\n      .toNumber(), 1);\n\n    let genotype2 = await core.getHorseData(120);\n    assert.equal(web3.utils.toBN(genotype2[5])\n      .toNumber(), 2);\n  })\n\n  it(\"should create the correct bloodline for a horse\", async() => {\n    // We're using horses from the above test.\n    let bloodline = await core.getHorseData(88);\n    assert.equal(web3.utils.hexToUtf8(bloodline[6]), \"N\");\n\n    bloodline = await core.getHorseData(150);\n    assert.equal(web3.utils.hexToUtf8(bloodline[6]), \"N\");\n\n    bloodline = await core.getHorseData(302);\n    assert.equal(web3.utils.hexToUtf8(bloodline[6]), \"S\");\n  })\n})\n"
      ]
    },
    "mtime": 1604685634815
  },
  "{\"filename\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test/GOPCreatorV2Test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/GOPCreatorV2Test.js",
      "filenameRelative": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/GOPCreatorV2Test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "GOPCreatorV2Test.js",
      "sourceFileName": "GOPCreatorV2Test.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "GOPCreatorV2Test"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar GOPCreatorV2 = artifacts.require(\"GOPCreatorV2\");\nvar PrivGOP = artifacts.require('PrivateGOPCreatorV2');\nvar Core = artifacts.require(\"Core\");\nvar HorseData = artifacts.require(\"HorseData\");\n\ncontract(\"GOPCreatorV2\", function (acc) {\n  var privGOP = void 0,\n      gop = void 0,\n      core = void 0,\n      horseData = void 0;\n  var owner = acc[0];\n  var receiver = acc[1];\n  var amount = web3.utils.toWei(\"2\", \"ether\");\n\n  beforeEach(\"setup instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Core.new();\n\n          case 2:\n            core = _context.sent;\n            _context.next = 5;\n            return core.initialize(owner);\n\n          case 5:\n            _context.next = 7;\n            return PrivGOP.new();\n\n          case 7:\n            privGOP = _context.sent;\n            _context.next = 10;\n            return GOPCreatorV2.new(receiver, privGOP.address, core.address, acc[3], {\n              from: owner\n            });\n\n          case 10:\n            gop = _context.sent;\n            _context.next = 13;\n            return HorseData.new();\n\n          case 13:\n            horseData = _context.sent;\n            _context.next = 16;\n            return horseData.initialize();\n\n          case 16:\n            _context.next = 18;\n            return core.setGOPCreator(gop.address, {\n              from: owner\n            });\n\n          case 18:\n            _context.next = 20;\n            return core.setHorseDataAddr(horseData.address, {\n              from: owner\n            });\n\n          case 20:\n            _context.next = 22;\n            return gop.openBatch(1, {\n              from: owner\n            });\n\n          case 22:\n            _context.next = 24;\n            return gop.createGOP(owner, \"some hash\", {\n              from: owner,\n              value: amount\n            });\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  it(\"should get the state from old gop contract\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var firstGen, tenthGen;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return gop.horsesRemaining(1);\n\n          case 2:\n            firstGen = _context2.sent;\n            _context2.next = 5;\n            return gop.horsesRemaining(10);\n\n          case 5:\n            tenthGen = _context2.sent;\n\n\n            assert.equal(firstGen.toString(), \"1000\");\n            assert.equal(tenthGen.toString(), \"10000\");\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })));\n\n  it(\"should buy a horse and decrease counter\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var remaining;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return gop.createGOP(owner, \"some hash\", {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context3.next = 4;\n            return gop.horsesRemaining(1);\n\n          case 4:\n            remaining = _context3.sent;\n\n\n            assert.equal(web3.utils.toBN(remaining).toNumber(), 999);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  })));\n\n  it(\"should create correct horse based on open batch\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    var data;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return gop.openBatch(3, {\n              from: owner\n            });\n\n          case 2:\n            _context4.next = 4;\n            return gop.createGOP(owner, \"some hash\", {\n              from: owner,\n              value: amount\n            });\n\n          case 4:\n            _context4.next = 6;\n            return core.getHorseData(1);\n\n          case 6:\n            data = _context4.sent;\n\n\n            assert.equal(web3.utils.toBN(data[5]).toNumber(), 3);\n            assert.equal(web3.utils.hexToUtf8(data[6]), \"S\");\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined);\n  })));\n\n  it(\"should revert when no value is sent\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n    var revertFound, genotype;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return gop.createGOP(owner, \"some hash\");\n\n          case 3:\n            assert.fail(\"Expected revert not received\");\n            _context5.next = 10;\n            break;\n\n          case 6:\n            _context5.prev = 6;\n            _context5.t0 = _context5[\"catch\"](0);\n            revertFound = _context5.t0.message.search(\"revert\") >= 0;\n\n            assert(revertFound, \"Expected \\\"revert\\\", got \" + _context5.t0 + \" instead\");\n\n          case 10:\n            _context5.next = 12;\n            return core.getHorseData(1);\n\n          case 12:\n            genotype = _context5.sent;\n\n            assert.equal(web3.utils.toBN(genotype[5]).toNumber(), 0);\n\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, undefined, [[0, 6]]);\n  })));\n\n  it(\"should transfer the paid amount to the receiver\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n    var balance, newBalance;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return web3.eth.getBalance(receiver);\n\n          case 2:\n            balance = _context6.sent;\n            _context6.next = 5;\n            return gop.createGOP(acc[2], \"some hash\", {\n              from: acc[2],\n              value: amount\n            });\n\n          case 5:\n            _context6.next = 7;\n            return web3.eth.getBalance(receiver);\n\n          case 7:\n            newBalance = _context6.sent;\n\n\n            assert.isTrue(newBalance > balance);\n\n          case 9:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, undefined);\n  })));\n\n  it(\"should create horse with specific data\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n    var givenGender, baseValue, data;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            givenGender = web3.utils.stringToHex(\"Male\");\n            _context7.next = 3;\n            return gop.createCustomHorse(owner, \"some hash\", 3, givenGender, {\n              from: owner\n            });\n\n          case 3:\n            _context7.next = 5;\n            return core.getBaseValue(1);\n\n          case 5:\n            baseValue = _context7.sent;\n\n\n            assert.isAtMost(web3.utils.toBN(baseValue).toNumber(), 80);\n            assert.isAtLeast(web3.utils.toBN(baseValue).toNumber(), 76);\n\n            _context7.next = 10;\n            return core.getHorseData(1);\n\n          case 10:\n            data = _context7.sent;\n\n\n            assert.equal(data[0], \"some hash\");\n            assert.equal(web3.utils.hexToUtf8(data[1]), \"M\");\n            assert.equal(web3.utils.toBN(data[5]).toNumber(), 3);\n            assert.equal(web3.utils.hexToUtf8(data[6]), \"S\");\n            assert.equal(web3.utils.hexToUtf8(data[7]), \"Colt\");\n\n            givenGender = web3.utils.stringToHex(\"Female\");\n            _context7.next = 19;\n            return gop.createCustomHorse(owner, \"another hash\", 6, givenGender, {\n              from: owner\n            });\n\n          case 19:\n            _context7.next = 21;\n            return core.getHorseData(2);\n\n          case 21:\n            data = _context7.sent;\n\n\n            assert.equal(data[0], \"another hash\");\n            assert.equal(web3.utils.hexToUtf8(data[1]), \"F\");\n            assert.equal(web3.utils.toBN(data[5]).toNumber(), 6);\n            assert.equal(web3.utils.hexToUtf8(data[6]), \"F\"); // Finney\n            assert.equal(web3.utils.hexToUtf8(data[7]), \"Filly\");\n\n          case 27:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, undefined);\n  })));\n\n  it(\"should create a random horse from the specefied genotype\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n    var data;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return gop.createRandomHorseFor(owner, \"508 hash\", 8, {\n              from: owner\n            });\n\n          case 2:\n            _context8.next = 4;\n            return core.getHorseData(1);\n\n          case 4:\n            data = _context8.sent;\n\n\n            assert.equal(web3.utils.toBN(data[5]).toNumber(), 8);\n            assert.equal(web3.utils.hexToUtf8(data[6]), \"B\");\n\n          case 7:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, undefined);\n  })));\n\n  it(\"should mark a code as used\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n    var id;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            id = web3.utils.toHex(\"xxx\");\n            _context9.next = 3;\n            return gop.markCodeAsUsed(id, {\n              from: owner\n            });\n\n          case 3:\n            _context9.prev = 3;\n            _context9.next = 6;\n            return gop.markCodeAsUsed(id, {\n              from: owner\n            });\n\n          case 6:\n            assert.fail(\"Expected revert not received\");\n            _context9.next = 12;\n            break;\n\n          case 9:\n            _context9.prev = 9;\n            _context9.t0 = _context9[\"catch\"](3);\n\n            assert.equal(_context9.t0.reason, \"Code has been used\");\n\n          case 12:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, undefined, [[3, 9]]);\n  })));\n\n  it(\"should mark a code as unused\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n    var id;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            // should revert as code is not used yet\n            id = web3.utils.toHex(\"xxx\");\n            _context10.prev = 1;\n            _context10.next = 4;\n            return gop.markCodeAsUnused(id, {\n              from: owner\n            });\n\n          case 4:\n            assert.fail(\"Expected revert not received\");\n            _context10.next = 10;\n            break;\n\n          case 7:\n            _context10.prev = 7;\n            _context10.t0 = _context10[\"catch\"](1);\n\n            assert.equal(_context10.t0.reason, \"Code has not been used\");\n\n          case 10:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, undefined, [[1, 7]]);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "GOPCreatorV2Test.js"
      ],
      "names": [
        "GOPCreatorV2",
        "artifacts",
        "require",
        "PrivGOP",
        "Core",
        "HorseData",
        "contract",
        "privGOP",
        "gop",
        "core",
        "horseData",
        "owner",
        "acc",
        "receiver",
        "amount",
        "web3",
        "utils",
        "toWei",
        "beforeEach",
        "new",
        "initialize",
        "address",
        "from",
        "setGOPCreator",
        "setHorseDataAddr",
        "openBatch",
        "createGOP",
        "value",
        "it",
        "horsesRemaining",
        "firstGen",
        "tenthGen",
        "assert",
        "equal",
        "toString",
        "remaining",
        "toBN",
        "toNumber",
        "getHorseData",
        "data",
        "hexToUtf8",
        "fail",
        "revertFound",
        "message",
        "search",
        "genotype",
        "eth",
        "getBalance",
        "balance",
        "newBalance",
        "isTrue",
        "givenGender",
        "stringToHex",
        "createCustomHorse",
        "getBaseValue",
        "baseValue",
        "isAtMost",
        "isAtLeast",
        "createRandomHorseFor",
        "id",
        "toHex",
        "markCodeAsUsed",
        "reason",
        "markCodeAsUnused"
      ],
      "mappings": "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",
      "file": "GOPCreatorV2Test.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "sourcesContent": [
        "const GOPCreatorV2 = artifacts.require(\"GOPCreatorV2\");\nconst PrivGOP = artifacts.require('PrivateGOPCreatorV2')\nconst Core = artifacts.require(\"Core\");\nconst HorseData = artifacts.require(\"HorseData\");\n\ncontract(\"GOPCreatorV2\", acc => {\n  let privGOP, gop, core, horseData;\n  let owner = acc[0];\n  let receiver = acc[1];\n  let amount = web3.utils.toWei(\"2\", \"ether\");\n\n  beforeEach(\"setup instances\", async() => {\n    core = await Core.new();\n    await core.initialize(owner);\n\n    privGOP = await PrivGOP.new();\n\n    gop = await GOPCreatorV2.new(receiver, privGOP.address, core.address, acc[3], {\n      from: owner\n    })\n\n    horseData = await HorseData.new();\n    await horseData.initialize();\n\n    await core.setGOPCreator(gop.address, {\n      from: owner\n    });\n    await core.setHorseDataAddr(horseData.address, {\n      from: owner\n    });\n\n    await gop.openBatch(1, {\n      from: owner\n    });\n\n    await gop.createGOP(owner, \"some hash\", {\n      from: owner,\n      value: amount\n    })\n  })\n\n  it(\"should get the state from old gop contract\", async() => {\n    // No horses were sold so this should have the default values\n    let firstGen = await gop.horsesRemaining(1);\n    let tenthGen = await gop.horsesRemaining(10);\n\n    assert.equal(firstGen.toString(), \"1000\");\n    assert.equal(tenthGen.toString(), \"10000\")\n  })\n\n  it(\"should buy a horse and decrease counter\", async() => {\n    await gop.createGOP(owner, \"some hash\", {\n      from: owner,\n      value: amount\n    });\n\n    let remaining = await gop.horsesRemaining(1);\n\n    assert.equal(web3.utils.toBN(remaining)\n      .toNumber(), 999);\n  })\n\n  it(\"should create correct horse based on open batch\", async() => {\n    await gop.openBatch(3, {\n      from: owner\n    });\n    await gop.createGOP(owner, \"some hash\", {\n      from: owner,\n      value: amount\n    });\n\n    let data = await core.getHorseData(1);\n\n    assert.equal(web3.utils.toBN(data[5])\n      .toNumber(), 3);\n    assert.equal(web3.utils.hexToUtf8(data[6]), \"S\");\n  })\n\n  it(\"should revert when no value is sent\", async() => {\n    try {\n      await gop.createGOP(owner, \"some hash\");\n      assert.fail(\"Expected revert not received\");\n    } catch(err) {\n      let revertFound = err.message.search(\"revert\") >= 0;\n      assert(revertFound, `Expected \"revert\", got ${err} instead`);\n    }\n\n    let genotype = await core.getHorseData(1);\n    assert.equal(web3.utils.toBN(genotype[5])\n      .toNumber(), 0);\n  })\n\n  it(\"should transfer the paid amount to the receiver\", async() => {\n    let balance = await web3.eth.getBalance(receiver);\n\n    // Batch open <1>\n    await gop.createGOP(acc[2], \"some hash\", {\n      from: acc[2],\n      value: amount\n    });\n\n    let newBalance = await web3.eth.getBalance(receiver);\n\n    assert.isTrue(newBalance > balance);\n  })\n\n  it(\"should create horse with specific data\", async() => {\n    let givenGender = web3.utils.stringToHex(\"Male\");\n    await gop.createCustomHorse(owner, \"some hash\", 3, givenGender, {\n      from: owner\n    });\n\n    let baseValue = await core.getBaseValue(1);\n\n    assert.isAtMost(web3.utils.toBN(baseValue)\n      .toNumber(), 80);\n    assert.isAtLeast(web3.utils.toBN(baseValue)\n      .toNumber(), 76);\n\n    let data = await core.getHorseData(1);\n\n    assert.equal(data[0], \"some hash\");\n    assert.equal(web3.utils.hexToUtf8(data[1]), \"M\");\n    assert.equal(web3.utils.toBN(data[5])\n      .toNumber(), 3);\n    assert.equal(web3.utils.hexToUtf8(data[6]), \"S\");\n    assert.equal(web3.utils.hexToUtf8(data[7]), \"Colt\");\n\n    givenGender = web3.utils.stringToHex(\"Female\");\n    await gop.createCustomHorse(owner, \"another hash\", 6, givenGender, {\n      from: owner\n    });\n\n    data = await core.getHorseData(2);\n\n    assert.equal(data[0], \"another hash\");\n    assert.equal(web3.utils.hexToUtf8(data[1]), \"F\");\n    assert.equal(web3.utils.toBN(data[5])\n      .toNumber(), 6);\n    assert.equal(web3.utils.hexToUtf8(data[6]), \"F\"); // Finney\n    assert.equal(web3.utils.hexToUtf8(data[7]), \"Filly\");\n  })\n\n  it(\"should create a random horse from the specefied genotype\", async() => {\n    await gop.createRandomHorseFor(owner, \"508 hash\", 8, {\n      from: owner\n    });\n\n    let data = await core.getHorseData(1);\n\n    assert.equal(web3.utils.toBN(data[5])\n      .toNumber(), 8);\n    assert.equal(web3.utils.hexToUtf8(data[6]), \"B\");\n  })\n\n  it(\"should mark a code as used\", async() => {\n    let id = web3.utils.toHex(\"xxx\")\n\n    await gop.markCodeAsUsed(id, {\n      from: owner\n    });\n\n    // should revert because code is marked as used already.\n    try {\n      await gop.markCodeAsUsed(id, {\n        from: owner\n      });\n      assert.fail(\"Expected revert not received\");\n    } catch(err) {\n      assert.equal(err.reason, \"Code has been used\");\n    }\n  })\n\n  it(\"should mark a code as unused\", async() => {\n    // should revert as code is not used yet\n    let id = web3.utils.toHex(\"xxx\")\n    try {\n      await gop.markCodeAsUnused(id, {\n        from: owner\n      });\n      assert.fail(\"Expected revert not received\");\n    } catch(err) {\n      assert.equal(err.reason, \"Code has not been used\");\n    }\n  })\n\n})\n"
      ]
    },
    "mtime": 1604686203835
  },
  "{\"filename\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test/RacingTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/RacingTest.js",
      "filenameRelative": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/RacingTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "RacingTest.js",
      "sourceFileName": "RacingTest.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "RacingTest"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar RacingArena = artifacts.require(\"RacingArena.sol\");\nvar RacingProxy = artifacts.require(\"RacingProxy.sol\");\n\ncontract(\"RacingArena\", function (accounts) {\n  var deployer = accounts[0];\n  var upgradeAdmin = accounts[1];\n\n  var admin_1 = accounts[3];\n  var admin_2 = accounts[4];\n  var admin_3 = accounts[5];\n\n  var fee_wallet = accounts[6];\n\n  var ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\n  // Addresses used only for constructor\n  var core_contract_address = accounts[9];\n  var weth_address = accounts[9];\n  var bb_address = accounts[9];\n\n  // Contracts instances\n  var logicInstance = void 0,\n      proxyInstance = void 0,\n      contractInstance = void 0;\n\n  beforeEach(_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return RacingArena.new();\n\n          case 2:\n            logicInstance = _context.sent;\n            _context.next = 5;\n            return RacingProxy.new(logicInstance.address, upgradeAdmin);\n\n          case 5:\n            proxyInstance = _context.sent;\n            _context.next = 8;\n            return RacingArena.at(proxyInstance.address);\n\n          case 8:\n            contractInstance = _context.sent;\n            _context.next = 11;\n            return contractInstance.initSetup(bb_address, weth_address);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  describe(\"Initial data validation\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            it(\"should make deployer admin of contract after deployment\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n              var isDeployerAdmin;\n              return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return contractInstance.isAdmin(deployer);\n\n                    case 2:\n                      isDeployerAdmin = _context2.sent;\n\n                      assert.deepEqual(isDeployerAdmin, true);\n\n                    case 4:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2, undefined);\n            })));\n\n            it(\"should not make the deployer the fee receiver\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n              var isDeployerFeeReceiver;\n              return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return contractInstance.isFeeWallet({\n                        from: deployer\n                      });\n\n                    case 2:\n                      isDeployerFeeReceiver = _context3.sent;\n\n                      assert.deepEqual(isDeployerFeeReceiver, false);\n\n                    case 4:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3, undefined);\n            })));\n\n            it(\"should mark fee receiver as a zero address\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n              var feeReceiver;\n              return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return contractInstance.feeWallet();\n\n                    case 2:\n                      feeReceiver = _context4.sent;\n\n                      assert.deepEqual(feeReceiver, ZERO_ADDRESS);\n\n                    case 4:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4, undefined);\n            })));\n\n            it(\"should upgrade admin address with selected one\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n              var proxyUpgradeAdmin;\n              return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.next = 2;\n                      return proxyInstance.proxyAdmin();\n\n                    case 2:\n                      proxyUpgradeAdmin = _context5.sent;\n\n                      assert.deepEqual(upgradeAdmin, proxyUpgradeAdmin);\n\n                    case 4:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, _callee5, undefined);\n            })));\n\n            it(\"should return initial proxy implementation address\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n              var logicAddress, implementationAddress;\n              return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                while (1) {\n                  switch (_context6.prev = _context6.next) {\n                    case 0:\n                      logicAddress = logicInstance.address;\n                      _context6.next = 3;\n                      return proxyInstance.proxyImplementation();\n\n                    case 3:\n                      implementationAddress = _context6.sent;\n\n                      assert.deepEqual(logicAddress, implementationAddress);\n\n                    case 5:\n                    case \"end\":\n                      return _context6.stop();\n                  }\n                }\n              }, _callee6, undefined);\n            })));\n\n            it(\"should return initial proxy version\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n              var implementationVersion;\n              return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      _context7.next = 2;\n                      return proxyInstance.proxyVersion();\n\n                    case 2:\n                      implementationVersion = _context7.sent;\n\n                      assert.deepEqual(implementationVersion, \"1.0.0\");\n\n                    case 4:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, _callee7, undefined);\n            })));\n\n          case 6:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, undefined);\n  })));\n\n  describe(\"Change the state before upgrade\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            it(\"adds new admins\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n              return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                while (1) {\n                  switch (_context9.prev = _context9.next) {\n                    case 0:\n                      _context9.next = 2;\n                      return contractInstance.addAdmin(admin_1, {\n                        from: deployer\n                      });\n\n                    case 2:\n                      _context9.next = 4;\n                      return contractInstance.addAdmin(admin_2, {\n                        from: admin_1\n                      });\n\n                    case 4:\n                      _context9.next = 6;\n                      return contractInstance.addAdmin(admin_3, {\n                        from: admin_2\n                      });\n\n                    case 6:\n                    case \"end\":\n                      return _context9.stop();\n                  }\n                }\n              }, _callee9, undefined);\n            })));\n\n            it(\"adds fee receiver wallet\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n              return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                while (1) {\n                  switch (_context10.prev = _context10.next) {\n                    case 0:\n                      _context10.next = 2;\n                      return contractInstance.transferFeeWalletOwnership(fee_wallet, {\n                        from: deployer\n                      });\n\n                    case 2:\n                    case \"end\":\n                      return _context10.stop();\n                  }\n                }\n              }, _callee10, undefined);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, undefined);\n  })));\n\n  describe(\"Create race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            it(\"creates new race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n              return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                while (1) {\n                  switch (_context12.prev = _context12.next) {\n                    case 0:\n                      _context12.next = 2;\n                      return contractInstance.createRace(\"0x01\", \"Mumbai Race\", \"12\", web3.utils.toWei(\"10\", \"finney\"), \"2000\", {\n                        from: deployer\n                      });\n\n                    case 2:\n                    case \"end\":\n                      return _context12.stop();\n                  }\n                }\n              }, _callee12, undefined);\n            })));\n\n            it(\"should return correct number of horses for new race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n              var horses;\n              return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                while (1) {\n                  switch (_context13.prev = _context13.next) {\n                    case 0:\n                      _context13.next = 2;\n                      return contractInstance.createRace(\"0x01\", \"Mumbai Race\", \"12\", web3.utils.toWei(\"10\", \"finney\"), \"2000\", {\n                        from: deployer\n                      });\n\n                    case 2:\n                      _context13.next = 4;\n                      return contractInstance.getHorsesInRace(\"0x01\");\n\n                    case 4:\n                      horses = _context13.sent;\n\n\n                      assert.deepEqual(horses.length, 0);\n\n                    case 6:\n                    case \"end\":\n                      return _context13.stop();\n                  }\n                }\n              }, _callee13, undefined);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, undefined);\n  })));\n\n  describe(\"Check the state after changes\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n    return regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            it(\"should return recently added wallets for admin roles\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n              var isAdmin2;\n              return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                while (1) {\n                  switch (_context15.prev = _context15.next) {\n                    case 0:\n                      _context15.next = 2;\n                      return contractInstance.addAdmin(admin_2, {\n                        from: deployer\n                      });\n\n                    case 2:\n                      _context15.next = 4;\n                      return contractInstance.isAdmin(admin_2);\n\n                    case 4:\n                      isAdmin2 = _context15.sent;\n\n\n                      assert.deepEqual(isAdmin2, true);\n\n                    case 6:\n                    case \"end\":\n                      return _context15.stop();\n                  }\n                }\n              }, _callee15, undefined);\n            })));\n\n            it(\"should check added wallet for fee wallet\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n              var isFeeWallet;\n              return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                while (1) {\n                  switch (_context16.prev = _context16.next) {\n                    case 0:\n                      _context16.next = 2;\n                      return contractInstance.transferFeeWalletOwnership(fee_wallet, {\n                        from: deployer\n                      });\n\n                    case 2:\n                      _context16.next = 4;\n                      return contractInstance.isFeeWallet({\n                        from: fee_wallet\n                      });\n\n                    case 4:\n                      isFeeWallet = _context16.sent;\n\n                      assert.deepEqual(isFeeWallet, true);\n\n                    case 6:\n                    case \"end\":\n                      return _context16.stop();\n                  }\n                }\n              }, _callee16, undefined);\n            })));\n\n            it(\"should check recently added race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n              var isIdSaved, raceData, length, fee, horsesAllowed, state;\n              return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                while (1) {\n                  switch (_context17.prev = _context17.next) {\n                    case 0:\n                      _context17.next = 2;\n                      return contractInstance.createRace(\"0x01\", \"Mumbai Race\", \"12\", web3.utils.toWei(\"10\", \"finney\"), \"2000\", {\n                        from: deployer\n                      });\n\n                    case 2:\n                      _context17.next = 4;\n                      return contractInstance.ID_Saved(\"0x01\");\n\n                    case 4:\n                      isIdSaved = _context17.sent;\n\n                      assert.deepEqual(isIdSaved, true);\n\n                      _context17.next = 8;\n                      return contractInstance.Races(\"0x01\");\n\n                    case 8:\n                      raceData = _context17.sent;\n                      length = raceData[\"Length\"].toString();\n                      fee = raceData[\"Entrance_Fee\"].toString();\n                      horsesAllowed = raceData[\"Horses_Allowed\"].toString();\n                      state = raceData[\"Race_State\"].toString();\n\n\n                      assert.deepEqual(length, \"2000\");\n                      assert.deepEqual(fee, web3.utils.toWei(\"10\", \"finney\"));\n                      assert.deepEqual(horsesAllowed, \"12\");\n                      assert.deepEqual(state, \"1\");\n\n                    case 17:\n                    case \"end\":\n                      return _context17.stop();\n                  }\n                }\n              }, _callee17, undefined);\n            })));\n\n          case 3:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18, undefined);\n  })));\n\n  describe(\"Upgrade implementation contract\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n    return regeneratorRuntime.wrap(function _callee20$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            it(\"deploy new implementation contract and upgrade it on proxy address\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n              var newLogic;\n              return regeneratorRuntime.wrap(function _callee19$(_context19) {\n                while (1) {\n                  switch (_context19.prev = _context19.next) {\n                    case 0:\n                      _context19.next = 2;\n                      return RacingArena.new(core_contract_address, bb_address);\n\n                    case 2:\n                      newLogic = _context19.sent;\n                      _context19.next = 5;\n                      return proxyInstance.upgradeProxyTo(newLogic.address, \"1.1.0\", {\n                        from: upgradeAdmin\n                      });\n\n                    case 5:\n                    case \"end\":\n                      return _context19.stop();\n                  }\n                }\n              }, _callee19, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _callee20, undefined);\n  })));\n\n  describe(\"Check the state after upgrade\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {\n    return regeneratorRuntime.wrap(function _callee26$(_context26) {\n      while (1) {\n        switch (_context26.prev = _context26.next) {\n          case 0:\n            it(\"should check wallets for admin roles\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n              var newLogic, isAdmin1;\n              return regeneratorRuntime.wrap(function _callee21$(_context21) {\n                while (1) {\n                  switch (_context21.prev = _context21.next) {\n                    case 0:\n                      _context21.next = 2;\n                      return contractInstance.addAdmin(admin_1, {\n                        from: deployer\n                      });\n\n                    case 2:\n                      _context21.next = 4;\n                      return contractInstance.isAdmin(admin_1);\n\n                    case 4:\n                      _context21.next = 6;\n                      return RacingArena.new(core_contract_address, bb_address);\n\n                    case 6:\n                      newLogic = _context21.sent;\n                      _context21.next = 9;\n                      return proxyInstance.upgradeProxyTo(newLogic.address, \"1.1.0\", {\n                        from: upgradeAdmin\n                      });\n\n                    case 9:\n                      _context21.next = 11;\n                      return contractInstance.isAdmin(admin_1);\n\n                    case 11:\n                      isAdmin1 = _context21.sent;\n\n\n                      assert.deepEqual(isAdmin1, true);\n\n                    case 13:\n                    case \"end\":\n                      return _context21.stop();\n                  }\n                }\n              }, _callee21, undefined);\n            })));\n\n            it(\"should check selected fee wallet\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n              var newLogic, isFeeWallet;\n              return regeneratorRuntime.wrap(function _callee22$(_context22) {\n                while (1) {\n                  switch (_context22.prev = _context22.next) {\n                    case 0:\n                      _context22.next = 2;\n                      return contractInstance.transferFeeWalletOwnership(fee_wallet, {\n                        from: deployer\n                      });\n\n                    case 2:\n                      _context22.next = 4;\n                      return RacingArena.new(core_contract_address, bb_address);\n\n                    case 4:\n                      newLogic = _context22.sent;\n                      _context22.next = 7;\n                      return proxyInstance.upgradeProxyTo(newLogic.address, \"1.1.0\", {\n                        from: upgradeAdmin\n                      });\n\n                    case 7:\n                      _context22.next = 9;\n                      return contractInstance.isFeeWallet({\n                        from: fee_wallet\n                      });\n\n                    case 9:\n                      isFeeWallet = _context22.sent;\n\n                      assert.deepEqual(isFeeWallet, true);\n\n                    case 11:\n                    case \"end\":\n                      return _context22.stop();\n                  }\n                }\n              }, _callee22, undefined);\n            })));\n\n            it(\"should check implementation address change\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n              var newLogic, previusImplementation, currentImplementation;\n              return regeneratorRuntime.wrap(function _callee23$(_context23) {\n                while (1) {\n                  switch (_context23.prev = _context23.next) {\n                    case 0:\n                      _context23.next = 2;\n                      return RacingArena.new(core_contract_address, bb_address);\n\n                    case 2:\n                      newLogic = _context23.sent;\n                      _context23.next = 5;\n                      return proxyInstance.upgradeProxyTo(newLogic.address, \"1.1.0\", {\n                        from: upgradeAdmin\n                      });\n\n                    case 5:\n                      previusImplementation = logicInstance.address;\n                      _context23.next = 8;\n                      return proxyInstance.proxyImplementation();\n\n                    case 8:\n                      currentImplementation = _context23.sent;\n\n                      assert.notEqual(previusImplementation, currentImplementation);\n\n                    case 10:\n                    case \"end\":\n                      return _context23.stop();\n                  }\n                }\n              }, _callee23, undefined);\n            })));\n\n            it(\"should check the implementation version change\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {\n              var newLogic, currentImplementation;\n              return regeneratorRuntime.wrap(function _callee24$(_context24) {\n                while (1) {\n                  switch (_context24.prev = _context24.next) {\n                    case 0:\n                      _context24.next = 2;\n                      return RacingArena.new(core_contract_address, bb_address);\n\n                    case 2:\n                      newLogic = _context24.sent;\n                      _context24.next = 5;\n                      return proxyInstance.upgradeProxyTo(newLogic.address, \"1.1.0\", {\n                        from: upgradeAdmin\n                      });\n\n                    case 5:\n                      _context24.next = 7;\n                      return proxyInstance.proxyVersion();\n\n                    case 7:\n                      currentImplementation = _context24.sent;\n\n                      assert.deepEqual(currentImplementation, \"1.1.0\");\n\n                    case 9:\n                    case \"end\":\n                      return _context24.stop();\n                  }\n                }\n              }, _callee24, undefined);\n            })));\n\n            it(\"should check the previously added race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {\n              var newLogic, isIdSaved, raceData, length, fee, horsesAllowed, state;\n              return regeneratorRuntime.wrap(function _callee25$(_context25) {\n                while (1) {\n                  switch (_context25.prev = _context25.next) {\n                    case 0:\n                      _context25.next = 2;\n                      return contractInstance.createRace(\"0x01\", \"Mumbai Race\", \"12\", web3.utils.toWei(\"10\", \"finney\"), \"2000\", {\n                        from: deployer\n                      });\n\n                    case 2:\n                      _context25.next = 4;\n                      return RacingArena.new(core_contract_address, bb_address);\n\n                    case 4:\n                      newLogic = _context25.sent;\n                      _context25.next = 7;\n                      return proxyInstance.upgradeProxyTo(newLogic.address, \"1.1.0\", {\n                        from: upgradeAdmin\n                      });\n\n                    case 7:\n                      _context25.next = 9;\n                      return contractInstance.ID_Saved(\"0x01\");\n\n                    case 9:\n                      isIdSaved = _context25.sent;\n\n                      assert.deepEqual(isIdSaved, true);\n\n                      _context25.next = 13;\n                      return contractInstance.Races(\"0x01\");\n\n                    case 13:\n                      raceData = _context25.sent;\n                      length = raceData[\"Length\"].toString();\n                      fee = raceData[\"Entrance_Fee\"].toString();\n                      horsesAllowed = raceData[\"Horses_Allowed\"].toString();\n                      state = raceData[\"Race_State\"].toString();\n\n\n                      assert.deepEqual(length, \"2000\");\n                      assert.deepEqual(fee, web3.utils.toWei(\"10\", \"finney\"));\n                      assert.deepEqual(horsesAllowed, \"12\");\n                      assert.deepEqual(state, \"1\");\n\n                    case 22:\n                    case \"end\":\n                      return _context25.stop();\n                  }\n                }\n              }, _callee25, undefined);\n            })));\n\n          case 5:\n          case \"end\":\n            return _context26.stop();\n        }\n      }\n    }, _callee26, undefined);\n  })));\n\n  describe(\"Check the ownership who can upgrade contract\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee29() {\n    return regeneratorRuntime.wrap(function _callee29$(_context29) {\n      while (1) {\n        switch (_context29.prev = _context29.next) {\n          case 0:\n            it(\"should check proxy admin address change\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27() {\n              var currentAdmin;\n              return regeneratorRuntime.wrap(function _callee27$(_context27) {\n                while (1) {\n                  switch (_context27.prev = _context27.next) {\n                    case 0:\n                      _context27.next = 2;\n                      return proxyInstance.changeProxyAdmin(admin_1, {\n                        from: upgradeAdmin\n                      });\n\n                    case 2:\n                      _context27.next = 4;\n                      return proxyInstance.proxyAdmin();\n\n                    case 4:\n                      currentAdmin = _context27.sent;\n\n                      assert.deepEqual(currentAdmin, admin_1);\n\n                    case 6:\n                    case \"end\":\n                      return _context27.stop();\n                  }\n                }\n              }, _callee27, undefined);\n            })));\n\n            it(\"should fail to upgrade proxy to non-contract address\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28() {\n              return regeneratorRuntime.wrap(function _callee28$(_context28) {\n                while (1) {\n                  switch (_context28.prev = _context28.next) {\n                    case 0:\n                      _context28.prev = 0;\n                      _context28.next = 3;\n                      return proxyInstance.upgradeProxyTo(deployer, \"1.2.0\", {\n                        from: upgradeAdmin\n                      });\n\n                    case 3:\n                      assert.fail(\"Expected revert not received\");\n                      _context28.next = 9;\n                      break;\n\n                    case 6:\n                      _context28.prev = 6;\n                      _context28.t0 = _context28[\"catch\"](0);\n\n                      assert.equal(_context28.t0.reason, \"Cannot set a proxy implementation to a non-contract address\");\n\n                    case 9:\n                    case \"end\":\n                      return _context28.stop();\n                  }\n                }\n              }, _callee28, undefined, [[0, 6]]);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context29.stop();\n        }\n      }\n    }, _callee29, undefined);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "RacingTest.js"
      ],
      "names": [
        "RacingArena",
        "artifacts",
        "require",
        "RacingProxy",
        "contract",
        "accounts",
        "deployer",
        "upgradeAdmin",
        "admin_1",
        "admin_2",
        "admin_3",
        "fee_wallet",
        "ZERO_ADDRESS",
        "core_contract_address",
        "weth_address",
        "bb_address",
        "logicInstance",
        "proxyInstance",
        "contractInstance",
        "beforeEach",
        "new",
        "address",
        "at",
        "initSetup",
        "describe",
        "it",
        "isAdmin",
        "isDeployerAdmin",
        "assert",
        "deepEqual",
        "isFeeWallet",
        "from",
        "isDeployerFeeReceiver",
        "feeWallet",
        "feeReceiver",
        "proxyAdmin",
        "proxyUpgradeAdmin",
        "logicAddress",
        "proxyImplementation",
        "implementationAddress",
        "proxyVersion",
        "implementationVersion",
        "addAdmin",
        "transferFeeWalletOwnership",
        "createRace",
        "web3",
        "utils",
        "toWei",
        "getHorsesInRace",
        "horses",
        "length",
        "isAdmin2",
        "ID_Saved",
        "isIdSaved",
        "Races",
        "raceData",
        "toString",
        "fee",
        "horsesAllowed",
        "state",
        "newLogic",
        "upgradeProxyTo",
        "isAdmin1",
        "previusImplementation",
        "currentImplementation",
        "notEqual",
        "changeProxyAdmin",
        "currentAdmin",
        "fail",
        "equal",
        "reason"
      ],
      "mappings": "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",
      "file": "RacingTest.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "sourcesContent": [
        "const RacingArena = artifacts.require(\"RacingArena.sol\")\nconst RacingProxy = artifacts.require(\"RacingProxy.sol\")\n\ncontract(\"RacingArena\", (accounts) => {\n  const deployer = accounts[0]\n  const upgradeAdmin = accounts[1]\n\n  const admin_1 = accounts[3]\n  const admin_2 = accounts[4]\n  const admin_3 = accounts[5]\n\n  const fee_wallet = accounts[6]\n\n  const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\"\n\n  // Addresses used only for constructor\n  const core_contract_address = accounts[9]\n  const weth_address = accounts[9];\n  const bb_address = accounts[9]\n\n  // Contracts instances\n  let logicInstance, proxyInstance, contractInstance;\n\n  beforeEach(async() => {\n    // 1. Deploy logic contract\n    logicInstance = await RacingArena.new();\n\n    // 2. Deploy proxy contract (with logic contract address and with admin address, who can upgrade the logic on the future)\n    proxyInstance = await RacingProxy.new(logicInstance.address, upgradeAdmin)\n\n    // 3. Create instance of logic contract at proxy address\n    contractInstance = await RacingArena.at(proxyInstance.address)\n\n    await contractInstance.initSetup(bb_address, weth_address);\n  })\n\n  describe(\"Initial data validation\", async() => {\n    it(\"should make deployer admin of contract after deployment\", async() => {\n      const isDeployerAdmin = await contractInstance.isAdmin(deployer)\n      assert.deepEqual(isDeployerAdmin, true)\n    })\n\n    it(\"should not make the deployer the fee receiver\", async() => {\n      const isDeployerFeeReceiver = await contractInstance.isFeeWallet({\n        from: deployer\n      })\n      assert.deepEqual(isDeployerFeeReceiver, false)\n    })\n\n    it(\"should mark fee receiver as a zero address\", async() => {\n      const feeReceiver = await contractInstance.feeWallet()\n      assert.deepEqual(feeReceiver, ZERO_ADDRESS)\n    })\n\n    it(\"should upgrade admin address with selected one\", async() => {\n      const proxyUpgradeAdmin = await proxyInstance.proxyAdmin()\n      assert.deepEqual(upgradeAdmin, proxyUpgradeAdmin)\n    })\n\n    it(\"should return initial proxy implementation address\", async() => {\n      const logicAddress = logicInstance.address\n      const implementationAddress = await proxyInstance.proxyImplementation()\n      assert.deepEqual(logicAddress, implementationAddress)\n    })\n\n    it(\"should return initial proxy version\", async() => {\n      const implementationVersion = await proxyInstance.proxyVersion()\n      assert.deepEqual(implementationVersion, \"1.0.0\")\n    })\n  })\n\n  describe(\"Change the state before upgrade\", async() => {\n    it(\"adds new admins\", async() => {\n      await contractInstance.addAdmin(admin_1, {\n        from: deployer\n      })\n      await contractInstance.addAdmin(admin_2, {\n        from: admin_1\n      })\n      await contractInstance.addAdmin(admin_3, {\n        from: admin_2\n      })\n    })\n\n    it(\"adds fee receiver wallet\", async() => {\n      await contractInstance.transferFeeWalletOwnership(fee_wallet, {\n        from: deployer\n      })\n    })\n  })\n\n  describe(\"Create race\", async() => {\n    it(\"creates new race\", async() => {\n      await contractInstance.createRace(\n        \"0x01\",\n        \"Mumbai Race\",\n        \"12\",\n        web3.utils.toWei(\"10\", \"finney\"),\n        \"2000\", {\n          from: deployer\n        }\n      )\n    })\n\n    it(\"should return correct number of horses for new race\", async() => {\n      await contractInstance.createRace(\n        \"0x01\",\n        \"Mumbai Race\",\n        \"12\",\n        web3.utils.toWei(\"10\", \"finney\"),\n        \"2000\", {\n          from: deployer\n        }\n      )\n\n      let horses = await contractInstance.getHorsesInRace(\"0x01\");\n\n      assert.deepEqual(horses.length, 0)\n    })\n  })\n\n  describe(\"Check the state after changes\", async() => {\n    it(\"should return recently added wallets for admin roles\", async() => {\n      await contractInstance.addAdmin(admin_2, {\n        from: deployer\n      });\n\n      const isAdmin2 = await contractInstance.isAdmin(admin_2);\n\n      assert.deepEqual(isAdmin2, true)\n    })\n\n    it(\"should check added wallet for fee wallet\", async() => {\n      await contractInstance.transferFeeWalletOwnership(fee_wallet, {\n        from: deployer\n      });\n\n      const isFeeWallet = await contractInstance.isFeeWallet({\n        from: fee_wallet\n      })\n      assert.deepEqual(isFeeWallet, true)\n    })\n\n    it(\"should check recently added race\", async() => {\n      await contractInstance.createRace(\n        \"0x01\",\n        \"Mumbai Race\",\n        \"12\",\n        web3.utils.toWei(\"10\", \"finney\"),\n        \"2000\", {\n          from: deployer\n        }\n      )\n\n      const isIdSaved = await contractInstance.ID_Saved(\"0x01\")\n      assert.deepEqual(isIdSaved, true)\n\n      const raceData = await contractInstance.Races(\"0x01\")\n      const length = raceData[\"Length\"].toString()\n      const fee = raceData[\"Entrance_Fee\"].toString()\n      const horsesAllowed = raceData[\"Horses_Allowed\"].toString()\n      const state = raceData[\"Race_State\"].toString()\n\n      assert.deepEqual(length, \"2000\")\n      assert.deepEqual(fee, web3.utils.toWei(\"10\", \"finney\"))\n      assert.deepEqual(horsesAllowed, \"12\")\n      assert.deepEqual(state, \"1\")\n    })\n  })\n\n  describe(\"Upgrade implementation contract\", async() => {\n    it(\"deploy new implementation contract and upgrade it on proxy address\", async() => {\n      const newLogic = await RacingArena.new(core_contract_address, bb_address)\n      await proxyInstance.upgradeProxyTo(newLogic.address, \"1.1.0\", {\n        from: upgradeAdmin\n      })\n    })\n  })\n\n  describe(\"Check the state after upgrade\", async() => {\n    it(\"should check wallets for admin roles\", async() => {\n      await contractInstance.addAdmin(admin_1, {\n        from: deployer\n      });\n\n      await contractInstance.isAdmin(admin_1)\n\n      const newLogic = await RacingArena.new(core_contract_address, bb_address)\n      await proxyInstance.upgradeProxyTo(newLogic.address, \"1.1.0\", {\n        from: upgradeAdmin\n      })\n\n      const isAdmin1 = await contractInstance.isAdmin(admin_1)\n\n      assert.deepEqual(isAdmin1, true)\n    })\n\n    it(\"should check selected fee wallet\", async() => {\n      await contractInstance.transferFeeWalletOwnership(fee_wallet, {\n        from: deployer\n      });\n\n      const newLogic = await RacingArena.new(core_contract_address, bb_address)\n      await proxyInstance.upgradeProxyTo(newLogic.address, \"1.1.0\", {\n        from: upgradeAdmin\n      })\n\n      const isFeeWallet = await contractInstance.isFeeWallet({\n        from: fee_wallet\n      })\n      assert.deepEqual(isFeeWallet, true)\n    })\n\n    it(\"should check implementation address change\", async() => {\n      const newLogic = await RacingArena.new(core_contract_address, bb_address)\n      await proxyInstance.upgradeProxyTo(newLogic.address, \"1.1.0\", {\n        from: upgradeAdmin\n      })\n\n      const previusImplementation = logicInstance.address\n      const currentImplementation = await proxyInstance.proxyImplementation()\n      assert.notEqual(previusImplementation, currentImplementation)\n    })\n\n    it(\"should check the implementation version change\", async() => {\n      const newLogic = await RacingArena.new(core_contract_address, bb_address)\n      await proxyInstance.upgradeProxyTo(newLogic.address, \"1.1.0\", {\n        from: upgradeAdmin\n      })\n\n      const currentImplementation = await proxyInstance.proxyVersion()\n      assert.deepEqual(currentImplementation, \"1.1.0\")\n    })\n\n    it(\"should check the previously added race\", async() => {\n      await contractInstance.createRace(\n        \"0x01\",\n        \"Mumbai Race\",\n        \"12\",\n        web3.utils.toWei(\"10\", \"finney\"),\n        \"2000\", {\n          from: deployer\n        }\n      )\n\n      const newLogic = await RacingArena.new(core_contract_address, bb_address)\n      await proxyInstance.upgradeProxyTo(newLogic.address, \"1.1.0\", {\n        from: upgradeAdmin\n      })\n\n      const isIdSaved = await contractInstance.ID_Saved(\"0x01\")\n      assert.deepEqual(isIdSaved, true)\n\n      const raceData = await contractInstance.Races(\"0x01\")\n      const length = raceData[\"Length\"].toString()\n      const fee = raceData[\"Entrance_Fee\"].toString()\n      const horsesAllowed = raceData[\"Horses_Allowed\"].toString()\n      const state = raceData[\"Race_State\"].toString()\n\n      assert.deepEqual(length, \"2000\")\n      assert.deepEqual(fee, web3.utils.toWei(\"10\", \"finney\"))\n      assert.deepEqual(horsesAllowed, \"12\")\n      assert.deepEqual(state, \"1\")\n    })\n  })\n\n  describe(\"Check the ownership who can upgrade contract\", async() => {\n    it(\"should check proxy admin address change\", async() => {\n      await proxyInstance.changeProxyAdmin(admin_1, {\n        from: upgradeAdmin\n      })\n\n      const currentAdmin = await proxyInstance.proxyAdmin()\n      assert.deepEqual(currentAdmin, admin_1)\n    })\n\n    it(\"should fail to upgrade proxy to non-contract address\", async() => {\n      try {\n        await proxyInstance.upgradeProxyTo(deployer, \"1.2.0\", {\n          from: upgradeAdmin\n        })\n        assert.fail(\"Expected revert not received\")\n      } catch(err) {\n        assert.equal(err.reason,\n          \"Cannot set a proxy implementation to a non-contract address\")\n      }\n    })\n  })\n})\n"
      ]
    },
    "mtime": 1605632021516
  },
  "{\"filename\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test/StudServiceV3Test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/StudServiceV3Test.js",
      "filenameRelative": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/StudServiceV3Test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "StudServiceV3Test.js",
      "sourceFileName": "StudServiceV3Test.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "StudServiceV3Test"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar Core = artifacts.require(\"Core\");\nvar GOPCreator = artifacts.require(\"GOPCreatorV2\");\nvar StudServiceV3 = artifacts.require(\"StudServiceV3\");\nvar HorseData = artifacts.require(\"HorseData\");\nvar BreedTypes = artifacts.require(\"BreedTypes\");\nvar Breeding = artifacts.require(\"Breeding\");\n\ncontract(\"StudServiceV3\", function (acc) {\n  var core = void 0,\n      gop = void 0,\n      studService = void 0,\n      hd = void 0,\n      breedTypes = void 0,\n      breeding = void 0;\n  var horseValue = web3.utils.toWei(\"1\", \"ether\");\n  var highMating = web3.utils.toWei(\"1\", \"ether\");\n  var lowMating = web3.utils.toWei(\"0.004\", \"ether\");\n  var queryPrice = web3.utils.toWei(\"0.2\", \"ether\");\n  var seconds = { day1: 86400, day3: 259200, day6: 518400 };\n  var owner = acc[1];\n  var secondOwner = acc[2];\n  var randomAddress = acc[3];\n  var poolAddress = acc[9];\n\n  before(\"Setup instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Core.new();\n\n          case 2:\n            core = _context.sent;\n            _context.next = 5;\n            return core.initialize(owner);\n\n          case 5:\n            _context.next = 7;\n            return GOPCreator.new();\n\n          case 7:\n            gop = _context.sent;\n            _context.next = 10;\n            return gop.initialize(core.address, owner);\n\n          case 10:\n            _context.next = 12;\n            return HorseData.new();\n\n          case 12:\n            hd = _context.sent;\n            _context.next = 15;\n            return hd.initialize();\n\n          case 15:\n            _context.next = 17;\n            return core.setGOPCreator(gop.address, { from: owner });\n\n          case 17:\n            _context.next = 19;\n            return core.setHorseDataAddr(hd.address, { from: owner });\n\n          case 19:\n            _context.next = 21;\n            return BreedTypes.new();\n\n          case 21:\n            breedTypes = _context.sent;\n            _context.next = 24;\n            return breedTypes.initialize(owner);\n\n          case 24:\n            _context.next = 26;\n            return StudServiceV3.new();\n\n          case 26:\n            studService = _context.sent;\n            _context.next = 29;\n            return studService.initialize(owner, core.address, breedTypes.address);\n\n          case 29:\n            _context.next = 31;\n            return Breeding.new();\n\n          case 31:\n            breeding = _context.sent;\n            _context.next = 34;\n            return breeding.initialize(owner, core.address, studService.address, poolAddress);\n\n          case 34:\n            _context.next = 36;\n            return breedTypes.populateMatrix({ from: owner });\n\n          case 36:\n            _context.next = 38;\n            return breeding.setBreedTypesAddress(breedTypes.address, { from: owner });\n\n          case 38:\n\n            gop.openBatch(1, { from: owner });\n\n          case 39:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  describe(\"Initial methods\", function () {\n    it(\"should add all horses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return gop.createGOP(owner, \"genesis horse\", { value: horseValue });\n\n            case 2:\n              _context2.next = 4;\n              return gop.createGOP(owner, \"1 female hash\", { from: owner, value: horseValue });\n\n            case 4:\n              _context2.next = 6;\n              return gop.createGOP(owner, \"2 male hash\", { from: owner, value: horseValue });\n\n            case 6:\n              _context2.next = 8;\n              return gop.createGOP(owner, \"3 female hash\", { from: owner, value: horseValue });\n\n            case 8:\n              _context2.next = 10;\n              return gop.createGOP(owner, \"4 male hash\", { from: owner, value: horseValue });\n\n            case 10:\n              _context2.next = 12;\n              return gop.createGOP(owner, \"5 female hash\", { from: owner, value: horseValue });\n\n            case 12:\n              _context2.next = 14;\n              return gop.createGOP(owner, \"6 male hash\", { from: owner, value: horseValue });\n\n            case 14:\n              _context2.next = 16;\n              return gop.createGOP(owner, \"7 female hash\", { from: owner, value: horseValue });\n\n            case 16:\n              _context2.next = 18;\n              return gop.createGOP(owner, \"8 male hash\", { from: owner, value: horseValue });\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, undefined);\n    })));\n\n    it(\"should check the emptiness of init state before adding horses to stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var horsesInStud;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return studService.getHorsesInStud();\n\n            case 2:\n              horsesInStud = _context3.sent;\n\n              assert.equal(horsesInStud.length, 0);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, undefined);\n    })));\n\n    it(\"should revert second initialize method call\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return studService.initialize(owner, core.address, breedTypes.address);\n\n            case 3:\n              _context4.next = 8;\n              break;\n\n            case 5:\n              _context4.prev = 5;\n              _context4.t0 = _context4[\"catch\"](0);\n\n              assert.deepEqual(_context4.t0.reason, \"Contract instance has already been initialized\");\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, undefined, [[0, 5]]);\n    })));\n  });\n\n  describe(\"Ownership checks\", function () {\n    it(\"should check deployer to admin of stud service\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var isAdmin;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return studService.isStudServiceAdmin(owner);\n\n            case 2:\n              isAdmin = _context5.sent;\n\n              assert.deepEqual(isAdmin, true);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, undefined);\n    })));\n\n    it(\"should add another address as admin of stud service\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      var isAdmin;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return studService.addStudServiceAdmin(secondOwner, { from: owner });\n\n            case 2:\n              _context6.next = 4;\n              return studService.isStudServiceAdmin(secondOwner);\n\n            case 4:\n              isAdmin = _context6.sent;\n\n              assert.deepEqual(isAdmin, true);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, undefined);\n    })));\n\n    it(\"should revert to add existing admin to admin list\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return studService.addStudServiceAdmin(secondOwner, { from: owner });\n\n            case 3:\n              _context7.next = 8;\n              break;\n\n            case 5:\n              _context7.prev = 5;\n              _context7.t0 = _context7[\"catch\"](0);\n\n              assert.equal(_context7.t0.reason, \"add: account is already added\");\n\n            case 8:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, undefined, [[0, 5]]);\n    })));\n\n    it(\"should revert transaction to protected method from non-registered addresses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return studService.addStudServiceAdmin(secondOwner, { from: randomAddress });\n\n            case 3:\n              _context8.next = 8;\n              break;\n\n            case 5:\n              _context8.prev = 5;\n              _context8.t0 = _context8[\"catch\"](0);\n\n              assert.equal(_context8.t0.message, \"Returned error: VM Exception while processing transaction: revert\");\n\n            case 8:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, undefined, [[0, 5]]);\n    })));\n\n    it(\"should renounce ownership and can't call methods after that\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return studService.renounceStudServiceAdmin({ from: secondOwner });\n\n            case 2:\n              _context9.prev = 2;\n              _context9.next = 5;\n              return studService.addStudServiceAdmin(secondOwner, { from: randomAddress });\n\n            case 5:\n              _context9.next = 10;\n              break;\n\n            case 7:\n              _context9.prev = 7;\n              _context9.t0 = _context9[\"catch\"](2);\n\n              assert.equal(_context9.t0.message, \"Returned error: VM Exception while processing transaction: revert\");\n\n            case 10:\n              _context9.prev = 10;\n              _context9.next = 13;\n              return studService.addStudServiceAdmin(secondOwner, { from: owner });\n\n            case 13:\n              return _context9.finish(10);\n\n            case 14:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, undefined, [[2, 7, 10, 14]]);\n    })));\n  });\n\n  describe(\"Stud admin methods checks\", function () {\n    it(\"should add new timeframe and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n      var newTimeframe, isNewTimeframeActive;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              newTimeframe = 256000;\n              _context10.next = 3;\n              return studService.getTimeframes(newTimeframe);\n\n            case 3:\n              isNewTimeframeActive = _context10.sent;\n\n              assert.deepEqual(isNewTimeframeActive, false);\n\n              _context10.next = 7;\n              return studService.addTimeFrame(newTimeframe, { from: owner });\n\n            case 7:\n              _context10.next = 9;\n              return studService.getTimeframes(newTimeframe);\n\n            case 9:\n              isNewTimeframeActive = _context10.sent;\n\n              assert.deepEqual(isNewTimeframeActive, true);\n\n            case 11:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, undefined);\n    })));\n\n    it(\"should remove timeframe and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n      var targetTimeframe, isTargetTimeframeActive;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              targetTimeframe = 256000;\n              _context11.next = 3;\n              return studService.removeTimeFrame(targetTimeframe, { from: owner });\n\n            case 3:\n              _context11.next = 5;\n              return studService.getTimeframes(targetTimeframe);\n\n            case 5:\n              isTargetTimeframeActive = _context11.sent;\n\n              assert.deepEqual(isTargetTimeframeActive, false);\n\n            case 7:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, undefined);\n    })));\n\n    it(\"should set new base fee and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n      var currentBaseFee;\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return studService.getBaseFee();\n\n            case 2:\n              currentBaseFee = _context12.sent;\n\n              assert.deepEqual(currentBaseFee.toString(), web3.utils.toWei(\"0.05\", \"ether\"));\n\n              _context12.next = 6;\n              return studService.setBaseFee(web3.utils.toWei(\"0.5\", \"ether\"), { from: owner });\n\n            case 6:\n              _context12.next = 8;\n              return studService.getBaseFee();\n\n            case 8:\n              currentBaseFee = _context12.sent;\n\n              assert.deepEqual(currentBaseFee.toString(), web3.utils.toWei(\"0.5\", \"ether\"));\n\n            case 10:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, undefined);\n    })));\n\n    it(\"should set new breed type and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n      var breedType, newBreedTypeWeight;\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              breedType = web3.utils.fromAscii(\"mustang\");\n              _context13.next = 3;\n              return studService.getBreedTypeWeight(breedType);\n\n            case 3:\n              newBreedTypeWeight = _context13.sent;\n\n              assert.deepEqual(newBreedTypeWeight.toString(), \"0\");\n\n              _context13.next = 7;\n              return studService.setBreedTypeWeight(breedType, 200, { from: owner });\n\n            case 7:\n              _context13.next = 9;\n              return studService.getBreedTypeWeight(breedType);\n\n            case 9:\n              newBreedTypeWeight = _context13.sent;\n\n              assert.deepEqual(newBreedTypeWeight.toString(), \"200\");\n\n            case 11:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, undefined);\n    })));\n\n    it(\"should set new blood line weight and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n      var bloodLine, newBloodLineWeight;\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              bloodLine = web3.utils.fromAscii(\"X\");\n              _context14.next = 3;\n              return studService.getBloodLineWeight(bloodLine);\n\n            case 3:\n              newBloodLineWeight = _context14.sent;\n\n              assert.deepEqual(newBloodLineWeight.toString(), \"0\");\n\n              _context14.next = 7;\n              return studService.setBloodlineWeight(bloodLine, 200, { from: owner });\n\n            case 7:\n              _context14.next = 9;\n              return studService.getBloodLineWeight(bloodLine);\n\n            case 9:\n              newBloodLineWeight = _context14.sent;\n\n              assert.deepEqual(newBloodLineWeight.toString(), \"200\");\n\n            case 11:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, undefined);\n    })));\n\n    it(\"should set new oraclize url and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n      var contractOraclizeUrl, newOraclizeUrl;\n      return regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return studService.getOraclizeUrl();\n\n            case 2:\n              contractOraclizeUrl = _context15.sent;\n\n              assert.deepEqual(contractOraclizeUrl, \"json(https://api.zed.run/api/v1/remove_horse_stud).horse_id\");\n\n              newOraclizeUrl = \"json(https://api.zed.run/api/v2/remove_horse_stud).horse_id\";\n              _context15.next = 7;\n              return studService.setOraclizeUrl(newOraclizeUrl, { from: owner });\n\n            case 7:\n              _context15.next = 9;\n              return studService.getOraclizeUrl();\n\n            case 9:\n              contractOraclizeUrl = _context15.sent;\n\n              assert.deepEqual(contractOraclizeUrl, newOraclizeUrl);\n\n            case 11:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, undefined);\n    })));\n\n    it(\"should allow to admin put and remove horse on stud without value\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n      var inStud, matingPrice, duration;\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return studService.adminPutInStud(2, highMating, seconds.day1, { from: secondOwner });\n\n            case 2:\n              _context16.next = 4;\n              return studService.isHorseInStud(2);\n\n            case 4:\n              inStud = _context16.sent;\n              _context16.next = 7;\n              return studService.getMatingPrice(2);\n\n            case 7:\n              matingPrice = _context16.sent;\n              _context16.next = 10;\n              return studService.getStudTime(2);\n\n            case 10:\n              duration = _context16.sent;\n\n\n              assert.equal(inStud, true);\n              assert.deepEqual(matingPrice.toString(), highMating);\n              assert.deepEqual(duration.toString(), seconds.day1.toString());\n\n              _context16.next = 16;\n              return studService.adminRemoveHorseFromstud(2, { from: secondOwner });\n\n            case 16:\n              _context16.next = 18;\n              return studService.isHorseInStud(2);\n\n            case 18:\n              inStud = _context16.sent;\n              _context16.next = 21;\n              return studService.getMatingPrice(2);\n\n            case 21:\n              matingPrice = _context16.sent;\n              _context16.next = 24;\n              return studService.getStudTime(2);\n\n            case 24:\n              duration = _context16.sent;\n\n\n              assert.equal(inStud, false);\n              assert.deepEqual(matingPrice.toString(), \"0\");\n              assert.deepEqual(duration.toString(), \"0\");\n\n            case 28:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, undefined);\n    })));\n  });\n\n  describe(\"Stud game logic checks\", function () {\n    it(\"should add first horse in stud and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n      var studInfo, inStud, matingPrice, duration;\n      return regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.next = 2;\n              return studService.putInStud(2, highMating, seconds.day1, { from: owner, value: queryPrice });\n\n            case 2:\n              _context17.next = 4;\n              return studService.getStudInfo(2);\n\n            case 4:\n              studInfo = _context17.sent;\n              inStud = studInfo[0];\n              matingPrice = studInfo[1].toString();\n              duration = studInfo[2].toString();\n\n\n              assert.equal(inStud, true);\n              assert.deepEqual(matingPrice, highMating);\n              assert.deepEqual(duration, seconds.day1.toString());\n\n            case 11:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17, undefined);\n    })));\n\n    it(\"should remove first horse from stud and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n      var studInfo, inStud, horsesInStud;\n      return regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.next = 2;\n              return studService.removeFromStud(2, { from: owner });\n\n            case 2:\n              _context18.next = 4;\n              return studService.getStudInfo(2);\n\n            case 4:\n              studInfo = _context18.sent;\n              inStud = studInfo[0];\n\n\n              assert.equal(inStud, false);\n\n              _context18.next = 9;\n              return studService.getHorsesInStud();\n\n            case 9:\n              horsesInStud = _context18.sent;\n\n              assert.equal(horsesInStud.length, 0);\n\n              // This removes the horse and puts its state to false on Stud. Meaning it can be placed\n              // to stud again but this function can only be called by the owner of the contract.\n              _context18.next = 13;\n              return studService.makeAvailableForStud(2, { from: owner });\n\n            case 13:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18, undefined);\n    })) // Makes horse available for Stud again.\n    );\n\n    it(\"should add 3 horses to stud and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n      var studInfo, inStud, matingPrice, duration, horsesInStud;\n      return regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.next = 2;\n              return studService.putInStud(2, highMating, seconds.day1, { from: owner, value: queryPrice });\n\n            case 2:\n              _context19.next = 4;\n              return studService.putInStud(4, highMating, seconds.day3, { from: owner, value: queryPrice });\n\n            case 4:\n              _context19.next = 6;\n              return studService.putInStud(6, highMating, seconds.day1, { from: owner, value: queryPrice });\n\n            case 6:\n              _context19.next = 8;\n              return studService.getStudInfo(2);\n\n            case 8:\n              studInfo = _context19.sent;\n              inStud = studInfo[0];\n              matingPrice = studInfo[1].toString();\n              duration = studInfo[2].toString();\n\n\n              assert.equal(inStud, true);\n              assert.deepEqual(matingPrice, highMating);\n              assert.deepEqual(duration, seconds.day1.toString());\n\n              // Get state of id4 horse\n              _context19.next = 17;\n              return studService.getStudInfo(4);\n\n            case 17:\n              studInfo = _context19.sent;\n\n              inStud = studInfo[0];\n              matingPrice = studInfo[1].toString();\n              duration = studInfo[2].toString();\n\n              assert.equal(inStud, true);\n              assert.deepEqual(matingPrice, highMating);\n              assert.deepEqual(duration, seconds.day3.toString());\n\n              // Get state of id6 horse\n              _context19.next = 26;\n              return studService.getStudInfo(6);\n\n            case 26:\n              studInfo = _context19.sent;\n\n              inStud = studInfo[0];\n              matingPrice = studInfo[1].toString();\n              duration = studInfo[2].toString();\n\n              assert.equal(inStud, true);\n              assert.deepEqual(matingPrice, highMating);\n              assert.deepEqual(duration, seconds.day1.toString());\n\n              _context19.next = 35;\n              return studService.getHorsesInStud();\n\n            case 35:\n              horsesInStud = _context19.sent;\n\n              assert.equal(horsesInStud.length, 3);\n              assert.deepEqual(horsesInStud.toString(), \"2,4,6\");\n\n            case 38:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19, undefined);\n    })));\n\n    it(\"should remove horse from stud and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n      var studInfo, inStud, horsesInStud;\n      return regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.next = 2;\n              return studService.removeFromStud(4, { from: owner });\n\n            case 2:\n              _context20.next = 4;\n              return studService.getStudInfo(4);\n\n            case 4:\n              studInfo = _context20.sent;\n              inStud = studInfo[0];\n\n\n              assert.equal(inStud, false);\n\n              _context20.next = 9;\n              return studService.getHorsesInStud();\n\n            case 9:\n              horsesInStud = _context20.sent;\n\n              assert.equal(horsesInStud.length, 2);\n              assert.deepEqual(horsesInStud.toString(), \"2,6\");\n\n            case 12:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20, undefined);\n    })));\n\n    it(\"should revert when horse removed from stud by owner, but not called makeAvailableForStud by owner\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n      return regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.prev = 0;\n              _context21.next = 3;\n              return studService.putInStud(4, highMating, seconds.day6, { from: owner, value: queryPrice });\n\n            case 3:\n              _context21.next = 8;\n              break;\n\n            case 5:\n              _context21.prev = 5;\n              _context21.t0 = _context21[\"catch\"](0);\n\n              assert.equal(_context21.t0.reason, \"SS horseIsInStud\");\n\n            case 8:\n              _context21.prev = 8;\n              _context21.next = 11;\n              return studService.makeAvailableForStud(4, { from: owner });\n\n            case 11:\n              return _context21.finish(8);\n\n            case 12:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21, undefined, [[0, 5, 8, 12]]);\n    })));\n\n    it(\"should revert when not the owner tries to put a horse in stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n      return regeneratorRuntime.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              _context22.prev = 0;\n              _context22.next = 3;\n              return studService.putInStud(4, highMating, seconds.day6, { from: acc[2], value: queryPrice });\n\n            case 3:\n              assert.fail(\"Expected revert not received\");\n              _context22.next = 9;\n              break;\n\n            case 6:\n              _context22.prev = 6;\n              _context22.t0 = _context22[\"catch\"](0);\n\n              assert.equal(_context22.t0.reason, \"SS notOwnerOfHorse\");\n\n            case 9:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22, undefined, [[0, 6]]);\n    })));\n\n    it(\"should revert if we try to put a female horse into stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n      return regeneratorRuntime.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              _context23.prev = 0;\n              _context23.next = 3;\n              return studService.putInStud(1, highMating, seconds.day6, { from: owner, value: queryPrice });\n\n            case 3:\n              assert.fail(\"Expected revert not received\");\n              _context23.next = 9;\n              break;\n\n            case 6:\n              _context23.prev = 6;\n              _context23.t0 = _context23[\"catch\"](0);\n\n              assert.equal(_context23.t0.reason, \"SS horseIsNotMale\");\n\n            case 9:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23, undefined, [[0, 6]]);\n    })));\n\n    it(\"should use a default value if a different time is sent\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {\n      var studInfo, time, expected;\n      return regeneratorRuntime.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              _context24.next = 2;\n              return studService.putInStud(4, highMating, 123456, { from: owner, value: queryPrice });\n\n            case 2:\n              _context24.next = 4;\n              return studService.getStudInfo(4);\n\n            case 4:\n              studInfo = _context24.sent;\n              _context24.next = 7;\n              return web3.utils.toBN(studInfo[2]).toNumber();\n\n            case 7:\n              time = _context24.sent;\n\n\n              // In case we change the time for dev. 1 day on prod.\n              expected = time === 3600 ? 86400 : time;\n\n\n              assert.equal(expected, seconds.day1); // Default to three days.\n\n            case 10:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24, undefined);\n    })));\n\n    it(\"should remove last horse from the list of horses in stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {\n      var horses;\n      return regeneratorRuntime.wrap(function _callee25$(_context25) {\n        while (1) {\n          switch (_context25.prev = _context25.next) {\n            case 0:\n              _context25.next = 2;\n              return studService.getHorsesInStud();\n\n            case 2:\n              horses = _context25.sent;\n\n              assert.deepEqual(horses.toString(), \"2,6,4\");\n              assert.deepEqual(horses.length, 3);\n\n              _context25.next = 7;\n              return studService.removeFromStud(4, { from: owner });\n\n            case 7:\n              _context25.next = 9;\n              return studService.getHorsesInStud();\n\n            case 9:\n              horses = _context25.sent;\n\n\n              assert.deepEqual(horses.toString(), \"2,6\");\n              assert.deepEqual(horses.length, 2);\n\n              _context25.next = 14;\n              return studService.makeAvailableForStud(4, { from: owner });\n\n            case 14:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n      }, _callee25, undefined);\n    })));\n\n    it(\"should revert when minimum breed price is lower than mating price\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {\n      return regeneratorRuntime.wrap(function _callee26$(_context26) {\n        while (1) {\n          switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.prev = 0;\n              _context26.next = 3;\n              return studService.putInStud(4, lowMating, 1234, { from: owner, value: queryPrice });\n\n            case 3:\n              _context26.next = 8;\n              break;\n\n            case 5:\n              _context26.prev = 5;\n              _context26.t0 = _context26[\"catch\"](0);\n\n              assert.equal(_context26.t0.reason, \"SS matingPriceLowerThanMinimumBreedPrice\");\n\n            case 8:\n            case \"end\":\n              return _context26.stop();\n          }\n        }\n      }, _callee26, undefined, [[0, 5]]);\n    })));\n\n    it(\"should revert if the horse is in the marketplace\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27() {\n      return regeneratorRuntime.wrap(function _callee27$(_context27) {\n        while (1) {\n          switch (_context27.prev = _context27.next) {\n            case 0:\n              _context27.next = 2;\n              return core.createAuction(12, 4, highMating, { from: owner, value: queryPrice });\n\n            case 2:\n              _context27.prev = 2;\n              _context27.next = 5;\n              return studService.putInStud(4, highMating, 1234, { from: owner, value: queryPrice });\n\n            case 5:\n              _context27.next = 10;\n              break;\n\n            case 7:\n              _context27.prev = 7;\n              _context27.t0 = _context27[\"catch\"](2);\n\n              assert.equal(_context27.t0.reason, \"SS notOwnerOfHorse\");\n\n            case 10:\n            case \"end\":\n              return _context27.stop();\n          }\n        }\n      }, _callee27, undefined, [[2, 7]]);\n    })));\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "StudServiceV3Test.js"
      ],
      "names": [
        "Core",
        "artifacts",
        "require",
        "GOPCreator",
        "StudServiceV3",
        "HorseData",
        "BreedTypes",
        "Breeding",
        "contract",
        "core",
        "gop",
        "studService",
        "hd",
        "breedTypes",
        "breeding",
        "horseValue",
        "web3",
        "utils",
        "toWei",
        "highMating",
        "lowMating",
        "queryPrice",
        "seconds",
        "day1",
        "day3",
        "day6",
        "owner",
        "acc",
        "secondOwner",
        "randomAddress",
        "poolAddress",
        "before",
        "new",
        "initialize",
        "address",
        "setGOPCreator",
        "from",
        "setHorseDataAddr",
        "populateMatrix",
        "setBreedTypesAddress",
        "openBatch",
        "describe",
        "it",
        "createGOP",
        "value",
        "getHorsesInStud",
        "horsesInStud",
        "assert",
        "equal",
        "length",
        "deepEqual",
        "reason",
        "isStudServiceAdmin",
        "isAdmin",
        "addStudServiceAdmin",
        "message",
        "renounceStudServiceAdmin",
        "newTimeframe",
        "getTimeframes",
        "isNewTimeframeActive",
        "addTimeFrame",
        "targetTimeframe",
        "removeTimeFrame",
        "isTargetTimeframeActive",
        "getBaseFee",
        "currentBaseFee",
        "toString",
        "setBaseFee",
        "breedType",
        "fromAscii",
        "getBreedTypeWeight",
        "newBreedTypeWeight",
        "setBreedTypeWeight",
        "bloodLine",
        "getBloodLineWeight",
        "newBloodLineWeight",
        "setBloodlineWeight",
        "getOraclizeUrl",
        "contractOraclizeUrl",
        "newOraclizeUrl",
        "setOraclizeUrl",
        "adminPutInStud",
        "isHorseInStud",
        "inStud",
        "getMatingPrice",
        "matingPrice",
        "getStudTime",
        "duration",
        "adminRemoveHorseFromstud",
        "putInStud",
        "getStudInfo",
        "studInfo",
        "removeFromStud",
        "makeAvailableForStud",
        "fail",
        "toBN",
        "toNumber",
        "time",
        "expected",
        "horses",
        "createAuction"
      ],
      "mappings": "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",
      "file": "StudServiceV3Test.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "sourcesContent": [
        "const Core = artifacts.require(\"Core\")\nconst GOPCreator = artifacts.require(\"GOPCreatorV2\")\nconst StudServiceV3 = artifacts.require(\"StudServiceV3\")\nconst HorseData = artifacts.require(\"HorseData\")\nconst BreedTypes = artifacts.require(\"BreedTypes\")\nconst Breeding = artifacts.require(\"Breeding\")\n\ncontract(\"StudServiceV3\", acc => {\n  let core, gop, studService, hd, breedTypes, breeding;\n  let horseValue = web3.utils.toWei(\"1\", \"ether\")\n  let highMating = web3.utils.toWei(\"1\", \"ether\")\n  let lowMating = web3.utils.toWei(\"0.004\", \"ether\")\n  let queryPrice = web3.utils.toWei(\"0.2\", \"ether\")\n  let seconds = { day1: 86400, day3: 259200, day6: 518400 }\n  let owner = acc[1]\n  let secondOwner = acc[2]\n  let randomAddress = acc[3]\n  let poolAddress = acc[9]\n\n  before(\"Setup instances\", async () => {\n    core = await Core.new()\n    await core.initialize(owner)\n\n    gop = await GOPCreator.new()\n    await gop.initialize(core.address, owner)\n\n    hd = await HorseData.new()\n    await hd.initialize()\n\n    await core.setGOPCreator(gop.address, { from: owner })\n    await core.setHorseDataAddr(hd.address, { from: owner })\n\n    breedTypes = await BreedTypes.new()\n    await breedTypes.initialize(owner)\n\n    studService = await StudServiceV3.new()\n    await studService.initialize(owner, core.address, breedTypes.address)\n\n    breeding = await Breeding.new()\n    await breeding.initialize(owner, core.address, studService.address, poolAddress)\n\n    await breedTypes.populateMatrix({ from: owner })\n\n    await breeding.setBreedTypesAddress(breedTypes.address, { from: owner })\n\n    gop.openBatch(1, { from: owner })\n  })\n\n  describe(\"Initial methods\", () => {\n    it(\"should add all horses\", async () => {\n      await gop.createGOP(owner, \"genesis horse\", { value: horseValue })\n      await gop.createGOP(owner, \"1 female hash\", { from: owner, value: horseValue })\n      await gop.createGOP(owner, \"2 male hash\", { from: owner, value: horseValue })\n      await gop.createGOP(owner, \"3 female hash\", { from: owner, value: horseValue })\n      await gop.createGOP(owner, \"4 male hash\", { from: owner, value: horseValue })\n      await gop.createGOP(owner, \"5 female hash\", { from: owner, value: horseValue })\n      await gop.createGOP(owner, \"6 male hash\", { from: owner, value: horseValue })\n      await gop.createGOP(owner, \"7 female hash\", { from: owner, value: horseValue })\n      await gop.createGOP(owner, \"8 male hash\", { from: owner, value: horseValue })\n    })\n\n    it(\"should check the emptiness of init state before adding horses to stud\", async () => {\n      const horsesInStud = await studService.getHorsesInStud()\n      assert.equal(horsesInStud.length, 0)\n    })\n\n    it(\"should revert second initialize method call\", async () => {\n      try {\n        await studService.initialize(owner, core.address, breedTypes.address)\n      } catch (error) {\n        assert.deepEqual(error.reason, \"Contract instance has already been initialized\")\n      }\n    })\n  })\n\n  describe(\"Ownership checks\", () => {\n    it(\"should check deployer to admin of stud service\", async () => {\n      const isAdmin = await studService.isStudServiceAdmin(owner)\n      assert.deepEqual(isAdmin, true)\n    })\n\n    it(\"should add another address as admin of stud service\", async () => {\n      await studService.addStudServiceAdmin(secondOwner, { from: owner })\n      const isAdmin = await studService.isStudServiceAdmin(secondOwner)\n      assert.deepEqual(isAdmin, true)\n    })\n\n    it(\"should revert to add existing admin to admin list\", async () => {\n      try {\n        await studService.addStudServiceAdmin(secondOwner, { from: owner })\n      } catch (err) {\n        assert.equal(err.reason, \"add: account is already added\")\n      }\n    })\n\n    it(\"should revert transaction to protected method from non-registered addresses\", async () => {\n      try {\n        await studService.addStudServiceAdmin(secondOwner, { from: randomAddress })\n      } catch (err) {\n        assert.equal(err.message, \"Returned error: VM Exception while processing transaction: revert\")\n      }\n    })\n\n    it(\"should renounce ownership and can't call methods after that\", async () => {\n      await studService.renounceStudServiceAdmin({ from: secondOwner })\n\n      try {\n        await studService.addStudServiceAdmin(secondOwner, { from: randomAddress })\n      } catch (err) {\n        assert.equal(err.message, \"Returned error: VM Exception while processing transaction: revert\")\n      } finally {\n        // Add back second admin for future tests\n        await studService.addStudServiceAdmin(secondOwner, { from: owner })\n      }\n    })\n  })\n\n  describe(\"Stud admin methods checks\", () => {\n    it(\"should add new timeframe and check the state\", async () => {\n      const newTimeframe = 256000\n      let isNewTimeframeActive = await studService.getTimeframes(newTimeframe)\n      assert.deepEqual(isNewTimeframeActive, false)\n\n      await studService.addTimeFrame(newTimeframe, { from: owner })\n      isNewTimeframeActive = await studService.getTimeframes(newTimeframe)\n      assert.deepEqual(isNewTimeframeActive, true)\n    })\n\n    it(\"should remove timeframe and check the state\", async () => {\n      const targetTimeframe = 256000\n      await studService.removeTimeFrame(targetTimeframe, { from: owner })\n\n      const isTargetTimeframeActive = await studService.getTimeframes(targetTimeframe)\n      assert.deepEqual(isTargetTimeframeActive, false)\n    })\n\n    it(\"should set new base fee and check the state\", async () => {\n      let currentBaseFee = await studService.getBaseFee()\n      assert.deepEqual(currentBaseFee.toString(), web3.utils.toWei(\"0.05\", \"ether\"))\n\n      await studService.setBaseFee(web3.utils.toWei(\"0.5\", \"ether\"), { from: owner })\n      currentBaseFee = await studService.getBaseFee()\n      assert.deepEqual(currentBaseFee.toString(), web3.utils.toWei(\"0.5\", \"ether\"))\n    })\n\n    it(\"should set new breed type and check the state\", async () => {\n      const breedType = web3.utils.fromAscii(\"mustang\")\n      let newBreedTypeWeight = await studService.getBreedTypeWeight(breedType)\n      assert.deepEqual(newBreedTypeWeight.toString(), \"0\")\n\n      await studService.setBreedTypeWeight(breedType, 200, { from: owner })\n\n      newBreedTypeWeight = await studService.getBreedTypeWeight(breedType)\n      assert.deepEqual(newBreedTypeWeight.toString(), \"200\")\n    })\n\n    it(\"should set new blood line weight and check the state\", async () => {\n      const bloodLine = web3.utils.fromAscii(\"X\")\n      let newBloodLineWeight = await studService.getBloodLineWeight(bloodLine)\n      assert.deepEqual(newBloodLineWeight.toString(), \"0\")\n\n      await studService.setBloodlineWeight(bloodLine, 200, { from: owner })\n\n      newBloodLineWeight = await studService.getBloodLineWeight(bloodLine)\n      assert.deepEqual(newBloodLineWeight.toString(), \"200\")\n    })\n\n    it(\"should set new oraclize url and check the state\", async () => {\n      let contractOraclizeUrl = await studService.getOraclizeUrl()\n      assert.deepEqual(contractOraclizeUrl, \"json(https://api.zed.run/api/v1/remove_horse_stud).horse_id\")\n\n      const newOraclizeUrl = \"json(https://api.zed.run/api/v2/remove_horse_stud).horse_id\"\n      await studService.setOraclizeUrl(newOraclizeUrl, { from: owner })\n\n      contractOraclizeUrl = await studService.getOraclizeUrl()\n      assert.deepEqual(contractOraclizeUrl, newOraclizeUrl)\n    })\n\n    it(\"should allow to admin put and remove horse on stud without value\", async () => {\n      await studService.adminPutInStud(2, highMating, seconds.day1, { from: secondOwner })\n\n      let inStud = await studService.isHorseInStud(2)\n      let matingPrice = await studService.getMatingPrice(2)\n      let duration = await studService.getStudTime(2)\n\n      assert.equal(inStud, true)\n      assert.deepEqual(matingPrice.toString(), highMating)\n      assert.deepEqual(duration.toString(), seconds.day1.toString())\n\n      await studService.adminRemoveHorseFromstud(2, { from: secondOwner })\n\n      inStud = await studService.isHorseInStud(2)\n      matingPrice = await studService.getMatingPrice(2)\n      duration = await studService.getStudTime(2)\n\n      assert.equal(inStud, false)\n      assert.deepEqual(matingPrice.toString(), \"0\")\n      assert.deepEqual(duration.toString(), \"0\")\n    })\n  })\n\n  describe(\"Stud game logic checks\", () => {\n    it(\"should add first horse in stud and check the state\", async () => {\n      await studService.putInStud(2, highMating, seconds.day1, { from: owner, value: queryPrice })\n\n      const studInfo = await studService.getStudInfo(2)\n      const inStud = studInfo[0]\n      const matingPrice = studInfo[1].toString()\n      const duration = studInfo[2].toString()\n\n      assert.equal(inStud, true)\n      assert.deepEqual(matingPrice, highMating)\n      assert.deepEqual(duration, seconds.day1.toString())\n    })\n\n    it(\"should remove first horse from stud and check the state\", async () => {\n      // Removes horse from Stud list and changes status but can't be placed into Stud while\n      // the specified time has not passed yet.\n      await studService.removeFromStud(2, { from: owner })\n\n      const studInfo = await studService.getStudInfo(2)\n      const inStud = studInfo[0]\n\n      assert.equal(inStud, false)\n\n      const horsesInStud = await studService.getHorsesInStud()\n      assert.equal(horsesInStud.length, 0)\n\n      // This removes the horse and puts its state to false on Stud. Meaning it can be placed\n      // to stud again but this function can only be called by the owner of the contract.\n      await studService.makeAvailableForStud(2, { from: owner }) // Makes horse available for Stud again.\n    })\n\n    it(\"should add 3 horses to stud and check the state\", async () => {\n      // Add horses to stud\n      await studService.putInStud(2, highMating, seconds.day1, { from: owner, value: queryPrice })\n      await studService.putInStud(4, highMating, seconds.day3, { from: owner, value: queryPrice })\n      await studService.putInStud(6, highMating, seconds.day1, { from: owner, value: queryPrice })\n\n      // Get state of id2 horse\n      let studInfo = await studService.getStudInfo(2)\n      let inStud = studInfo[0]\n      let matingPrice = studInfo[1].toString()\n      let duration = studInfo[2].toString()\n\n      assert.equal(inStud, true)\n      assert.deepEqual(matingPrice, highMating)\n      assert.deepEqual(duration, seconds.day1.toString())\n\n      // Get state of id4 horse\n      studInfo = await studService.getStudInfo(4)\n      inStud = studInfo[0]\n      matingPrice = studInfo[1].toString()\n      duration = studInfo[2].toString()\n\n      assert.equal(inStud, true)\n      assert.deepEqual(matingPrice, highMating)\n      assert.deepEqual(duration, seconds.day3.toString())\n\n      // Get state of id6 horse\n      studInfo = await studService.getStudInfo(6)\n      inStud = studInfo[0]\n      matingPrice = studInfo[1].toString()\n      duration = studInfo[2].toString()\n\n      assert.equal(inStud, true)\n      assert.deepEqual(matingPrice, highMating)\n      assert.deepEqual(duration, seconds.day1.toString())\n\n      const horsesInStud = await studService.getHorsesInStud()\n      assert.equal(horsesInStud.length, 3)\n      assert.deepEqual(horsesInStud.toString(), \"2,4,6\")\n    })\n\n    it(\"should remove horse from stud and check the state\", async () => {\n      // Removes horse from Stud list and changes status. It can't be placed into Stud while\n      // the specified time has not passed yet (should be tested on the next test)\n      await studService.removeFromStud(4, { from: owner })\n\n      const studInfo = await studService.getStudInfo(4)\n      const inStud = studInfo[0]\n\n      assert.equal(inStud, false)\n\n      const horsesInStud = await studService.getHorsesInStud()\n      assert.equal(horsesInStud.length, 2)\n      assert.deepEqual(horsesInStud.toString(), \"2,6\")\n    })\n\n    it(\"should revert when horse removed from stud by owner, but not called makeAvailableForStud by owner\", async () => {\n      try {\n        await studService.putInStud(4, highMating, seconds.day6, { from: owner, value: queryPrice })\n      } catch (err) {\n        assert.equal(err.reason, \"SS horseIsInStud\")\n      } finally {\n        // Makes horse available for Stud again.\n        await studService.makeAvailableForStud(4, { from: owner })\n      }\n    })\n\n    it(\"should revert when not the owner tries to put a horse in stud\", async () => {\n      try {\n        await studService.putInStud(4, highMating, seconds.day6, { from: acc[2], value: queryPrice })\n        assert.fail(\"Expected revert not received\")\n      } catch (err) {\n        assert.equal(err.reason, \"SS notOwnerOfHorse\")\n      }\n    })\n\n    it(\"should revert if we try to put a female horse into stud\", async () => {\n      try {\n        await studService.putInStud(1, highMating, seconds.day6, { from: owner, value: queryPrice })\n        assert.fail(\"Expected revert not received\")\n      } catch (err) {\n        assert.equal(err.reason, \"SS horseIsNotMale\")\n      }\n    })\n\n    it(\"should use a default value if a different time is sent\", async () => {\n      // We'll use a random value for the duration since only three values are allowed at the moment.\n      await studService.putInStud(4, highMating, 123456, { from: owner, value: queryPrice })\n\n      let studInfo = await studService.getStudInfo(4)\n      let time = await web3.utils.toBN(studInfo[2]).toNumber()\n\n      // In case we change the time for dev. 1 day on prod.\n      const expected = time === 3600 ? 86400 : time\n\n      assert.equal(expected, seconds.day1) // Default to three days.\n    })\n\n    it(\"should remove last horse from the list of horses in stud\", async () => {\n      // Horse 2 is in Stud at the moment.\n      let horses = await studService.getHorsesInStud()\n      assert.deepEqual(horses.toString(), \"2,6,4\")\n      assert.deepEqual(horses.length, 3)\n\n      await studService.removeFromStud(4, { from: owner })\n      horses = await studService.getHorsesInStud()\n\n      assert.deepEqual(horses.toString(), \"2,6\")\n      assert.deepEqual(horses.length, 2)\n\n      await studService.makeAvailableForStud(4, { from: owner })\n    })\n\n    it(\"should revert when minimum breed price is lower than mating price\", async () => {\n      try {\n        await studService.putInStud(4, lowMating, 1234, { from: owner, value: queryPrice })\n      } catch (err) {\n        assert.equal(err.reason, \"SS matingPriceLowerThanMinimumBreedPrice\")\n      }\n    })\n\n    it(\"should revert if the horse is in the marketplace\", async () => {\n      await core.createAuction(12, 4, highMating, { from: owner, value: queryPrice })\n\n      // At this point the new owner of the horse is the contract, so if we try to put the horse into Stud we're\n      // going to get an error because that's not the current owner of the horse.\n      try {\n        await studService.putInStud(4, highMating, 1234, { from: owner, value: queryPrice })\n      } catch (err) {\n        assert.equal(err.reason, \"SS notOwnerOfHorse\")\n      }\n    })\n  })\n})\n"
      ]
    },
    "mtime": 1604597163084
  },
  "{\"filename\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test/TokenTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/TokenTest.js",
      "filenameRelative": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/TokenTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "TokenTest.js",
      "sourceFileName": "TokenTest.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "TokenTest"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar Core = artifacts.require(\"Core\");\nvar GOPCreatorV2 = artifacts.require(\"GOPCreatorV2\");\nvar PrivGOP = artifacts.require('PrivateGOPCreatorV2');\nvar HorseData = artifacts.require(\"HorseData\");\n\ncontract(\"Token\", function (acc) {\n  var instance = void 0,\n      privGOP = void 0,\n      gop = void 0,\n      hd = void 0;\n  var owner = acc[1];\n  var secondBuyer = acc[2];\n  var amount = web3.utils.toWei(\"0.40\", \"ether\");\n\n  beforeEach(\"setup instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Core.new();\n\n          case 2:\n            instance = _context.sent;\n            _context.next = 5;\n            return instance.initialize(owner);\n\n          case 5:\n            _context.next = 7;\n            return PrivGOP.new();\n\n          case 7:\n            privGOP = _context.sent;\n            _context.next = 10;\n            return GOPCreatorV2.new(owner, privGOP.address, instance.address, acc[3], {\n              from: owner\n            });\n\n          case 10:\n            gop = _context.sent;\n            _context.next = 13;\n            return HorseData.new();\n\n          case 13:\n            hd = _context.sent;\n            _context.next = 16;\n            return hd.initialize();\n\n          case 16:\n            _context.next = 18;\n            return instance.setGOPCreator(gop.address, {\n              from: owner\n            });\n\n          case 18:\n            _context.next = 20;\n            return instance.setHorseDataAddr(hd.address, {\n              from: owner\n            });\n\n          case 20:\n            _context.next = 22;\n            return gop.openBatch(1, {\n              from: owner\n            });\n\n          case 22:\n            _context.next = 24;\n            return gop.createGOP(owner, \"male hash\", {\n              from: owner,\n              value: amount\n            });\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  it(\"should mint a new token with specified params\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var tokenOwner;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return gop.createGOP(owner, \"male hash\", {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context2.next = 4;\n            return instance.ownerOf(1);\n\n          case 4:\n            tokenOwner = _context2.sent;\n\n\n            assert.equal(tokenOwner, owner);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })));\n\n  it(\"should be able to transfer a token\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var newTokenOwner;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return gop.createGOP(owner, \"male hash\", {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context3.next = 4;\n            return instance.safeTransferFrom(owner, secondBuyer, 1, {\n              from: owner\n            });\n\n          case 4:\n            _context3.next = 6;\n            return instance.ownerOf(1);\n\n          case 6:\n            newTokenOwner = _context3.sent;\n\n\n            assert.equal(secondBuyer, newTokenOwner);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  })));\n\n  it(\"should select the correct range of base value depending on the gen\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    var baseValue;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return gop.createGOP(owner, \"some hash\", {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context4.next = 4;\n            return instance.getBaseValue(1);\n\n          case 4:\n            baseValue = _context4.sent;\n\n\n            assert.isAtLeast(web3.utils.toBN(baseValue).toNumber(), 95);\n            assert.isAtMost(web3.utils.toBN(baseValue).toNumber(), 99);\n\n            _context4.next = 9;\n            return gop.openBatch(2, {\n              from: owner\n            });\n\n          case 9:\n            _context4.next = 11;\n            return gop.createGOP(owner, \"some hash\", {\n              from: owner,\n              value: amount\n            });\n\n          case 11:\n            _context4.next = 13;\n            return instance.getBaseValue(2);\n\n          case 13:\n            baseValue = _context4.sent;\n\n\n            assert.isAtMost(web3.utils.toBN(baseValue).toNumber(), 89);\n            assert.isAtLeast(web3.utils.toBN(baseValue).toNumber(), 80);\n\n          case 16:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined);\n  })));\n\n  it(\"should only allow the admin to transfer a token without approval\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n    var ownerOf, oldTotalSupply, newOwner, newTotalSupply;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return gop.createGOP(owner, \"some hash\", {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context5.next = 4;\n            return instance.ownerOf(1);\n\n          case 4:\n            ownerOf = _context5.sent;\n\n            assert.equal(ownerOf, owner);\n\n            _context5.next = 8;\n            return instance.totalSupply();\n\n          case 8:\n            oldTotalSupply = _context5.sent;\n\n            assert.equal(oldTotalSupply.toString(), \"2\");\n\n            _context5.next = 12;\n            return instance.adminTransferToken(1, acc[2], {\n              from: owner\n            });\n\n          case 12:\n            _context5.next = 14;\n            return instance.ownerOf(1);\n\n          case 14:\n            newOwner = _context5.sent;\n\n            assert.equal(newOwner, acc[2]);\n\n            _context5.next = 18;\n            return instance.totalSupply();\n\n          case 18:\n            newTotalSupply = _context5.sent;\n\n            assert.equal(oldTotalSupply.toString(), newTotalSupply.toString());\n\n          case 20:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, undefined);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "TokenTest.js"
      ],
      "names": [
        "Core",
        "artifacts",
        "require",
        "GOPCreatorV2",
        "PrivGOP",
        "HorseData",
        "contract",
        "instance",
        "privGOP",
        "gop",
        "hd",
        "owner",
        "acc",
        "secondBuyer",
        "amount",
        "web3",
        "utils",
        "toWei",
        "beforeEach",
        "new",
        "initialize",
        "address",
        "from",
        "setGOPCreator",
        "setHorseDataAddr",
        "openBatch",
        "createGOP",
        "value",
        "it",
        "ownerOf",
        "tokenOwner",
        "assert",
        "equal",
        "safeTransferFrom",
        "newTokenOwner",
        "getBaseValue",
        "baseValue",
        "isAtLeast",
        "toBN",
        "toNumber",
        "isAtMost",
        "totalSupply",
        "oldTotalSupply",
        "toString",
        "adminTransferToken",
        "newOwner",
        "newTotalSupply"
      ],
      "mappings": "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",
      "file": "TokenTest.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "sourcesContent": [
        "const Core = artifacts.require(\"Core\");\nconst GOPCreatorV2 = artifacts.require(\"GOPCreatorV2\");\nconst PrivGOP = artifacts.require('PrivateGOPCreatorV2')\nconst HorseData = artifacts.require(\"HorseData\");\n\ncontract(\"Token\", acc => {\n  let instance, privGOP, gop, hd;\n  let owner = acc[1];\n  let secondBuyer = acc[2];\n  let amount = web3.utils.toWei(\"0.40\", \"ether\");\n\n  beforeEach(\"setup instances\", async() => {\n    instance = await Core.new();\n    await instance.initialize(owner);\n\n    privGOP = await PrivGOP.new();\n\n    gop = await GOPCreatorV2.new(owner, privGOP.address, instance.address, acc[3], {\n      from: owner\n    })\n\n    hd = await HorseData.new();\n    await hd.initialize();\n\n    await instance.setGOPCreator(gop.address, {\n      from: owner\n    })\n    await instance.setHorseDataAddr(hd.address, {\n      from: owner\n    })\n\n    await gop.openBatch(1, {\n      from: owner\n    });\n    await gop.createGOP(owner, \"male hash\", {\n      from: owner,\n      value: amount\n    });\n  })\n\n  it(\"should mint a new token with specified params\", async() => {\n    await gop.createGOP(owner, \"male hash\", {\n      from: owner,\n      value: amount\n    });\n    let tokenOwner = await instance.ownerOf(1);\n\n    assert.equal(tokenOwner, owner);\n  })\n\n  it(\"should be able to transfer a token\", async() => {\n    // 'owner' has token 1.\n    await gop.createGOP(owner, \"male hash\", {\n      from: owner,\n      value: amount\n    });\n    await instance.safeTransferFrom(owner, secondBuyer, 1, {\n      from: owner\n    })\n\n    let newTokenOwner = await instance.ownerOf(1);\n\n    assert.equal(secondBuyer, newTokenOwner);\n  })\n\n  it(\"should select the correct range of base value depending on the gen\", async() => {\n    await gop.createGOP(owner, \"some hash\", {\n        from: owner,\n        value: amount\n      }) // 1\n\n    let baseValue = await instance.getBaseValue(1)\n\n    assert.isAtLeast(web3.utils.toBN(baseValue)\n      .toNumber(), 95)\n    assert.isAtMost(web3.utils.toBN(baseValue)\n      .toNumber(), 99);\n\n    await gop.openBatch(2, {\n      from: owner\n    })\n    await gop.createGOP(owner, \"some hash\", {\n        from: owner,\n        value: amount\n      }) // 2\n\n    baseValue = await instance.getBaseValue(2);\n\n    assert.isAtMost(web3.utils.toBN(baseValue)\n      .toNumber(), 89);\n    assert.isAtLeast(web3.utils.toBN(baseValue)\n      .toNumber(), 80)\n  })\n\n  it(\"should only allow the admin to transfer a token without approval\", async() => {\n    await gop.createGOP(owner, \"some hash\", {\n      from: owner,\n      value: amount\n    }); // 1\n    let ownerOf = await instance.ownerOf(1);\n    assert.equal(ownerOf, owner);\n\n    let oldTotalSupply = await instance.totalSupply();\n    assert.equal(oldTotalSupply.toString(), \"2\");\n\n    await instance.adminTransferToken(1, acc[2], {\n      from: owner\n    });\n    let newOwner = await instance.ownerOf(1);\n    assert.equal(newOwner, acc[2])\n\n    let newTotalSupply = await instance.totalSupply();\n    assert.equal(oldTotalSupply.toString(), newTotalSupply.toString())\n  })\n})\n"
      ]
    },
    "mtime": 1604693643607
  },
  "{\"filename\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test/StudServiceV4Test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Documents/zed/cryptofield-core/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/StudServiceV4Test.js",
      "filenameRelative": "/Users/migueldiaz/Documents/zed/cryptofield-core/test/StudServiceV4Test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "StudServiceV4Test.js",
      "sourceFileName": "StudServiceV4Test.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "StudServiceV4Test"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar Core = artifacts.require(\"Core\");\nvar GOPCreatorV2 = artifacts.require(\"GOPCreatorV2\");\nvar PrivGOP = artifacts.require('PrivateGOPCreatorV2');\nvar StudServiceV4 = artifacts.require(\"StudServiceV4\");\nvar HorseData = artifacts.require(\"HorseData\");\nvar BreedTypes = artifacts.require(\"BreedTypes\");\nvar Breeding = artifacts.require(\"Breeding\");\n\ncontract(\"StudServiceV4\", function (acc) {\n  var core = void 0,\n      privGOP = void 0,\n      gop = void 0,\n      studService = void 0,\n      hd = void 0,\n      breedTypes = void 0,\n      breeding = void 0;\n  var horseValue = web3.utils.toWei(\"1\", \"ether\");\n  var highMating = web3.utils.toWei(\"1\", \"ether\");\n  var lowMating = web3.utils.toWei(\"0.004\", \"ether\");\n  var queryPrice = web3.utils.toWei(\"0.2\", \"ether\");\n  var seconds = {\n    day1: 86400,\n    day3: 259200,\n    day6: 518400\n  };\n  var owner = acc[1];\n  var secondOwner = acc[2];\n  var randomAddress = acc[3];\n  var poolAddress = acc[9];\n\n  beforeEach(\"Setup instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Core.new();\n\n          case 2:\n            core = _context.sent;\n            _context.next = 5;\n            return core.initialize(owner);\n\n          case 5:\n            _context.next = 7;\n            return PrivGOP.new();\n\n          case 7:\n            privGOP = _context.sent;\n            _context.next = 10;\n            return GOPCreatorV2.new(owner, privGOP.address, core.address, acc[3], {\n              from: owner\n            });\n\n          case 10:\n            gop = _context.sent;\n            _context.next = 13;\n            return HorseData.new();\n\n          case 13:\n            hd = _context.sent;\n            _context.next = 16;\n            return hd.initialize();\n\n          case 16:\n            _context.next = 18;\n            return core.setGOPCreator(gop.address, {\n              from: owner\n            });\n\n          case 18:\n            _context.next = 20;\n            return core.setHorseDataAddr(hd.address, {\n              from: owner\n            });\n\n          case 20:\n            _context.next = 22;\n            return BreedTypes.new();\n\n          case 22:\n            breedTypes = _context.sent;\n            _context.next = 25;\n            return breedTypes.initialize(owner);\n\n          case 25:\n            _context.next = 27;\n            return StudServiceV4.new(core.address, breedTypes.address, acc[2], {\n              from: owner\n            });\n\n          case 27:\n            studService = _context.sent;\n            _context.next = 30;\n            return Breeding.new();\n\n          case 30:\n            breeding = _context.sent;\n            _context.next = 33;\n            return breeding.initialize(owner, core.address, studService.address, poolAddress, breedTypes.address, breeding.address);\n\n          case 33:\n            _context.next = 35;\n            return breedTypes.populateMatrix({\n              from: owner\n            });\n\n          case 35:\n            _context.next = 37;\n            return breeding.setBreedTypesAddress(breedTypes.address, {\n              from: owner\n            });\n\n          case 37:\n            _context.next = 39;\n            return gop.openBatch(1, {\n              from: owner\n            });\n\n          case 39:\n            _context.next = 41;\n            return createInitialHorses();\n\n          case 41:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  var createInitialHorses = function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return gop.createGOP(owner, \"genesis horse\", {\n                value: horseValue\n              });\n\n            case 2:\n              _context2.next = 4;\n              return gop.createGOP(owner, \"1 female hash\", {\n                from: owner,\n                value: horseValue\n              });\n\n            case 4:\n              _context2.next = 6;\n              return gop.createGOP(owner, \"2 male hash\", {\n                from: owner,\n                value: horseValue\n              });\n\n            case 6:\n              _context2.next = 8;\n              return gop.createGOP(owner, \"3 female hash\", {\n                from: owner,\n                value: horseValue\n              });\n\n            case 8:\n              _context2.next = 10;\n              return gop.createGOP(owner, \"4 male hash\", {\n                from: owner,\n                value: horseValue\n              });\n\n            case 10:\n              _context2.next = 12;\n              return gop.createGOP(owner, \"5 female hash\", {\n                from: owner,\n                value: horseValue\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, undefined);\n    }));\n\n    return function createInitialHorses() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  describe(\"Initial methods\", function () {\n    it(\"should check the emptiness of init state before adding horses to stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var horsesInStud;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return studService.getHorsesInStud();\n\n            case 2:\n              horsesInStud = _context3.sent;\n\n              assert.equal(horsesInStud.length, 0);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, undefined);\n    })));\n  });\n\n  describe(\"Ownership checks\", function () {\n    it(\"should check deployer to admin of stud service\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var isAdmin;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return studService.isStudServiceAdmin(owner);\n\n            case 2:\n              isAdmin = _context4.sent;\n\n              assert.deepEqual(isAdmin, true);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, undefined);\n    })));\n\n    it(\"should add another address as admin of stud service\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var isAdmin;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return studService.addStudServiceAdmin(secondOwner, {\n                from: owner\n              });\n\n            case 2:\n              _context5.next = 4;\n              return studService.isStudServiceAdmin(secondOwner);\n\n            case 4:\n              isAdmin = _context5.sent;\n\n              assert.deepEqual(isAdmin, true);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, undefined);\n    })));\n\n    it(\"should revert to add existing admin to admin list\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return studService.addStudServiceAdmin(secondOwner, {\n                from: owner\n              });\n\n            case 3:\n              _context6.next = 8;\n              break;\n\n            case 5:\n              _context6.prev = 5;\n              _context6.t0 = _context6[\"catch\"](0);\n\n              assert.equal(_context6.t0.reason, \"add: account is already added\");\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, undefined, [[0, 5]]);\n    })));\n\n    it(\"should revert transaction to protected method from non-registered addresses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return studService.addStudServiceAdmin(secondOwner, {\n                from: randomAddress\n              });\n\n            case 3:\n              _context7.next = 8;\n              break;\n\n            case 5:\n              _context7.prev = 5;\n              _context7.t0 = _context7[\"catch\"](0);\n\n              assert.equal(_context7.t0.message, \"Returned error: VM Exception while processing transaction: revert\");\n\n            case 8:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, undefined, [[0, 5]]);\n    })));\n\n    it(\"should renounce ownership and can't call methods after that\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return studService.renounceStudServiceAdmin({\n                from: owner\n              });\n\n            case 2:\n              _context8.prev = 2;\n              _context8.next = 5;\n              return studService.addStudServiceAdmin(secondOwner, {\n                from: owner\n              });\n\n            case 5:\n              _context8.next = 10;\n              break;\n\n            case 7:\n              _context8.prev = 7;\n              _context8.t0 = _context8[\"catch\"](2);\n\n              assert.equal(_context8.t0.message, \"Returned error: VM Exception while processing transaction: revert\");\n\n            case 10:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, undefined, [[2, 7]]);\n    })));\n  });\n\n  describe(\"Stud admin methods checks\", function () {\n    it(\"should add new timeframe and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n      var newTimeframe, isNewTimeframeActive;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              newTimeframe = 256000;\n              _context9.next = 3;\n              return studService.isTimeframeExist(newTimeframe);\n\n            case 3:\n              isNewTimeframeActive = _context9.sent;\n\n              assert.deepEqual(isNewTimeframeActive, false);\n\n              _context9.next = 7;\n              return studService.addTimeFrame(newTimeframe, {\n                from: owner\n              });\n\n            case 7:\n              _context9.next = 9;\n              return studService.isTimeframeExist(newTimeframe);\n\n            case 9:\n              isNewTimeframeActive = _context9.sent;\n\n              assert.deepEqual(isNewTimeframeActive, true);\n\n            case 11:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, undefined);\n    })));\n\n    it(\"should remove timeframe and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n      var targetTimeframe, isTargetTimeframeActive;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              targetTimeframe = 86400;\n              _context10.next = 3;\n              return studService.removeTimeFrame(targetTimeframe, {\n                from: owner\n              });\n\n            case 3:\n              _context10.next = 5;\n              return studService.isTimeframeExist(targetTimeframe);\n\n            case 5:\n              isTargetTimeframeActive = _context10.sent;\n\n              assert.deepEqual(isTargetTimeframeActive, false);\n\n            case 7:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, undefined);\n    })));\n\n    it(\"should set new base fee and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n      var currentBaseFee;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return studService.getBaseFee();\n\n            case 2:\n              currentBaseFee = _context11.sent;\n\n              assert.deepEqual(currentBaseFee.toString(), web3.utils.toWei(\"0.05\", \"ether\"));\n\n              _context11.next = 6;\n              return studService.setBaseFee(web3.utils.toWei(\"0.5\", \"ether\"), {\n                from: owner\n              });\n\n            case 6:\n              _context11.next = 8;\n              return studService.getBaseFee();\n\n            case 8:\n              currentBaseFee = _context11.sent;\n\n              assert.deepEqual(currentBaseFee.toString(), web3.utils.toWei(\"0.5\", \"ether\"));\n\n            case 10:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, undefined);\n    })));\n\n    it(\"should set new breed type and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n      var breedType, newBreedTypeWeight;\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              breedType = web3.utils.fromAscii(\"mustang\");\n              _context12.next = 3;\n              return studService.getBreedTypeWeight(breedType);\n\n            case 3:\n              newBreedTypeWeight = _context12.sent;\n\n              assert.deepEqual(newBreedTypeWeight.toString(), \"0\");\n\n              _context12.next = 7;\n              return studService.setBreedTypeWeight(breedType, 200, {\n                from: owner\n              });\n\n            case 7:\n              _context12.next = 9;\n              return studService.getBreedTypeWeight(breedType);\n\n            case 9:\n              newBreedTypeWeight = _context12.sent;\n\n              assert.deepEqual(newBreedTypeWeight.toString(), \"200\");\n\n            case 11:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, undefined);\n    })));\n\n    it(\"should set new blood line weight and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n      var bloodLine, newBloodLineWeight;\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              bloodLine = web3.utils.fromAscii(\"X\");\n              _context13.next = 3;\n              return studService.getBloodLineWeight(bloodLine);\n\n            case 3:\n              newBloodLineWeight = _context13.sent;\n\n              assert.deepEqual(newBloodLineWeight.toString(), \"0\");\n\n              _context13.next = 7;\n              return studService.setBloodlineWeight(bloodLine, 200, {\n                from: owner\n              });\n\n            case 7:\n              _context13.next = 9;\n              return studService.getBloodLineWeight(bloodLine);\n\n            case 9:\n              newBloodLineWeight = _context13.sent;\n\n              assert.deepEqual(newBloodLineWeight.toString(), \"200\");\n\n            case 11:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, undefined);\n    })));\n\n    it(\"should allow admin to put and remove horse on stud without value\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n      var inStud, matingPrice, duration;\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return studService.adminPutInStud(2, highMating, seconds.day1, {\n                from: owner\n              });\n\n            case 2:\n              _context14.next = 4;\n              return studService.isHorseInStud(2);\n\n            case 4:\n              inStud = _context14.sent;\n              _context14.next = 7;\n              return studService.getMatingPrice(2);\n\n            case 7:\n              matingPrice = _context14.sent;\n              _context14.next = 10;\n              return studService.getStudTime(2);\n\n            case 10:\n              duration = _context14.sent;\n\n\n              assert.equal(inStud, true);\n              assert.deepEqual(matingPrice.toString(), highMating);\n              assert.deepEqual(duration.toString(), seconds.day1.toString());\n\n              _context14.next = 16;\n              return studService.removeFromStud(2, {\n                from: owner\n              });\n\n            case 16:\n              _context14.next = 18;\n              return studService.isHorseInStud(2);\n\n            case 18:\n              inStud = _context14.sent;\n              _context14.next = 21;\n              return studService.getMatingPrice(2);\n\n            case 21:\n              matingPrice = _context14.sent;\n              _context14.next = 24;\n              return studService.getStudTime(2);\n\n            case 24:\n              duration = _context14.sent;\n\n\n              assert.equal(inStud, false);\n              assert.deepEqual(matingPrice.toString(), \"0\");\n              assert.deepEqual(duration.toString(), \"0\");\n\n            case 28:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, undefined);\n    })));\n  });\n\n  describe(\"Stud game logic checks\", function () {\n    it(\"should add first horse in stud and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n      var studInfo, inStud, matingPrice, duration;\n      return regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return studService.putInStud(2, highMating, seconds.day1, {\n                from: owner\n              });\n\n            case 2:\n              _context15.next = 4;\n              return studService.getStudInfo(2);\n\n            case 4:\n              studInfo = _context15.sent;\n              inStud = studInfo[0];\n              matingPrice = studInfo[1].toString();\n              duration = studInfo[2].toString();\n\n\n              assert.equal(inStud, true);\n              assert.deepEqual(matingPrice, highMating);\n              assert.deepEqual(duration, seconds.day1.toString());\n\n            case 11:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, undefined);\n    })));\n\n    it(\"should remove first horse from stud and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n      var studInfo, inStud, horsesInStud;\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return studService.putInStud(2, highMating, seconds.day1, {\n                from: owner\n              });\n\n            case 2:\n              _context16.next = 4;\n              return studService.removeFromStud(2, {\n                from: owner\n              });\n\n            case 4:\n              _context16.next = 6;\n              return studService.getStudInfo(2);\n\n            case 6:\n              studInfo = _context16.sent;\n              inStud = studInfo[0];\n\n\n              assert.equal(inStud, false);\n\n              _context16.next = 11;\n              return studService.getHorsesInStud();\n\n            case 11:\n              horsesInStud = _context16.sent;\n\n              assert.equal(horsesInStud.length, 0);\n\n            case 13:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, undefined);\n    })));\n\n    it(\"should add 2 horses to stud and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n      var studInfo, inStud, matingPrice, duration, horsesInStud;\n      return regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.next = 2;\n              return studService.putInStud(2, highMating, seconds.day1, {\n                from: owner\n              });\n\n            case 2:\n              _context17.next = 4;\n              return studService.putInStud(4, highMating, seconds.day3, {\n                from: owner\n              });\n\n            case 4:\n              _context17.next = 6;\n              return studService.getStudInfo(2);\n\n            case 6:\n              studInfo = _context17.sent;\n              inStud = studInfo[0];\n              matingPrice = studInfo[1].toString();\n              duration = studInfo[2].toString();\n\n\n              assert.equal(inStud, true);\n              assert.deepEqual(matingPrice, highMating);\n              assert.deepEqual(duration, seconds.day1.toString());\n\n              // Get state of id4 horse\n              _context17.next = 15;\n              return studService.getStudInfo(4);\n\n            case 15:\n              studInfo = _context17.sent;\n\n              inStud = studInfo[0];\n              matingPrice = studInfo[1].toString();\n              duration = studInfo[2].toString();\n\n              assert.equal(inStud, true);\n              assert.deepEqual(matingPrice, highMating);\n              assert.deepEqual(duration, seconds.day3.toString());\n\n              _context17.next = 24;\n              return studService.getHorsesInStud();\n\n            case 24:\n              horsesInStud = _context17.sent;\n\n              assert.equal(horsesInStud.length, 2);\n              assert.deepEqual(horsesInStud.toString(), \"2,4\");\n\n            case 27:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17, undefined);\n    })));\n\n    it(\"should remove horse from stud and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n      var studInfo, inStud, horsesInStud;\n      return regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.next = 2;\n              return studService.putInStud(4, highMating, seconds.day1, {\n                from: owner\n              });\n\n            case 2:\n              _context18.next = 4;\n              return studService.putInStud(2, highMating, seconds.day1, {\n                from: owner\n              });\n\n            case 4:\n              _context18.next = 6;\n              return studService.removeFromStud(4, {\n                from: owner\n              });\n\n            case 6:\n              _context18.next = 8;\n              return studService.getStudInfo(4);\n\n            case 8:\n              studInfo = _context18.sent;\n              inStud = studInfo[0];\n\n\n              assert.equal(inStud, false);\n\n              _context18.next = 13;\n              return studService.getHorsesInStud();\n\n            case 13:\n              horsesInStud = _context18.sent;\n\n              assert.equal(horsesInStud.length, 1);\n              assert.deepEqual(horsesInStud.toString(), \"2\");\n\n            case 16:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18, undefined);\n    })));\n\n    it(\"should revert when a different user than owner tries to put a horse in stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n      return regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.prev = 0;\n              _context19.next = 3;\n              return studService.putInStud(4, highMating, seconds.day6, {\n                from: randomAddress\n              });\n\n            case 3:\n              assert.fail(\"Expected revert not received\");\n              _context19.next = 9;\n              break;\n\n            case 6:\n              _context19.prev = 6;\n              _context19.t0 = _context19[\"catch\"](0);\n\n              assert.equal(_context19.t0.reason, \"putInStud: unauthorized\");\n\n            case 9:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19, undefined, [[0, 6]]);\n    })));\n\n    it(\"should revert if we try to put a female horse into stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n      return regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.prev = 0;\n              _context20.next = 3;\n              return studService.putInStud(1, highMating, seconds.day6, {\n                from: owner\n              });\n\n            case 3:\n              assert.fail(\"Expected revert not received\");\n              _context20.next = 9;\n              break;\n\n            case 6:\n              _context20.prev = 6;\n              _context20.t0 = _context20[\"catch\"](0);\n\n              assert.equal(_context20.t0.reason, \"putInStud: horse is not male\");\n\n            case 9:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20, undefined, [[0, 6]]);\n    })));\n\n    it(\"should use a default value if a different time is sent\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n      var studInfo, time, expected;\n      return regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.next = 2;\n              return gop.createGOP(randomAddress, \"genesis horse\", {\n                value: horseValue\n              });\n\n            case 2:\n              _context21.next = 4;\n              return studService.putInStud(6, highMating, 123456, {\n                from: randomAddress\n              });\n\n            case 4:\n              _context21.next = 6;\n              return studService.getStudInfo(6);\n\n            case 6:\n              studInfo = _context21.sent;\n              _context21.next = 9;\n              return web3.utils.toBN(studInfo[2]).toNumber();\n\n            case 9:\n              time = _context21.sent;\n\n\n              // In case we change the time for dev. 1 day on prod.\n              expected = time === 3600 ? 86400 : time;\n\n\n              assert.equal(expected, seconds.day1); // Default to three days.\n\n            case 12:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21, undefined);\n    })));\n\n    it(\"should remove last horse from the list of horses in stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n      var horses;\n      return regeneratorRuntime.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              _context22.next = 2;\n              return studService.putInStud(2, highMating, seconds.day1, {\n                from: owner\n              });\n\n            case 2:\n              _context22.next = 4;\n              return studService.putInStud(4, highMating, seconds.day1, {\n                from: owner\n              });\n\n            case 4:\n              _context22.next = 6;\n              return studService.getHorsesInStud();\n\n            case 6:\n              horses = _context22.sent;\n\n              assert.deepEqual(horses.toString(), \"2,4\");\n              assert.deepEqual(horses.length, 2);\n\n              _context22.next = 11;\n              return studService.removeFromStud(4, {\n                from: owner\n              });\n\n            case 11:\n              _context22.next = 13;\n              return studService.getHorsesInStud();\n\n            case 13:\n              horses = _context22.sent;\n\n\n              assert.deepEqual(horses.toString(), \"2\");\n              assert.deepEqual(horses.length, 1);\n\n            case 16:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22, undefined);\n    })));\n\n    it(\"should revert when minimum breed price is lower than mating price\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n      return regeneratorRuntime.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              _context23.prev = 0;\n              _context23.next = 3;\n              return studService.putInStud(4, lowMating, 1234, {\n                from: owner\n              });\n\n            case 3:\n              _context23.next = 8;\n              break;\n\n            case 5:\n              _context23.prev = 5;\n              _context23.t0 = _context23[\"catch\"](0);\n\n              assert.equal(_context23.t0.reason, \"putInStud: mating price lower than minimum breed price\");\n\n            case 8:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23, undefined, [[0, 5]]);\n    })));\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "StudServiceV4Test.js"
      ],
      "names": [
        "Core",
        "artifacts",
        "require",
        "GOPCreatorV2",
        "PrivGOP",
        "StudServiceV4",
        "HorseData",
        "BreedTypes",
        "Breeding",
        "contract",
        "core",
        "privGOP",
        "gop",
        "studService",
        "hd",
        "breedTypes",
        "breeding",
        "horseValue",
        "web3",
        "utils",
        "toWei",
        "highMating",
        "lowMating",
        "queryPrice",
        "seconds",
        "day1",
        "day3",
        "day6",
        "owner",
        "acc",
        "secondOwner",
        "randomAddress",
        "poolAddress",
        "beforeEach",
        "new",
        "initialize",
        "address",
        "from",
        "setGOPCreator",
        "setHorseDataAddr",
        "populateMatrix",
        "setBreedTypesAddress",
        "openBatch",
        "createInitialHorses",
        "createGOP",
        "value",
        "describe",
        "it",
        "getHorsesInStud",
        "horsesInStud",
        "assert",
        "equal",
        "length",
        "isStudServiceAdmin",
        "isAdmin",
        "deepEqual",
        "addStudServiceAdmin",
        "reason",
        "message",
        "renounceStudServiceAdmin",
        "newTimeframe",
        "isTimeframeExist",
        "isNewTimeframeActive",
        "addTimeFrame",
        "targetTimeframe",
        "removeTimeFrame",
        "isTargetTimeframeActive",
        "getBaseFee",
        "currentBaseFee",
        "toString",
        "setBaseFee",
        "breedType",
        "fromAscii",
        "getBreedTypeWeight",
        "newBreedTypeWeight",
        "setBreedTypeWeight",
        "bloodLine",
        "getBloodLineWeight",
        "newBloodLineWeight",
        "setBloodlineWeight",
        "adminPutInStud",
        "isHorseInStud",
        "inStud",
        "getMatingPrice",
        "matingPrice",
        "getStudTime",
        "duration",
        "removeFromStud",
        "putInStud",
        "getStudInfo",
        "studInfo",
        "fail",
        "toBN",
        "toNumber",
        "time",
        "expected",
        "horses"
      ],
      "mappings": "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",
      "file": "StudServiceV4Test.js",
      "sourceRoot": "/Users/migueldiaz/Documents/zed/cryptofield-core/test",
      "sourcesContent": [
        "const Core = artifacts.require(\"Core\")\nconst GOPCreatorV2 = artifacts.require(\"GOPCreatorV2\")\nconst PrivGOP = artifacts.require('PrivateGOPCreatorV2')\nconst StudServiceV4 = artifacts.require(\"StudServiceV4\")\nconst HorseData = artifacts.require(\"HorseData\")\nconst BreedTypes = artifacts.require(\"BreedTypes\")\nconst Breeding = artifacts.require(\"Breeding\")\n\ncontract(\"StudServiceV4\", acc => {\n  let core, privGOP, gop, studService, hd, breedTypes, breeding;\n  let horseValue = web3.utils.toWei(\"1\", \"ether\")\n  let highMating = web3.utils.toWei(\"1\", \"ether\")\n  let lowMating = web3.utils.toWei(\"0.004\", \"ether\")\n  let queryPrice = web3.utils.toWei(\"0.2\", \"ether\")\n  let seconds = {\n    day1: 86400,\n    day3: 259200,\n    day6: 518400\n  }\n  let owner = acc[1]\n  let secondOwner = acc[2]\n  let randomAddress = acc[3]\n  let poolAddress = acc[9]\n\n  beforeEach(\"Setup instances\", async() => {\n    core = await Core.new()\n    await core.initialize(owner)\n\n    privGOP = await PrivGOP.new();\n\n    gop = await GOPCreatorV2.new(owner, privGOP.address, core.address, acc[3], {\n      from: owner\n    })\n\n    hd = await HorseData.new()\n    await hd.initialize()\n\n    await core.setGOPCreator(gop.address, {\n      from: owner\n    })\n    await core.setHorseDataAddr(hd.address, {\n      from: owner\n    })\n\n    breedTypes = await BreedTypes.new()\n    await breedTypes.initialize(owner)\n\n    studService = await StudServiceV4.new(core.address, breedTypes.address, acc[2], {\n      from: owner\n    })\n\n    breeding = await Breeding.new()\n    await breeding.initialize(owner, core.address, studService.address, poolAddress,\n      breedTypes.address, breeding.address)\n\n    await breedTypes.populateMatrix({\n      from: owner\n    })\n\n    await breeding.setBreedTypesAddress(breedTypes.address, {\n      from: owner\n    })\n\n    await gop.openBatch(1, {\n      from: owner\n    })\n\n    await createInitialHorses();\n  })\n\n  const createInitialHorses = async() => {\n    await gop.createGOP(owner, \"genesis horse\", {\n      value: horseValue\n    })\n    await gop.createGOP(owner, \"1 female hash\", {\n      from: owner,\n      value: horseValue\n    })\n    await gop.createGOP(owner, \"2 male hash\", {\n      from: owner,\n      value: horseValue\n    })\n    await gop.createGOP(owner, \"3 female hash\", {\n      from: owner,\n      value: horseValue\n    })\n    await gop.createGOP(owner, \"4 male hash\", {\n      from: owner,\n      value: horseValue\n    })\n    await gop.createGOP(owner, \"5 female hash\", {\n      from: owner,\n      value: horseValue\n    })\n  }\n\n  describe(\"Initial methods\", () => {\n    it(\"should check the emptiness of init state before adding horses to stud\", async() => {\n      const horsesInStud = await studService.getHorsesInStud()\n      assert.equal(horsesInStud.length, 0)\n    })\n  })\n\n  describe(\"Ownership checks\", () => {\n    it(\"should check deployer to admin of stud service\", async() => {\n      const isAdmin = await studService.isStudServiceAdmin(owner)\n      assert.deepEqual(isAdmin, true)\n    })\n\n    it(\"should add another address as admin of stud service\", async() => {\n      await studService.addStudServiceAdmin(secondOwner, {\n        from: owner\n      })\n      const isAdmin = await studService.isStudServiceAdmin(secondOwner)\n      assert.deepEqual(isAdmin, true)\n    })\n\n    it(\"should revert to add existing admin to admin list\", async() => {\n      try {\n        await studService.addStudServiceAdmin(secondOwner, {\n          from: owner\n        })\n      } catch(err) {\n        assert.equal(err.reason, \"add: account is already added\")\n      }\n    })\n\n    it(\"should revert transaction to protected method from non-registered addresses\", async() => {\n      try {\n        await studService.addStudServiceAdmin(secondOwner, {\n          from: randomAddress\n        })\n      } catch(err) {\n        assert.equal(err.message,\n          \"Returned error: VM Exception while processing transaction: revert\")\n      }\n    })\n\n    it(\"should renounce ownership and can't call methods after that\", async() => {\n      await studService.renounceStudServiceAdmin({\n        from: owner\n      })\n\n      try {\n        await studService.addStudServiceAdmin(secondOwner, {\n          from: owner\n        })\n      } catch(err) {\n        assert.equal(err.message,\n          \"Returned error: VM Exception while processing transaction: revert\")\n      }\n    })\n  })\n\n  describe(\"Stud admin methods checks\", () => {\n    it(\"should add new timeframe and check the state\", async() => {\n      const newTimeframe = 256000\n      let isNewTimeframeActive = await studService.isTimeframeExist(newTimeframe)\n      assert.deepEqual(isNewTimeframeActive, false)\n\n      await studService.addTimeFrame(newTimeframe, {\n        from: owner\n      })\n      isNewTimeframeActive = await studService.isTimeframeExist(newTimeframe)\n      assert.deepEqual(isNewTimeframeActive, true)\n    })\n\n    it(\"should remove timeframe and check the state\", async() => {\n      const targetTimeframe = 86400\n      await studService.removeTimeFrame(targetTimeframe, {\n        from: owner\n      })\n\n      const isTargetTimeframeActive = await studService.isTimeframeExist(\n        targetTimeframe)\n      assert.deepEqual(isTargetTimeframeActive, false)\n    })\n\n    it(\"should set new base fee and check the state\", async() => {\n      let currentBaseFee = await studService.getBaseFee()\n      assert.deepEqual(currentBaseFee.toString(), web3.utils.toWei(\"0.05\", \"ether\"))\n\n      await studService.setBaseFee(web3.utils.toWei(\"0.5\", \"ether\"), {\n        from: owner\n      })\n      currentBaseFee = await studService.getBaseFee()\n      assert.deepEqual(currentBaseFee.toString(), web3.utils.toWei(\"0.5\", \"ether\"))\n    })\n\n    it(\"should set new breed type and check the state\", async() => {\n      const breedType = web3.utils.fromAscii(\"mustang\")\n      let newBreedTypeWeight = await studService.getBreedTypeWeight(breedType)\n      assert.deepEqual(newBreedTypeWeight.toString(), \"0\")\n\n      await studService.setBreedTypeWeight(breedType, 200, {\n        from: owner\n      })\n\n      newBreedTypeWeight = await studService.getBreedTypeWeight(breedType)\n      assert.deepEqual(newBreedTypeWeight.toString(), \"200\")\n    })\n\n    it(\"should set new blood line weight and check the state\", async() => {\n      const bloodLine = web3.utils.fromAscii(\"X\")\n      let newBloodLineWeight = await studService.getBloodLineWeight(bloodLine)\n      assert.deepEqual(newBloodLineWeight.toString(), \"0\")\n\n      await studService.setBloodlineWeight(bloodLine, 200, {\n        from: owner\n      })\n\n      newBloodLineWeight = await studService.getBloodLineWeight(bloodLine)\n      assert.deepEqual(newBloodLineWeight.toString(), \"200\")\n    })\n\n    it(\"should allow admin to put and remove horse on stud without value\", async() => {\n      await studService.adminPutInStud(2, highMating, seconds.day1, {\n        from: owner\n      })\n\n      let inStud = await studService.isHorseInStud(2)\n      let matingPrice = await studService.getMatingPrice(2)\n      let duration = await studService.getStudTime(2)\n\n      assert.equal(inStud, true)\n      assert.deepEqual(matingPrice.toString(), highMating)\n      assert.deepEqual(duration.toString(), seconds.day1.toString())\n\n      await studService.removeFromStud(2, {\n        from: owner\n      })\n\n      inStud = await studService.isHorseInStud(2)\n      matingPrice = await studService.getMatingPrice(2)\n      duration = await studService.getStudTime(2)\n\n      assert.equal(inStud, false)\n      assert.deepEqual(matingPrice.toString(), \"0\")\n      assert.deepEqual(duration.toString(), \"0\")\n    })\n  })\n\n  describe(\"Stud game logic checks\", () => {\n    it(\"should add first horse in stud and check the state\", async() => {\n      await studService.putInStud(2, highMating, seconds.day1, {\n        from: owner\n      })\n\n      const studInfo = await studService.getStudInfo(2)\n      const inStud = studInfo[0]\n      const matingPrice = studInfo[1].toString()\n      const duration = studInfo[2].toString()\n\n      assert.equal(inStud, true)\n      assert.deepEqual(matingPrice, highMating)\n      assert.deepEqual(duration, seconds.day1.toString())\n    })\n\n    it(\"should remove first horse from stud and check the state\", async() => {\n      await studService.putInStud(2, highMating, seconds.day1, {\n        from: owner\n      })\n\n      // Removes horse from Stud list and changes status but can't be placed into Stud while\n      // the specified time has not passed yet.\n      await studService.removeFromStud(2, {\n        from: owner\n      })\n\n      const studInfo = await studService.getStudInfo(2)\n      const inStud = studInfo[0]\n\n      assert.equal(inStud, false)\n\n      const horsesInStud = await studService.getHorsesInStud()\n      assert.equal(horsesInStud.length, 0)\n    })\n\n    it(\"should add 2 horses to stud and check the state\", async() => {\n      // Add horses to stud\n      await studService.putInStud(2, highMating, seconds.day1, {\n        from: owner\n      })\n      await studService.putInStud(4, highMating, seconds.day3, {\n        from: owner\n      })\n\n      // Get state of id2 horse\n      let studInfo = await studService.getStudInfo(2)\n      let inStud = studInfo[0]\n      let matingPrice = studInfo[1].toString()\n      let duration = studInfo[2].toString()\n\n      assert.equal(inStud, true)\n      assert.deepEqual(matingPrice, highMating)\n      assert.deepEqual(duration, seconds.day1.toString())\n\n      // Get state of id4 horse\n      studInfo = await studService.getStudInfo(4)\n      inStud = studInfo[0]\n      matingPrice = studInfo[1].toString()\n      duration = studInfo[2].toString()\n\n      assert.equal(inStud, true)\n      assert.deepEqual(matingPrice, highMating)\n      assert.deepEqual(duration, seconds.day3.toString())\n\n      const horsesInStud = await studService.getHorsesInStud()\n      assert.equal(horsesInStud.length, 2)\n      assert.deepEqual(horsesInStud.toString(), \"2,4\")\n    })\n\n    it(\"should remove horse from stud and check the state\", async() => {\n      await studService.putInStud(4, highMating, seconds.day1, {\n        from: owner\n      })\n\n      await studService.putInStud(2, highMating, seconds.day1, {\n        from: owner\n      })\n\n      // Removes horse from Stud list and changes status. It can't be placed into Stud while\n      // the specified time has not passed yet (should be tested on the next test)\n      await studService.removeFromStud(4, {\n        from: owner\n      })\n\n      const studInfo = await studService.getStudInfo(4)\n      const inStud = studInfo[0]\n\n      assert.equal(inStud, false)\n\n      const horsesInStud = await studService.getHorsesInStud()\n      assert.equal(horsesInStud.length, 1)\n      assert.deepEqual(horsesInStud.toString(), \"2\")\n    })\n\n    it(\"should revert when a different user than owner tries to put a horse in stud\", async() => {\n      try {\n        await studService.putInStud(4, highMating, seconds.day6, {\n          from: randomAddress,\n        })\n        assert.fail(\"Expected revert not received\")\n      } catch(err) {\n        assert.equal(err.reason, \"putInStud: unauthorized\")\n      }\n    })\n\n    it(\"should revert if we try to put a female horse into stud\", async() => {\n      try {\n        await studService.putInStud(1, highMating, seconds.day6, {\n          from: owner\n        })\n        assert.fail(\"Expected revert not received\")\n      } catch(err) {\n        assert.equal(err.reason, \"putInStud: horse is not male\")\n      }\n    })\n\n    it(\"should use a default value if a different time is sent\", async() => {\n      await gop.createGOP(randomAddress, \"genesis horse\", {\n        value: horseValue\n      }); // 6 (male)\n\n      // We'll use a random value for the duration since only three values are allowed at the moment.\n      await studService.putInStud(6, highMating, 123456, {\n        from: randomAddress\n      });\n\n      let studInfo = await studService.getStudInfo(6)\n      let time = await web3.utils.toBN(studInfo[2])\n        .toNumber()\n\n      // In case we change the time for dev. 1 day on prod.\n      const expected = time === 3600 ? 86400 : time\n\n      assert.equal(expected, seconds.day1) // Default to three days.\n    })\n\n    it(\"should remove last horse from the list of horses in stud\", async() => {\n      await studService.putInStud(2, highMating, seconds.day1, {\n        from: owner\n      })\n      await studService.putInStud(4, highMating, seconds.day1, {\n        from: owner\n      })\n\n      // Horse 2 is in Stud at the moment.\n      let horses = await studService.getHorsesInStud()\n      assert.deepEqual(horses.toString(), \"2,4\")\n      assert.deepEqual(horses.length, 2)\n\n      await studService.removeFromStud(4, {\n        from: owner\n      })\n      horses = await studService.getHorsesInStud()\n\n      assert.deepEqual(horses.toString(), \"2\")\n      assert.deepEqual(horses.length, 1)\n    })\n\n    it(\"should revert when minimum breed price is lower than mating price\", async() => {\n      try {\n        await studService.putInStud(4, lowMating, 1234, {\n          from: owner\n        })\n      } catch(err) {\n        assert.equal(err.reason,\n          \"putInStud: mating price lower than minimum breed price\")\n      }\n    })\n  })\n})\n"
      ]
    },
    "mtime": 1604693171678
  },
  "{\"filename\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/CoreTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "chai",
            "imported": [
              "expect"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "expect",
                "local": "expect"
              }
            ]
          },
          {
            "source": "../../utils",
            "imported": [
              "getTypedData",
              "getRsvFromSig",
              "chainId"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getTypedData",
                "local": "getTypedData"
              },
              {
                "kind": "named",
                "imported": "getRsvFromSig",
                "local": "getRsvFromSig"
              },
              {
                "kind": "named",
                "imported": "chainId",
                "local": "chainId"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/CoreTest.js",
      "filenameRelative": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/CoreTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "CoreTest.js",
      "sourceFileName": "CoreTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "CoreTest"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\ndescribe(\"Core\", function () {\n  var core = void 0,\n      horseData = void 0,\n      acc = void 0,\n      owner = void 0;\n\n  before(\"populate accs\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ethers.getSigners();\n\n          case 2:\n            acc = _context.sent;\n\n            owner = acc[0];\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  beforeEach(\"get factories\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return ethers.getContractFactory(\"HorseData\");\n\n          case 2:\n            horseData = _context2.sent;\n            _context2.next = 5;\n            return ethers.getContractFactory(\"Core\");\n\n          case 5:\n            core = _context2.sent;\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })));\n\n  beforeEach(\"setup instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return horseData.deploy();\n\n          case 2:\n            horseData = _context3.sent;\n            _context3.next = 5;\n            return horseData.deployed();\n\n          case 5:\n            _context3.next = 7;\n            return core.deploy(horseData.address);\n\n          case 7:\n            core = _context3.sent;\n            _context3.next = 10;\n            return core.deployed();\n\n          case 10:\n            _context3.next = 12;\n            return core.setDomainSeparator(\"ZED Horse\", \"1\", _utils.chainId);\n\n          case 12:\n            _context3.next = 14;\n            return core.grantRole(ethers.utils.formatBytes32String(\"core_owners\"), owner.address);\n\n          case 14:\n            _context3.next = 16;\n            return core.grantRole(ethers.utils.formatBytes32String(\"core_contracts\"), owner.address);\n\n          case 16:\n            _context3.next = 18;\n            return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"FirstName\"), ethers.utils.formatBytes32String(\"Black\"));\n\n          case 18:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  })));\n\n  describe(\"mintCustomHorse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            it(\"should mint a horse with correct attributes\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n              var tx, data;\n              return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Miguel\"), ethers.utils.formatBytes32String(\"Blue\"));\n\n                    case 2:\n                      tx = _context4.sent;\n                      _context4.next = 5;\n                      return core.getHorseData(1);\n\n                    case 5:\n                      data = _context4.sent;\n\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"0\"])).to.equal(\"M\");\n                      (0, _chai.expect)(data[\"1\"].toNumber()).to.be.above(4);\n                      (0, _chai.expect)(data[\"1\"].toNumber()).to.be.below(75);\n                      (0, _chai.expect)(data[\"3\"]).to.equal(4);\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"4\"])).to.equal(\"S\");\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"5\"])).to.equal(\"Colt\");\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"6\"])).to.equal(\"Miguel\");\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"7\"])).to.equal(\"Blue\");\n\n                      (0, _chai.expect)(tx).to.emit(core, \"Transfer\");\n                      (0, _chai.expect)(tx).to.emit(core, \"LogGOPCreated\").withArgs(owner.address, data[\"2\"].toNumber(), 1);\n\n                      _context4.t0 = _chai.expect;\n                      _context4.next = 19;\n                      return core.tokenURI(1);\n\n                    case 19:\n                      _context4.t1 = _context4.sent;\n                      (0, _context4.t0)(_context4.t1).to.equal(\"https://api.zed.run/api/v1/horses/metadata/1\");\n\n                    case 21:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4, undefined);\n            })));\n\n            it(\"should select the correct range of base value depending on the gen\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n              var baseValue;\n              return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.next = 2;\n                      return core.mintCustomHorse(owner.address, 1, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Name\"), ethers.utils.formatBytes32String(\"Black\"));\n\n                    case 2:\n                      _context5.next = 4;\n                      return core.getBaseValue(1);\n\n                    case 4:\n                      baseValue = _context5.sent;\n\n\n                      (0, _chai.expect)(baseValue.toNumber()).to.be.greaterThanOrEqual(95);\n                      (0, _chai.expect)(baseValue.toNumber()).to.be.lessThanOrEqual(99);\n\n                      _context5.next = 9;\n                      return core.mintCustomHorse(owner.address, 2, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"SecondName\"), ethers.utils.formatBytes32String(\"Black\"));\n\n                    case 9:\n                      _context5.next = 11;\n                      return core.getBaseValue(2);\n\n                    case 11:\n                      baseValue = _context5.sent;\n\n\n                      (0, _chai.expect)(baseValue.toNumber()).to.be.lessThanOrEqual(89);\n                      (0, _chai.expect)(baseValue.toNumber()).to.be.greaterThanOrEqual(80);\n\n                    case 14:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, _callee5, undefined);\n            })));\n\n            it(\"should revert if genotype is out of bounds\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n              return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                while (1) {\n                  switch (_context6.prev = _context6.next) {\n                    case 0:\n                      (0, _chai.expect)(core.mintCustomHorse(owner.address, 12, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"MyNameIs\"), ethers.utils.formatBytes32String(\"Color\"))).to.be.revertedWith(\"Core: gen out of bounds\");\n\n                    case 1:\n                    case \"end\":\n                      return _context6.stop();\n                  }\n                }\n              }, _callee6, undefined);\n            })));\n\n            it(\"should revert if name is taken\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n              return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      (0, _chai.expect)(core.mintCustomHorse(owner.address, 1, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"FirstName\"), ethers.utils.formatBytes32String(\"Color\"))).to.be.revertedWith(\"Core: name already taken\");\n\n                    case 1:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, _callee7, undefined);\n            })));\n\n          case 4:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, undefined);\n  })));\n\n  describe(\"mintOffspring\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            // The 'owner' address has the 'core_contracts' role\n            it(\"should mint an offspring with default name\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n              var horseData;\n              return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                while (1) {\n                  switch (_context9.prev = _context9.next) {\n                    case 0:\n                      _context9.next = 2;\n                      return core.mintCustomHorse(owner.address, 2, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Male Name\"), ethers.utils.formatBytes32String(\"Color\"));\n\n                    case 2:\n                      _context9.next = 4;\n                      return core.mintCustomHorse(owner.address, 2, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"Female Name\"), ethers.utils.formatBytes32String(\"Color\"));\n\n                    case 4:\n                      _context9.next = 6;\n                      return core.mintOffspring(owner.address, 1, 2, ethers.utils.formatBytes32String(\"The Color\"));\n\n                    case 6:\n                      _context9.next = 8;\n                      return core.getHorseData(3);\n\n                    case 8:\n                      horseData = _context9.sent;\n\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(horseData[\"6\"])).to.equal(\"Unnamed Foal\");\n\n                    case 10:\n                    case \"end\":\n                      return _context9.stop();\n                  }\n                }\n              }, _callee9, undefined);\n            })));\n\n            it(\"should mint an offspring with parent's bloodline\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n              var horseData;\n              return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                while (1) {\n                  switch (_context10.prev = _context10.next) {\n                    case 0:\n                      _context10.next = 2;\n                      return core.mintCustomHorse(owner.address, 2, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Male Name\"), ethers.utils.formatBytes32String(\"Color\"));\n\n                    case 2:\n                      _context10.next = 4;\n                      return core.mintCustomHorse(owner.address, 1, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"Female Name\"), ethers.utils.formatBytes32String(\"Color\"));\n\n                    case 4:\n                      _context10.next = 6;\n                      return core.mintOffspring(owner.address, 1, 2, ethers.utils.formatBytes32String(\"Some Color\"));\n\n                    case 6:\n                      _context10.next = 8;\n                      return core.getHorseData(3);\n\n                    case 8:\n                      horseData = _context10.sent;\n\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(horseData[\"4\"])).to.equal(\"N\");\n\n                    case 10:\n                    case \"end\":\n                      return _context10.stop();\n                  }\n                }\n              }, _callee10, undefined);\n            })));\n\n            it(\"should update horse type of parents\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n              var parentData, motherData;\n              return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                while (1) {\n                  switch (_context11.prev = _context11.next) {\n                    case 0:\n                      _context11.next = 2;\n                      return core.mintCustomHorse(owner.address, 2, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Male Name\"), ethers.utils.formatBytes32String(\"Color\"));\n\n                    case 2:\n                      _context11.next = 4;\n                      return core.mintCustomHorse(owner.address, 1, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"Female Name\"), ethers.utils.formatBytes32String(\"Color\"));\n\n                    case 4:\n                      _context11.next = 6;\n                      return core.mintOffspring(owner.address, 1, 2, ethers.utils.formatBytes32String(\"Color\"));\n\n                    case 6:\n                      _context11.next = 8;\n                      return core.getHorseData(1);\n\n                    case 8:\n                      parentData = _context11.sent;\n                      _context11.next = 11;\n                      return core.getHorseData(2);\n\n                    case 11:\n                      motherData = _context11.sent;\n\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(parentData[\"5\"])).to.equal(\"Stallion\");\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(motherData[\"5\"])).to.equal(\"Mare\");\n\n                    case 14:\n                    case \"end\":\n                      return _context11.stop();\n                  }\n                }\n              }, _callee11, undefined);\n            })));\n\n          case 3:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, undefined);\n  })));\n\n  describe(\"set/get\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            it(\"should return and set the URI base\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n              var uriBase;\n              return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                while (1) {\n                  switch (_context13.prev = _context13.next) {\n                    case 0:\n                      _context13.next = 2;\n                      return core.baseURI();\n\n                    case 2:\n                      uriBase = _context13.sent;\n\n                      (0, _chai.expect)(uriBase).to.equal(\"https://api.zed.run/api/v1/horses/metadata/\");\n\n                      _context13.next = 6;\n                      return core.setBaseURI(\"MyURIBase\");\n\n                    case 6:\n                      _context13.next = 8;\n                      return core.baseURI();\n\n                    case 8:\n                      uriBase = _context13.sent;\n\n                      (0, _chai.expect)(uriBase).to.equal(\"MyURIBase\");\n\n                    case 10:\n                    case \"end\":\n                      return _context13.stop();\n                  }\n                }\n              }, _callee13, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, undefined);\n  })));\n\n  describe(\"view\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n    return regeneratorRuntime.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            it(\"should return whether or not a token exists\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n              return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                while (1) {\n                  switch (_context15.prev = _context15.next) {\n                    case 0:\n                      _context15.t0 = _chai.expect;\n                      _context15.next = 3;\n                      return core.tokenExists(0);\n\n                    case 3:\n                      _context15.t1 = _context15.sent;\n                      (0, _context15.t0)(_context15.t1).to.be.true;\n                      _context15.t2 = _chai.expect;\n                      _context15.next = 8;\n                      return core.tokenExists(1);\n\n                    case 8:\n                      _context15.t3 = _context15.sent;\n                      (0, _context15.t2)(_context15.t3).to.be.false;\n                      _context15.next = 12;\n                      return core.mintCustomHorse(owner.address, 1, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"Name\"), ethers.utils.formatBytes32String(\"Black\"));\n\n                    case 12:\n                      _context15.t4 = _chai.expect;\n                      _context15.next = 15;\n                      return core.tokenExists(1);\n\n                    case 15:\n                      _context15.t5 = _context15.sent;\n                      (0, _context15.t4)(_context15.t5).to.be.true;\n\n                    case 17:\n                    case \"end\":\n                      return _context15.stop();\n                  }\n                }\n              }, _callee15, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16, undefined);\n  })));\n\n  describe(\"protected functions\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27() {\n    return regeneratorRuntime.wrap(function _callee27$(_context27) {\n      while (1) {\n        switch (_context27.prev = _context27.next) {\n          case 0:\n            it(\"should allow admin to transfer tokens\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n              var tx;\n              return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                while (1) {\n                  switch (_context17.prev = _context17.next) {\n                    case 0:\n                      _context17.t0 = _chai.expect;\n                      _context17.next = 3;\n                      return core.ownerOf(0);\n\n                    case 3:\n                      _context17.t1 = _context17.sent;\n                      _context17.t2 = owner.address;\n                      (0, _context17.t0)(_context17.t1).to.equal(_context17.t2);\n                      _context17.next = 8;\n                      return core.adminTransferToken(0, acc[1].address);\n\n                    case 8:\n                      tx = _context17.sent;\n                      _context17.t3 = _chai.expect;\n                      _context17.next = 12;\n                      return core.ownerOf(0);\n\n                    case 12:\n                      _context17.t4 = _context17.sent;\n                      _context17.t5 = acc[1].address;\n                      (0, _context17.t3)(_context17.t4).to.equal(_context17.t5);\n\n                      (0, _chai.expect)(tx).to.emit(core, \"Transfer\");\n\n                    case 16:\n                    case \"end\":\n                      return _context17.stop();\n                  }\n                }\n              }, _callee17, undefined);\n            })));\n\n            it(\"should fail if non admin calls tries to transfer\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n              return regeneratorRuntime.wrap(function _callee18$(_context18) {\n                while (1) {\n                  switch (_context18.prev = _context18.next) {\n                    case 0:\n                      (0, _chai.expect)(core.connect(acc[3]).adminTransferToken(0, acc[1].address)).to.be.revertedWith(\"Core: unauthorized\");\n\n                    case 1:\n                    case \"end\":\n                      return _context18.stop();\n                  }\n                }\n              }, _callee18, undefined);\n            })));\n\n            describe(\"pausing contract\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n              return regeneratorRuntime.wrap(function _callee21$(_context21) {\n                while (1) {\n                  switch (_context21.prev = _context21.next) {\n                    case 0:\n                      it(\"cannot create horses if contract is paused\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n                        return regeneratorRuntime.wrap(function _callee19$(_context19) {\n                          while (1) {\n                            switch (_context19.prev = _context19.next) {\n                              case 0:\n                                _context19.next = 2;\n                                return core.pause();\n\n                              case 2:\n\n                                (0, _chai.expect)(core.mintCustomHorse(owner.address, 1, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"Migz\"), ethers.utils.formatBytes32String(\"Negro\"))).to.be.revertedWith(\"Pausable: paused\");\n\n                              case 3:\n                              case \"end\":\n                                return _context19.stop();\n                            }\n                          }\n                        }, _callee19, undefined);\n                      })));\n\n                      it(\"cannot transfer tokens when contract is paused\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n                        return regeneratorRuntime.wrap(function _callee20$(_context20) {\n                          while (1) {\n                            switch (_context20.prev = _context20.next) {\n                              case 0:\n                                _context20.next = 2;\n                                return core.pause();\n\n                              case 2:\n\n                                (0, _chai.expect)(core.transferFrom(owner.address, acc[1].address, 0)).to.be.revertedWith(\"ERC721Pausable: token transfer while paused\");\n\n                              case 3:\n                              case \"end\":\n                                return _context20.stop();\n                            }\n                          }\n                        }, _callee20, undefined);\n                      })));\n\n                    case 2:\n                    case \"end\":\n                      return _context21.stop();\n                  }\n                }\n              }, _callee21, undefined);\n            })));\n\n            describe(\"roles\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {\n              return regeneratorRuntime.wrap(function _callee26$(_context26) {\n                while (1) {\n                  switch (_context26.prev = _context26.next) {\n                    case 0:\n                      it(\"should allow admins to grant admin roles\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n                        return regeneratorRuntime.wrap(function _callee22$(_context22) {\n                          while (1) {\n                            switch (_context22.prev = _context22.next) {\n                              case 0:\n                                _context22.next = 2;\n                                return core.grantRoleAdmin(ethers.utils.formatBytes32String(\"core_owners_admin\"), acc[1].address);\n\n                              case 2:\n                                _context22.t0 = _chai.expect;\n                                _context22.next = 5;\n                                return core.hasRole(ethers.utils.formatBytes32String(\"core_owners_admin\"), acc[1].address);\n\n                              case 5:\n                                _context22.t1 = _context22.sent;\n                                (0, _context22.t0)(_context22.t1).to.be.true;\n\n                              case 7:\n                              case \"end\":\n                                return _context22.stop();\n                            }\n                          }\n                        }, _callee22, undefined);\n                      })));\n\n                      it(\"should revert if non-admin wants to grant admin role\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n                        return regeneratorRuntime.wrap(function _callee23$(_context23) {\n                          while (1) {\n                            switch (_context23.prev = _context23.next) {\n                              case 0:\n                                (0, _chai.expect)(core.connect(acc[2]).grantRoleAdmin(ethers.utils.formatBytes32String(\"core_owners_admin\"), acc[1].address)).to.be.revertedWith(\"Core: unauthorized\");\n\n                              case 1:\n                              case \"end\":\n                                return _context23.stop();\n                            }\n                          }\n                        }, _callee23, undefined);\n                      })));\n\n                      it(\"should allow owners admins to grant another type of admin role\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {\n                        return regeneratorRuntime.wrap(function _callee24$(_context24) {\n                          while (1) {\n                            switch (_context24.prev = _context24.next) {\n                              case 0:\n                                _context24.next = 2;\n                                return core.grantRoleAdmin(ethers.utils.formatBytes32String(\"core_contracts_admin\"), acc[1].address);\n\n                              case 2:\n                                _context24.t0 = _chai.expect;\n                                _context24.next = 5;\n                                return core.hasRole(ethers.utils.formatBytes32String(\"core_contracts_admin\"), acc[1].address);\n\n                              case 5:\n                                _context24.t1 = _context24.sent;\n                                (0, _context24.t0)(_context24.t1).to.be.true;\n\n                              case 7:\n                              case \"end\":\n                                return _context24.stop();\n                            }\n                          }\n                        }, _callee24, undefined);\n                      })));\n\n                      it(\"should revert caller does not have core_owners_admin role when grantin role without verification\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {\n                        return regeneratorRuntime.wrap(function _callee25$(_context25) {\n                          while (1) {\n                            switch (_context25.prev = _context25.next) {\n                              case 0:\n                                _context25.next = 2;\n                                return core.grantRoleAdmin(ethers.utils.formatBytes32String(\"core_contracts_admin\"), acc[1].address);\n\n                              case 2:\n\n                                (0, _chai.expect)(core.connect(acc[1]).grantRoleAdmin(ethers.utils.formatBytes32String(\"core_owners_admin\"), acc[4].address)).to.be.revertedWith(\"Core: unauthorized\");\n\n                              case 3:\n                              case \"end\":\n                                return _context25.stop();\n                            }\n                          }\n                        }, _callee25, undefined);\n                      })));\n\n                    case 4:\n                    case \"end\":\n                      return _context26.stop();\n                  }\n                }\n              }, _callee26, undefined);\n            })));\n\n          case 4:\n          case \"end\":\n            return _context27.stop();\n        }\n      }\n    }, _callee27, undefined);\n  })));\n\n  describe(\"mint token with horse data\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee29() {\n    return regeneratorRuntime.wrap(function _callee29$(_context29) {\n      while (1) {\n        switch (_context29.prev = _context29.next) {\n          case 0:\n            it(\"should mint a token with the specified horse data\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28() {\n              var tokenId, sex, baseValue, timestamp, genotype, bloodline, hType, name, color, tx, data;\n              return regeneratorRuntime.wrap(function _callee28$(_context28) {\n                while (1) {\n                  switch (_context28.prev = _context28.next) {\n                    case 0:\n                      tokenId = 5;\n                      sex = \"M\";\n                      baseValue = 4;\n                      timestamp = Date.now();\n                      genotype = 4;\n                      bloodline = \"S\";\n                      hType = \"Colt\";\n                      name = \"Trung\";\n                      color = \"White\";\n                      _context28.next = 11;\n                      return core.mintTokenWithHorseData(owner.address, tokenId, ethers.utils.formatBytes32String(sex), baseValue, timestamp, genotype, ethers.utils.formatBytes32String(bloodline), ethers.utils.formatBytes32String(hType), ethers.utils.formatBytes32String(name), ethers.utils.formatBytes32String(color));\n\n                    case 11:\n                      tx = _context28.sent;\n                      _context28.next = 14;\n                      return core.getHorseData(tokenId);\n\n                    case 14:\n                      data = _context28.sent;\n\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"0\"])).to.equal(sex);\n                      (0, _chai.expect)(data[\"1\"].toNumber()).to.equal(baseValue);\n                      (0, _chai.expect)(data[\"2\"].toNumber()).to.equal(timestamp);\n                      (0, _chai.expect)(data[\"3\"].toNumber()).to.equal(genotype);\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"4\"])).to.equal(bloodline);\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"5\"])).to.equal(hType);\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"6\"])).to.equal(name);\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"7\"])).to.equal(color);\n\n                      (0, _chai.expect)(tx).to.emit(core, \"Transfer\");\n                      (0, _chai.expect)(tx).to.emit(core, \"LogMintTokenWithHorseData\");\n\n                      _context28.t0 = _chai.expect;\n                      _context28.next = 28;\n                      return core.ownerOf(tokenId);\n\n                    case 28:\n                      _context28.t1 = _context28.sent;\n                      _context28.t2 = owner.address;\n                      (0, _context28.t0)(_context28.t1).to.equal(_context28.t2);\n\n                    case 31:\n                    case \"end\":\n                      return _context28.stop();\n                  }\n                }\n              }, _callee28, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context29.stop();\n        }\n      }\n    }, _callee29, undefined);\n  })));\n\n  describe(\"batch mint token with horse data\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee32() {\n    return regeneratorRuntime.wrap(function _callee32$(_context32) {\n      while (1) {\n        switch (_context32.prev = _context32.next) {\n          case 0:\n            it(\"should mint multiple tokens with the specified horse data list\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee30() {\n              var tokenId, sex, baseValue, timestamp, genotype, bloodline, hType, hType2, name, name2, color, color2, tx, data, newName, newName2;\n              return regeneratorRuntime.wrap(function _callee30$(_context30) {\n                while (1) {\n                  switch (_context30.prev = _context30.next) {\n                    case 0:\n                      tokenId = 5;\n                      sex = \"M\";\n                      baseValue = 4;\n                      timestamp = Date.now();\n                      genotype = 4;\n                      bloodline = \"S\";\n                      hType = \"Colt\";\n                      hType2 = \"Filly\";\n                      name = \"Trung\";\n                      name2 = \"Mila\";\n                      color = \"White\";\n                      color2 = \"Blue\";\n                      _context30.next = 14;\n                      return core.mintTokenWithHorseDataBatch([owner.address, acc[1].address], [tokenId, tokenId + 1], [ethers.utils.formatBytes32String(sex), ethers.utils.formatBytes32String(sex)], [baseValue, baseValue + 1], [timestamp, timestamp + 1000], [genotype, genotype + 1], [ethers.utils.formatBytes32String(bloodline), ethers.utils.formatBytes32String(bloodline)], [ethers.utils.formatBytes32String(hType), ethers.utils.formatBytes32String(hType2)], [ethers.utils.formatBytes32String(name), ethers.utils.formatBytes32String(name2)], [ethers.utils.formatBytes32String(color), ethers.utils.formatBytes32String(color2)]);\n\n                    case 14:\n                      tx = _context30.sent;\n                      _context30.next = 17;\n                      return core.getHorseData(tokenId);\n\n                    case 17:\n                      data = _context30.sent;\n\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"0\"])).to.equal(sex);\n                      (0, _chai.expect)(data[\"1\"].toNumber()).to.equal(baseValue);\n                      (0, _chai.expect)(data[\"2\"].toNumber()).to.equal(timestamp);\n                      (0, _chai.expect)(data[\"3\"].toNumber()).to.equal(genotype);\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"4\"])).to.equal(bloodline);\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"5\"])).to.equal(hType);\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"6\"])).to.equal(name);\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"7\"])).to.equal(color);\n\n                      _context30.next = 28;\n                      return core.getHorseData(tokenId + 1);\n\n                    case 28:\n                      data = _context30.sent;\n\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"0\"])).to.equal(sex);\n                      (0, _chai.expect)(data[\"1\"].toNumber()).to.equal(baseValue + 1);\n                      (0, _chai.expect)(data[\"2\"].toNumber()).to.equal(timestamp + 1000);\n                      (0, _chai.expect)(data[\"3\"].toNumber()).to.equal(genotype + 1);\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"4\"])).to.equal(bloodline);\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"5\"])).to.equal(hType2);\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"6\"])).to.equal(name2);\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"7\"])).to.equal(color2);\n\n                      (0, _chai.expect)(tx).to.emit(core, \"Transfer\");\n                      (0, _chai.expect)(tx).to.emit(core, \"LogMintTokenWithHorseDataBatch\");\n\n                      _context30.t0 = _chai.expect;\n                      _context30.next = 42;\n                      return core.ownerOf(tokenId + 1);\n\n                    case 42:\n                      _context30.t1 = _context30.sent;\n                      _context30.t2 = acc[1].address;\n                      (0, _context30.t0)(_context30.t1).to.equal(_context30.t2);\n\n\n                      // Change horse name\n                      newName = \"Trung New\";\n                      newName2 = \"Trung New 2\";\n                      _context30.next = 49;\n                      return core.setHorseNameBatch([tokenId, tokenId + 1], [ethers.utils.formatBytes32String(newName), ethers.utils.formatBytes32String(newName2)]);\n\n                    case 49:\n                      tx = _context30.sent;\n                      _context30.next = 52;\n                      return core.getHorseData(tokenId);\n\n                    case 52:\n                      data = _context30.sent;\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"6\"])).to.equal(newName);\n                      _context30.next = 56;\n                      return core.getHorseData(tokenId + 1);\n\n                    case 56:\n                      data = _context30.sent;\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"6\"])).to.equal(newName2);\n\n                      (0, _chai.expect)(tx).to.emit(core, \"LogSetHorseNameBatch\");\n\n                      // Test name uniqueness\n                      (0, _chai.expect)(core.setHorseNameBatch([tokenId, tokenId + 1], [ethers.utils.formatBytes32String(newName), ethers.utils.formatBytes32String(newName2)])).to.be.revertedWith(\"Core: name already taken\");\n\n                    case 60:\n                    case \"end\":\n                      return _context30.stop();\n                  }\n                }\n              }, _callee30, undefined);\n            })));\n\n            it(\"should not mint anything with empty data list\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee31() {\n              var tokenId, tx;\n              return regeneratorRuntime.wrap(function _callee31$(_context31) {\n                while (1) {\n                  switch (_context31.prev = _context31.next) {\n                    case 0:\n                      tokenId = 5;\n                      _context31.next = 3;\n                      return core.mintTokenWithHorseDataBatch([], [], [], [], [], [], [], [], [], []);\n\n                    case 3:\n                      tx = _context31.sent;\n\n\n                      (0, _chai.expect)(tx).to.emit(core, \"LogMintTokenWithHorseDataBatch\");\n\n                      _context31.t0 = _chai.expect;\n                      _context31.next = 8;\n                      return core.tokenExists(tokenId);\n\n                    case 8:\n                      _context31.t1 = _context31.sent;\n                      (0, _context31.t0)(_context31.t1).to.be.false;\n\n                    case 10:\n                    case \"end\":\n                      return _context31.stop();\n                  }\n                }\n              }, _callee31, undefined);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context32.stop();\n        }\n      }\n    }, _callee32, undefined);\n  })));\n\n  describe(\"burning\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee36() {\n    return regeneratorRuntime.wrap(function _callee36$(_context36) {\n      while (1) {\n        switch (_context36.prev = _context36.next) {\n          case 0:\n            it(\"burns a token and does not affect the next token ID\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee33() {\n              var horseData;\n              return regeneratorRuntime.wrap(function _callee33$(_context33) {\n                while (1) {\n                  switch (_context33.prev = _context33.next) {\n                    case 0:\n                      _context33.next = 2;\n                      return core.mintCustomHorse(owner.address, 1, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"VHS\"), ethers.utils.formatBytes32String(\"Negro\"));\n\n                    case 2:\n                      _context33.next = 4;\n                      return core.getHorseData(1);\n\n                    case 4:\n                      horseData = _context33.sent;\n\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(horseData[\"7\"])).to.equal(\"Negro\");\n\n                      _context33.t0 = _chai.expect;\n                      _context33.next = 9;\n                      return core.tokenExists(1);\n\n                    case 9:\n                      _context33.t1 = _context33.sent;\n                      (0, _context33.t0)(_context33.t1).to.be.true;\n                      _context33.t2 = _chai.expect;\n                      _context33.next = 14;\n                      return core.nextTokenId();\n\n                    case 14:\n                      _context33.t3 = _context33.sent.toNumber();\n                      (0, _context33.t2)(_context33.t3).to.equal(2);\n                      _context33.next = 18;\n                      return core.burn(1);\n\n                    case 18:\n                      _context33.next = 20;\n                      return core.getHorseData(1);\n\n                    case 20:\n                      horseData = _context33.sent;\n                      _context33.t4 = _chai.expect;\n                      _context33.next = 24;\n                      return core.nextTokenId();\n\n                    case 24:\n                      _context33.t5 = _context33.sent.toNumber();\n                      (0, _context33.t4)(_context33.t5).to.equal(2);\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(horseData[\"7\"])).to.not.equal(\"Negro\");\n\n                      // The total supply is affected, not the next token ID\n                      _context33.t6 = _chai.expect;\n                      _context33.next = 30;\n                      return core.totalSupply();\n\n                    case 30:\n                      _context33.t7 = _context33.sent.toNumber();\n                      (0, _context33.t6)(_context33.t7).to.equal(1);\n\n                    case 32:\n                    case \"end\":\n                      return _context33.stop();\n                  }\n                }\n              }, _callee33, undefined);\n            })));\n\n            it(\"reverts if sender is not owner of token\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee34() {\n              return regeneratorRuntime.wrap(function _callee34$(_context34) {\n                while (1) {\n                  switch (_context34.prev = _context34.next) {\n                    case 0:\n                      (0, _chai.expect)(core.connect(acc[1]).burn(0)).to.be.revertedWith(\"Core: not owner of token\");\n\n                    case 1:\n                    case \"end\":\n                      return _context34.stop();\n                  }\n                }\n              }, _callee34, undefined);\n            })));\n\n            it(\"reverts if token does not exist\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee35() {\n              return regeneratorRuntime.wrap(function _callee35$(_context35) {\n                while (1) {\n                  switch (_context35.prev = _context35.next) {\n                    case 0:\n                      (0, _chai.expect)(core.burn(1)).to.be.revertedWith(\"Core: token does not exist\");\n\n                    case 1:\n                    case \"end\":\n                      return _context35.stop();\n                  }\n                }\n              }, _callee35, undefined);\n            })));\n\n          case 3:\n          case \"end\":\n            return _context36.stop();\n        }\n      }\n    }, _callee36, undefined);\n  })));\n\n  describe(\"setting name\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee39() {\n    return regeneratorRuntime.wrap(function _callee39$(_context39) {\n      while (1) {\n        switch (_context39.prev = _context39.next) {\n          case 0:\n            it(\"sets the name of the horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee37() {\n              var horseData;\n              return regeneratorRuntime.wrap(function _callee37$(_context37) {\n                while (1) {\n                  switch (_context37.prev = _context37.next) {\n                    case 0:\n                      _context37.next = 2;\n                      return core.mintCustomHorse(owner.address, 1, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"VHS\"), ethers.utils.formatBytes32String(\"Black\"));\n\n                    case 2:\n                      _context37.next = 4;\n                      return core.setHorseName(1, ethers.utils.formatBytes32String(\"New Name\"));\n\n                    case 4:\n                      _context37.next = 6;\n                      return core.getHorseData(1);\n\n                    case 6:\n                      horseData = _context37.sent;\n\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(horseData[\"6\"])).to.equal(\"New Name\");\n\n                    case 8:\n                    case \"end\":\n                      return _context37.stop();\n                  }\n                }\n              }, _callee37, undefined);\n            })));\n\n            it(\"reverts if name is already taken\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee38() {\n              return regeneratorRuntime.wrap(function _callee38$(_context38) {\n                while (1) {\n                  switch (_context38.prev = _context38.next) {\n                    case 0:\n                      // Token 0 from setup's name is FirstName\n                      (0, _chai.expect)(core.setHorseName(0, ethers.utils.formatBytes32String(\"FirstName\"))).to.be.revertedWith(\"Core: name already taken\");\n\n                    case 1:\n                    case \"end\":\n                      return _context38.stop();\n                  }\n                }\n              }, _callee38, undefined);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context39.stop();\n        }\n      }\n    }, _callee39, undefined);\n  })));\n\n  describe(\"meta-transactions\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee44() {\n    return regeneratorRuntime.wrap(function _callee44$(_context44) {\n      while (1) {\n        switch (_context44.prev = _context44.next) {\n          case 0:\n            it(\"should create a horse through a meta-tx\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee40() {\n              var functionSignature, typedData, signedData, _ref42, r, s, v, data;\n\n              return regeneratorRuntime.wrap(function _callee40$(_context40) {\n                while (1) {\n                  switch (_context40.prev = _context40.next) {\n                    case 0:\n                      functionSignature = core.interface.encodeFunctionData(\"mintCustomHorse\", [owner.address, 3, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"SecondName\"), ethers.utils.formatBytes32String(\"Negro\")]);\n                      _context40.t0 = _utils.getTypedData;\n                      _context40.t1 = _utils.chainId;\n                      _context40.t2 = core.address;\n                      _context40.next = 6;\n                      return core.getNonce(owner.address);\n\n                    case 6:\n                      _context40.t3 = _context40.sent;\n                      _context40.t4 = owner.address;\n                      _context40.t5 = functionSignature;\n                      _context40.t6 = {\n                        name: \"ZED Horse\",\n                        version: \"1\",\n                        chainId: _context40.t1,\n                        verifyingContract: _context40.t2,\n                        nonce: _context40.t3,\n                        from: _context40.t4,\n                        functionSignature: _context40.t5\n                      };\n                      _context40.next = 12;\n                      return (0, _context40.t0)(_context40.t6);\n\n                    case 12:\n                      typedData = _context40.sent;\n                      _context40.next = 15;\n                      return owner._signTypedData(typedData.domain, typedData.types, typedData.message);\n\n                    case 15:\n                      signedData = _context40.sent;\n                      _context40.next = 18;\n                      return (0, _utils.getRsvFromSig)(signedData);\n\n                    case 18:\n                      _ref42 = _context40.sent;\n                      r = _ref42.r;\n                      s = _ref42.s;\n                      v = _ref42.v;\n                      _context40.next = 24;\n                      return core.executeMetaTransaction(owner.address, functionSignature, r, s, v);\n\n                    case 24:\n                      _context40.next = 26;\n                      return core.getHorseData(1);\n\n                    case 26:\n                      data = _context40.sent;\n\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"0\"])).to.equal(\"M\");\n                      (0, _chai.expect)(data[\"1\"].toNumber()).to.be.above(4);\n                      (0, _chai.expect)(data[\"1\"].toNumber()).to.be.below(80);\n                      (0, _chai.expect)(data[\"3\"].toNumber()).to.equal(3);\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"4\"])).to.equal(\"S\");\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"5\"])).to.equal(\"Colt\");\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"6\"])).to.equal(\"SecondName\");\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[\"7\"])).to.equal(\"Negro\");\n\n                    case 35:\n                    case \"end\":\n                      return _context40.stop();\n                  }\n                }\n              }, _callee40, undefined);\n            })));\n\n            it(\"should transfer a horse through a meta-tx\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee41() {\n              var functionSignature, typedData, signedData, _ref44, r, s, v;\n\n              return regeneratorRuntime.wrap(function _callee41$(_context41) {\n                while (1) {\n                  switch (_context41.prev = _context41.next) {\n                    case 0:\n                      // Since ID 0 is created already we're going to use that one\n                      functionSignature = core.interface.encodeFunctionData(\"transferFrom\", [owner.address, acc[1].address, 0]);\n                      _context41.t0 = _utils.getTypedData;\n                      _context41.t1 = _utils.chainId;\n                      _context41.t2 = core.address;\n                      _context41.next = 6;\n                      return core.getNonce(owner.address);\n\n                    case 6:\n                      _context41.t3 = _context41.sent;\n                      _context41.t4 = owner.address;\n                      _context41.t5 = functionSignature;\n                      _context41.t6 = {\n                        name: \"ZED Horse\",\n                        version: \"1\",\n                        chainId: _context41.t1,\n                        verifyingContract: _context41.t2,\n                        nonce: _context41.t3,\n                        from: _context41.t4,\n                        functionSignature: _context41.t5\n                      };\n                      _context41.next = 12;\n                      return (0, _context41.t0)(_context41.t6);\n\n                    case 12:\n                      typedData = _context41.sent;\n                      _context41.next = 15;\n                      return owner._signTypedData(typedData.domain, typedData.types, typedData.message);\n\n                    case 15:\n                      signedData = _context41.sent;\n                      _context41.next = 18;\n                      return (0, _utils.getRsvFromSig)(signedData);\n\n                    case 18:\n                      _ref44 = _context41.sent;\n                      r = _ref44.r;\n                      s = _ref44.s;\n                      v = _ref44.v;\n                      _context41.next = 24;\n                      return core.executeMetaTransaction(owner.address, functionSignature, r, s, v);\n\n                    case 24:\n                      _context41.t7 = _chai.expect;\n                      _context41.next = 27;\n                      return core.ownerOf(0);\n\n                    case 27:\n                      _context41.t8 = _context41.sent;\n                      _context41.t9 = acc[1].address;\n                      (0, _context41.t7)(_context41.t8).to.equal(_context41.t9);\n\n                    case 30:\n                    case \"end\":\n                      return _context41.stop();\n                  }\n                }\n              }, _callee41, undefined);\n            })));\n\n            it(\"should revert if user has no rights for token transfer\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee42() {\n              var functionSignature, typedData, signedData, _ref46, r, s, v;\n\n              return regeneratorRuntime.wrap(function _callee42$(_context42) {\n                while (1) {\n                  switch (_context42.prev = _context42.next) {\n                    case 0:\n                      functionSignature = core.interface.encodeFunctionData(\"transferFrom\", [owner.address, acc[1].address, 0]);\n                      _context42.t0 = _utils.getTypedData;\n                      _context42.t1 = _utils.chainId;\n                      _context42.t2 = core.address;\n                      _context42.next = 6;\n                      return core.getNonce(acc[1].address);\n\n                    case 6:\n                      _context42.t3 = _context42.sent;\n                      _context42.t4 = acc[1].address;\n                      _context42.t5 = functionSignature;\n                      _context42.t6 = {\n                        name: \"ZED Horse\",\n                        version: \"1\",\n                        chainId: _context42.t1,\n                        verifyingContract: _context42.t2,\n                        nonce: _context42.t3,\n                        from: _context42.t4,\n                        functionSignature: _context42.t5\n                      };\n                      _context42.next = 12;\n                      return (0, _context42.t0)(_context42.t6);\n\n                    case 12:\n                      typedData = _context42.sent;\n                      _context42.next = 15;\n                      return acc[1]._signTypedData(typedData.domain, typedData.types, typedData.message);\n\n                    case 15:\n                      signedData = _context42.sent;\n                      _context42.next = 18;\n                      return (0, _utils.getRsvFromSig)(signedData);\n\n                    case 18:\n                      _ref46 = _context42.sent;\n                      r = _ref46.r;\n                      s = _ref46.s;\n                      v = _ref46.v;\n\n\n                      (0, _chai.expect)(core.executeMetaTransaction(acc[1].address, functionSignature, r, s, v)).to.be.revertedWith(\"ERC721: transfer caller is not owner nor approved\");\n\n                    case 23:\n                    case \"end\":\n                      return _context42.stop();\n                  }\n                }\n              }, _callee42, undefined);\n            })));\n\n            it(\"should burn a token for an user\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee43() {\n              var functionSignature, typedData, signedData, _ref48, r, s, v;\n\n              return regeneratorRuntime.wrap(function _callee43$(_context43) {\n                while (1) {\n                  switch (_context43.prev = _context43.next) {\n                    case 0:\n                      _context43.next = 2;\n                      return core.mintCustomHorse(acc[4].address, 1, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"FemHorse\"), ethers.utils.formatBytes32String(\"Pink\"));\n\n                    case 2:\n                      _context43.t0 = _chai.expect;\n                      _context43.next = 5;\n                      return core.tokenExists(1);\n\n                    case 5:\n                      _context43.t1 = _context43.sent;\n                      (0, _context43.t0)(_context43.t1).to.be.true;\n                      functionSignature = core.interface.encodeFunctionData(\"burn\", [1]);\n                      _context43.t2 = _utils.getTypedData;\n                      _context43.t3 = _utils.chainId;\n                      _context43.t4 = core.address;\n                      _context43.next = 13;\n                      return core.getNonce(acc[4].address);\n\n                    case 13:\n                      _context43.t5 = _context43.sent;\n                      _context43.t6 = acc[4].address;\n                      _context43.t7 = functionSignature;\n                      _context43.t8 = {\n                        name: \"ZED Horse\",\n                        version: \"1\",\n                        chainId: _context43.t3,\n                        verifyingContract: _context43.t4,\n                        nonce: _context43.t5,\n                        from: _context43.t6,\n                        functionSignature: _context43.t7\n                      };\n                      _context43.next = 19;\n                      return (0, _context43.t2)(_context43.t8);\n\n                    case 19:\n                      typedData = _context43.sent;\n                      _context43.next = 22;\n                      return acc[4]._signTypedData(typedData.domain, typedData.types, typedData.message);\n\n                    case 22:\n                      signedData = _context43.sent;\n                      _context43.next = 25;\n                      return (0, _utils.getRsvFromSig)(signedData);\n\n                    case 25:\n                      _ref48 = _context43.sent;\n                      r = _ref48.r;\n                      s = _ref48.s;\n                      v = _ref48.v;\n                      _context43.next = 31;\n                      return core.executeMetaTransaction(acc[4].address, functionSignature, r, s, v);\n\n                    case 31:\n                      _context43.t9 = _chai.expect;\n                      _context43.next = 34;\n                      return core.tokenExists(1);\n\n                    case 34:\n                      _context43.t10 = _context43.sent;\n                      (0, _context43.t9)(_context43.t10).to.be.false;\n                      _context43.t11 = _chai.expect;\n                      _context43.next = 39;\n                      return core.nextTokenId();\n\n                    case 39:\n                      _context43.t12 = _context43.sent;\n                      (0, _context43.t11)(_context43.t12).to.equal(2);\n\n                    case 41:\n                    case \"end\":\n                      return _context43.stop();\n                  }\n                }\n              }, _callee43, undefined);\n            })));\n\n          case 4:\n          case \"end\":\n            return _context44.stop();\n        }\n      }\n    }, _callee44, undefined);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "CoreTest.js"
      ],
      "names": [
        "describe",
        "core",
        "horseData",
        "acc",
        "owner",
        "before",
        "ethers",
        "getSigners",
        "beforeEach",
        "getContractFactory",
        "deploy",
        "deployed",
        "address",
        "setDomainSeparator",
        "chainId",
        "grantRole",
        "utils",
        "formatBytes32String",
        "mintCustomHorse",
        "it",
        "tx",
        "getHorseData",
        "data",
        "parseBytes32String",
        "to",
        "equal",
        "toNumber",
        "be",
        "above",
        "below",
        "emit",
        "withArgs",
        "expect",
        "tokenURI",
        "getBaseValue",
        "baseValue",
        "greaterThanOrEqual",
        "lessThanOrEqual",
        "revertedWith",
        "mintOffspring",
        "parentData",
        "motherData",
        "baseURI",
        "uriBase",
        "setBaseURI",
        "tokenExists",
        "true",
        "false",
        "ownerOf",
        "adminTransferToken",
        "connect",
        "pause",
        "transferFrom",
        "grantRoleAdmin",
        "hasRole",
        "tokenId",
        "sex",
        "timestamp",
        "Date",
        "now",
        "genotype",
        "bloodline",
        "hType",
        "name",
        "color",
        "mintTokenWithHorseData",
        "hType2",
        "name2",
        "color2",
        "mintTokenWithHorseDataBatch",
        "newName",
        "newName2",
        "setHorseNameBatch",
        "nextTokenId",
        "burn",
        "not",
        "totalSupply",
        "setHorseName",
        "functionSignature",
        "interface",
        "encodeFunctionData",
        "getTypedData",
        "getNonce",
        "version",
        "verifyingContract",
        "nonce",
        "from",
        "typedData",
        "_signTypedData",
        "domain",
        "types",
        "message",
        "signedData",
        "r",
        "s",
        "v",
        "executeMetaTransaction"
      ],
      "mappings": "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",
      "file": "CoreTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "sourcesContent": [
        "import { expect } from \"chai\";\nimport { getTypedData, getRsvFromSig, chainId } from \"../../utils\";\n\ndescribe(\"Core\", () => {\n  let core, horseData, acc, owner;\n\n  before(\"populate accs\", async () => {\n    acc = await ethers.getSigners();\n    owner = acc[0];\n  });\n\n  beforeEach(\"get factories\", async () => {\n    horseData = await ethers.getContractFactory(\"HorseData\");\n    core = await ethers.getContractFactory(\"Core\");\n  });\n\n  beforeEach(\"setup instances\", async () => {\n    horseData = await horseData.deploy();\n    await horseData.deployed();\n\n    core = await core.deploy(horseData.address);\n    await core.deployed();\n\n    await core.setDomainSeparator(\"ZED Horse\", \"1\", chainId);\n\n    await core.grantRole(\n      ethers.utils.formatBytes32String(\"core_owners\"),\n      owner.address\n    );\n    await core.grantRole(\n      ethers.utils.formatBytes32String(\"core_contracts\"),\n      owner.address\n    );\n\n    // We cannot interact with ID 0\n    await core.mintCustomHorse(\n      owner.address,\n      4,\n      ethers.utils.formatBytes32String(\"Male\"),\n      ethers.utils.formatBytes32String(\"FirstName\"),\n      ethers.utils.formatBytes32String(\"Black\")\n    );\n  });\n\n  describe(\"mintCustomHorse\", async () => {\n    it(\"should mint a horse with correct attributes\", async () => {\n      let tx = await core.mintCustomHorse(\n        owner.address,\n        4,\n        ethers.utils.formatBytes32String(\"Male\"),\n        ethers.utils.formatBytes32String(\"Miguel\"),\n        ethers.utils.formatBytes32String(\"Blue\")\n      );\n\n      let data = await core.getHorseData(1);\n\n      expect(ethers.utils.parseBytes32String(data[\"0\"])).to.equal(\"M\");\n      expect(data[\"1\"].toNumber()).to.be.above(4);\n      expect(data[\"1\"].toNumber()).to.be.below(75);\n      expect(data[\"3\"]).to.equal(4);\n      expect(ethers.utils.parseBytes32String(data[\"4\"])).to.equal(\"S\");\n      expect(ethers.utils.parseBytes32String(data[\"5\"])).to.equal(\"Colt\");\n      expect(ethers.utils.parseBytes32String(data[\"6\"])).to.equal(\"Miguel\");\n      expect(ethers.utils.parseBytes32String(data[\"7\"])).to.equal(\"Blue\");\n\n      expect(tx).to.emit(core, \"Transfer\");\n      expect(tx)\n        .to.emit(core, \"LogGOPCreated\")\n        .withArgs(owner.address, data[\"2\"].toNumber(), 1);\n\n      expect(await core.tokenURI(1)).to.equal(\n        \"https://api.zed.run/api/v1/horses/metadata/1\"\n      );\n    });\n\n    it(\"should select the correct range of base value depending on the gen\", async () => {\n      await core.mintCustomHorse(\n        owner.address,\n        1,\n        ethers.utils.formatBytes32String(\"Male\"),\n        ethers.utils.formatBytes32String(\"Name\"),\n        ethers.utils.formatBytes32String(\"Black\")\n      );\n\n      let baseValue = await core.getBaseValue(1);\n\n      expect(baseValue.toNumber()).to.be.greaterThanOrEqual(95);\n      expect(baseValue.toNumber()).to.be.lessThanOrEqual(99);\n\n      await core.mintCustomHorse(\n        owner.address,\n        2,\n        ethers.utils.formatBytes32String(\"Male\"),\n        ethers.utils.formatBytes32String(\"SecondName\"),\n        ethers.utils.formatBytes32String(\"Black\")\n      );\n\n      baseValue = await core.getBaseValue(2);\n\n      expect(baseValue.toNumber()).to.be.lessThanOrEqual(89);\n      expect(baseValue.toNumber()).to.be.greaterThanOrEqual(80);\n    });\n\n    it(\"should revert if genotype is out of bounds\", async () => {\n      expect(\n        core.mintCustomHorse(\n          owner.address,\n          12,\n          ethers.utils.formatBytes32String(\"Male\"),\n          ethers.utils.formatBytes32String(\"MyNameIs\"),\n          ethers.utils.formatBytes32String(\"Color\")\n        )\n      ).to.be.revertedWith(\"Core: gen out of bounds\");\n    });\n\n    it(\"should revert if name is taken\", async () => {\n      expect(\n        core.mintCustomHorse(\n          owner.address,\n          1,\n          ethers.utils.formatBytes32String(\"Male\"),\n          ethers.utils.formatBytes32String(\"FirstName\"),\n          ethers.utils.formatBytes32String(\"Color\")\n        )\n      ).to.be.revertedWith(\"Core: name already taken\");\n    });\n  });\n\n  describe(\"mintOffspring\", async () => {\n    // The 'owner' address has the 'core_contracts' role\n    it(\"should mint an offspring with default name\", async () => {\n      await core.mintCustomHorse(\n        owner.address,\n        2,\n        ethers.utils.formatBytes32String(\"Male\"),\n        ethers.utils.formatBytes32String(\"Male Name\"),\n        ethers.utils.formatBytes32String(\"Color\")\n      ); // ID 1\n\n      await core.mintCustomHorse(\n        owner.address,\n        2,\n        ethers.utils.formatBytes32String(\"Female\"),\n        ethers.utils.formatBytes32String(\"Female Name\"),\n        ethers.utils.formatBytes32String(\"Color\")\n      ); // ID 2\n\n      await core.mintOffspring(\n        owner.address,\n        1,\n        2,\n        ethers.utils.formatBytes32String(\"The Color\")\n      );\n\n      let horseData = await core.getHorseData(3);\n\n      expect(ethers.utils.parseBytes32String(horseData[\"6\"])).to.equal(\n        \"Unnamed Foal\"\n      );\n    });\n\n    it(\"should mint an offspring with parent's bloodline\", async () => {\n      await core.mintCustomHorse(\n        owner.address,\n        2,\n        ethers.utils.formatBytes32String(\"Male\"),\n        ethers.utils.formatBytes32String(\"Male Name\"),\n        ethers.utils.formatBytes32String(\"Color\")\n      ); // ID 1\n\n      await core.mintCustomHorse(\n        owner.address,\n        1,\n        ethers.utils.formatBytes32String(\"Female\"),\n        ethers.utils.formatBytes32String(\"Female Name\"),\n        ethers.utils.formatBytes32String(\"Color\")\n      ); // ID 2\n\n      await core.mintOffspring(\n        owner.address,\n        1,\n        2,\n        ethers.utils.formatBytes32String(\"Some Color\")\n      );\n\n      let horseData = await core.getHorseData(3);\n\n      expect(ethers.utils.parseBytes32String(horseData[\"4\"])).to.equal(\"N\");\n    });\n\n    it(\"should update horse type of parents\", async () => {\n      await core.mintCustomHorse(\n        owner.address,\n        2,\n        ethers.utils.formatBytes32String(\"Male\"),\n        ethers.utils.formatBytes32String(\"Male Name\"),\n        ethers.utils.formatBytes32String(\"Color\")\n      ); // ID 1\n\n      await core.mintCustomHorse(\n        owner.address,\n        1,\n        ethers.utils.formatBytes32String(\"Female\"),\n        ethers.utils.formatBytes32String(\"Female Name\"),\n        ethers.utils.formatBytes32String(\"Color\")\n      ); // ID 2\n\n      await core.mintOffspring(\n        owner.address,\n        1,\n        2,\n        ethers.utils.formatBytes32String(\"Color\")\n      );\n\n      let parentData = await core.getHorseData(1);\n      let motherData = await core.getHorseData(2);\n\n      expect(ethers.utils.parseBytes32String(parentData[\"5\"])).to.equal(\n        \"Stallion\"\n      );\n      expect(ethers.utils.parseBytes32String(motherData[\"5\"])).to.equal(\"Mare\");\n    });\n  });\n\n  describe(\"set/get\", async () => {\n    it(\"should return and set the URI base\", async () => {\n      let uriBase = await core.baseURI();\n      expect(uriBase).to.equal(\"https://api.zed.run/api/v1/horses/metadata/\");\n\n      await core.setBaseURI(\"MyURIBase\");\n\n      uriBase = await core.baseURI();\n      expect(uriBase).to.equal(\"MyURIBase\");\n    });\n  });\n\n  describe(\"view\", async () => {\n    it(\"should return whether or not a token exists\", async () => {\n      expect(await core.tokenExists(0)).to.be.true;\n      expect(await core.tokenExists(1)).to.be.false;\n\n      await core.mintCustomHorse(\n        owner.address,\n        1,\n        ethers.utils.formatBytes32String(\"Female\"),\n        ethers.utils.formatBytes32String(\"Name\"),\n        ethers.utils.formatBytes32String(\"Black\")\n      );\n\n      expect(await core.tokenExists(1)).to.be.true;\n    });\n  });\n\n  describe(\"protected functions\", async () => {\n    it(\"should allow admin to transfer tokens\", async () => {\n      expect(await core.ownerOf(0)).to.equal(owner.address);\n\n      let tx = await core.adminTransferToken(0, acc[1].address);\n\n      expect(await core.ownerOf(0)).to.equal(acc[1].address);\n      expect(tx).to.emit(core, \"Transfer\");\n    });\n\n    it(\"should fail if non admin calls tries to transfer\", async () => {\n      expect(\n        core.connect(acc[3]).adminTransferToken(0, acc[1].address)\n      ).to.be.revertedWith(\"Core: unauthorized\");\n    });\n\n    describe(\"pausing contract\", async () => {\n      it(\"cannot create horses if contract is paused\", async () => {\n        await core.pause();\n\n        expect(\n          core.mintCustomHorse(\n            owner.address,\n            1,\n            ethers.utils.formatBytes32String(\"Female\"),\n            ethers.utils.formatBytes32String(\"Migz\"),\n            ethers.utils.formatBytes32String(\"Negro\")\n          )\n        ).to.be.revertedWith(\"Pausable: paused\");\n      });\n\n      it(\"cannot transfer tokens when contract is paused\", async () => {\n        await core.pause();\n\n        expect(\n          core.transferFrom(owner.address, acc[1].address, 0)\n        ).to.be.revertedWith(\"ERC721Pausable: token transfer while paused\");\n      });\n    });\n\n    describe(\"roles\", async () => {\n      it(\"should allow admins to grant admin roles\", async () => {\n        await core.grantRoleAdmin(\n          ethers.utils.formatBytes32String(\"core_owners_admin\"),\n          acc[1].address\n        );\n\n        expect(\n          await core.hasRole(\n            ethers.utils.formatBytes32String(\"core_owners_admin\"),\n            acc[1].address\n          )\n        ).to.be.true;\n      });\n\n      it(\"should revert if non-admin wants to grant admin role\", async () => {\n        expect(\n          core\n            .connect(acc[2])\n            .grantRoleAdmin(\n              ethers.utils.formatBytes32String(\"core_owners_admin\"),\n              acc[1].address\n            )\n        ).to.be.revertedWith(\"Core: unauthorized\");\n      });\n\n      it(\"should allow owners admins to grant another type of admin role\", async () => {\n        await core.grantRoleAdmin(\n          ethers.utils.formatBytes32String(\"core_contracts_admin\"),\n          acc[1].address\n        );\n\n        expect(\n          await core.hasRole(\n            ethers.utils.formatBytes32String(\"core_contracts_admin\"),\n            acc[1].address\n          )\n        ).to.be.true;\n      });\n\n      it(\"should revert caller does not have core_owners_admin role when grantin role without verification\", async () => {\n        await core.grantRoleAdmin(\n          ethers.utils.formatBytes32String(\"core_contracts_admin\"),\n          acc[1].address\n        );\n\n        expect(\n          core\n            .connect(acc[1])\n            .grantRoleAdmin(\n              ethers.utils.formatBytes32String(\"core_owners_admin\"),\n              acc[4].address\n            )\n        ).to.be.revertedWith(\"Core: unauthorized\");\n      });\n    });\n  });\n\n  describe(\"mint token with horse data\", async () => {\n    it(\"should mint a token with the specified horse data\", async () => {\n      let tokenId = 5;\n      let sex = \"M\";\n      let baseValue = 4;\n      let timestamp = Date.now();\n      let genotype = 4;\n      let bloodline = \"S\";\n      let hType = \"Colt\";\n      let name = \"Trung\";\n      let color = \"White\";\n\n      let tx = await core.mintTokenWithHorseData(\n        owner.address,\n        tokenId,\n        ethers.utils.formatBytes32String(sex),\n        baseValue,\n        timestamp,\n        genotype,\n        ethers.utils.formatBytes32String(bloodline),\n        ethers.utils.formatBytes32String(hType),\n        ethers.utils.formatBytes32String(name),\n        ethers.utils.formatBytes32String(color)\n      );\n\n      let data = await core.getHorseData(tokenId);\n\n      expect(ethers.utils.parseBytes32String(data[\"0\"])).to.equal(sex);\n      expect(data[\"1\"].toNumber()).to.equal(baseValue);\n      expect(data[\"2\"].toNumber()).to.equal(timestamp);\n      expect(data[\"3\"].toNumber()).to.equal(genotype);\n      expect(ethers.utils.parseBytes32String(data[\"4\"])).to.equal(bloodline);\n      expect(ethers.utils.parseBytes32String(data[\"5\"])).to.equal(hType);\n      expect(ethers.utils.parseBytes32String(data[\"6\"])).to.equal(name);\n      expect(ethers.utils.parseBytes32String(data[\"7\"])).to.equal(color);\n\n      expect(tx).to.emit(core, \"Transfer\");\n      expect(tx).to.emit(core, \"LogMintTokenWithHorseData\");\n\n      expect(await core.ownerOf(tokenId)).to.equal(owner.address);\n    });\n  });\n\n  describe(\"batch mint token with horse data\", async () => {\n    it(\"should mint multiple tokens with the specified horse data list\", async () => {\n      let tokenId = 5;\n      let sex = \"M\";\n      let baseValue = 4;\n      let timestamp = Date.now();\n      let genotype = 4;\n      let bloodline = \"S\";\n      let hType = \"Colt\";\n      let hType2 = \"Filly\";\n      let name = \"Trung\";\n      let name2 = \"Mila\";\n      let color = \"White\";\n      let color2 = \"Blue\";\n\n      let tx = await core.mintTokenWithHorseDataBatch(\n        [owner.address, acc[1].address],\n        [tokenId, tokenId + 1],\n        [\n          ethers.utils.formatBytes32String(sex),\n          ethers.utils.formatBytes32String(sex),\n        ],\n        [baseValue, baseValue + 1],\n        [timestamp, timestamp + 1000],\n        [genotype, genotype + 1],\n        [\n          ethers.utils.formatBytes32String(bloodline),\n          ethers.utils.formatBytes32String(bloodline),\n        ],\n        [\n          ethers.utils.formatBytes32String(hType),\n          ethers.utils.formatBytes32String(hType2),\n        ],\n        [\n          ethers.utils.formatBytes32String(name),\n          ethers.utils.formatBytes32String(name2),\n        ],\n        [\n          ethers.utils.formatBytes32String(color),\n          ethers.utils.formatBytes32String(color2),\n        ]\n      );\n\n      let data = await core.getHorseData(tokenId);\n\n      expect(ethers.utils.parseBytes32String(data[\"0\"])).to.equal(sex);\n      expect(data[\"1\"].toNumber()).to.equal(baseValue);\n      expect(data[\"2\"].toNumber()).to.equal(timestamp);\n      expect(data[\"3\"].toNumber()).to.equal(genotype);\n      expect(ethers.utils.parseBytes32String(data[\"4\"])).to.equal(bloodline);\n      expect(ethers.utils.parseBytes32String(data[\"5\"])).to.equal(hType);\n      expect(ethers.utils.parseBytes32String(data[\"6\"])).to.equal(name);\n      expect(ethers.utils.parseBytes32String(data[\"7\"])).to.equal(color);\n\n      data = await core.getHorseData(tokenId + 1);\n\n      expect(ethers.utils.parseBytes32String(data[\"0\"])).to.equal(sex);\n      expect(data[\"1\"].toNumber()).to.equal(baseValue + 1);\n      expect(data[\"2\"].toNumber()).to.equal(timestamp + 1000);\n      expect(data[\"3\"].toNumber()).to.equal(genotype + 1);\n      expect(ethers.utils.parseBytes32String(data[\"4\"])).to.equal(bloodline);\n      expect(ethers.utils.parseBytes32String(data[\"5\"])).to.equal(hType2);\n      expect(ethers.utils.parseBytes32String(data[\"6\"])).to.equal(name2);\n      expect(ethers.utils.parseBytes32String(data[\"7\"])).to.equal(color2);\n\n      expect(tx).to.emit(core, \"Transfer\");\n      expect(tx).to.emit(core, \"LogMintTokenWithHorseDataBatch\");\n\n      expect(await core.ownerOf(tokenId + 1)).to.equal(acc[1].address);\n\n      // Change horse name\n      const newName = \"Trung New\";\n      const newName2 = \"Trung New 2\";\n      tx = await core.setHorseNameBatch(\n        [tokenId, tokenId + 1],\n        [\n          ethers.utils.formatBytes32String(newName),\n          ethers.utils.formatBytes32String(newName2),\n        ]\n      );\n      data = await core.getHorseData(tokenId);\n      expect(ethers.utils.parseBytes32String(data[\"6\"])).to.equal(newName);\n      data = await core.getHorseData(tokenId + 1);\n      expect(ethers.utils.parseBytes32String(data[\"6\"])).to.equal(newName2);\n\n      expect(tx).to.emit(core, \"LogSetHorseNameBatch\");\n\n      // Test name uniqueness\n      expect(\n        core.setHorseNameBatch(\n          [tokenId, tokenId + 1],\n          [\n            ethers.utils.formatBytes32String(newName),\n            ethers.utils.formatBytes32String(newName2),\n          ]\n        )\n      ).to.be.revertedWith(\"Core: name already taken\");\n    });\n\n    it(\"should not mint anything with empty data list\", async () => {\n      let tokenId = 5;\n      let tx = await core.mintTokenWithHorseDataBatch(\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        []\n      );\n\n      expect(tx).to.emit(core, \"LogMintTokenWithHorseDataBatch\");\n\n      expect(await core.tokenExists(tokenId)).to.be.false;\n    });\n  });\n\n  describe(\"burning\", async () => {\n    it(\"burns a token and does not affect the next token ID\", async () => {\n      await core.mintCustomHorse(\n        owner.address,\n        1,\n        ethers.utils.formatBytes32String(\"Female\"),\n        ethers.utils.formatBytes32String(\"VHS\"),\n        ethers.utils.formatBytes32String(\"Negro\")\n      );\n\n      let horseData = await core.getHorseData(1);\n\n      expect(ethers.utils.parseBytes32String(horseData[\"7\"])).to.equal(\"Negro\");\n\n      expect(await core.tokenExists(1)).to.be.true;\n      expect((await core.nextTokenId()).toNumber()).to.equal(2);\n\n      await core.burn(1);\n\n      horseData = await core.getHorseData(1);\n\n      expect((await core.nextTokenId()).toNumber()).to.equal(2);\n      expect(ethers.utils.parseBytes32String(horseData[\"7\"])).to.not.equal(\n        \"Negro\"\n      );\n\n      // The total supply is affected, not the next token ID\n      expect((await core.totalSupply()).toNumber()).to.equal(1);\n    });\n\n    it(\"reverts if sender is not owner of token\", async () => {\n      expect(core.connect(acc[1]).burn(0)).to.be.revertedWith(\n        \"Core: not owner of token\"\n      );\n    });\n\n    it(\"reverts if token does not exist\", async () => {\n      expect(core.burn(1)).to.be.revertedWith(\"Core: token does not exist\");\n    });\n  });\n\n  describe(\"setting name\", async () => {\n    it(\"sets the name of the horse\", async () => {\n      await core.mintCustomHorse(\n        owner.address,\n        1,\n        ethers.utils.formatBytes32String(\"Male\"),\n        ethers.utils.formatBytes32String(\"VHS\"),\n        ethers.utils.formatBytes32String(\"Black\")\n      );\n\n      await core.setHorseName(1, ethers.utils.formatBytes32String(\"New Name\"));\n\n      let horseData = await core.getHorseData(1);\n\n      expect(ethers.utils.parseBytes32String(horseData[\"6\"])).to.equal(\n        \"New Name\"\n      );\n    });\n\n    it(\"reverts if name is already taken\", async () => {\n      // Token 0 from setup's name is FirstName\n      expect(\n        core.setHorseName(0, ethers.utils.formatBytes32String(\"FirstName\"))\n      ).to.be.revertedWith(\"Core: name already taken\");\n    });\n  });\n\n  describe(\"meta-transactions\", async () => {\n    it(\"should create a horse through a meta-tx\", async () => {\n      let functionSignature = core.interface.encodeFunctionData(\n        \"mintCustomHorse\",\n        [\n          owner.address,\n          3,\n          ethers.utils.formatBytes32String(\"Male\"),\n          ethers.utils.formatBytes32String(\"SecondName\"),\n          ethers.utils.formatBytes32String(\"Negro\"),\n        ]\n      );\n\n      let typedData = await getTypedData({\n        name: \"ZED Horse\",\n        version: \"1\",\n        chainId: chainId,\n        verifyingContract: core.address,\n        nonce: await core.getNonce(owner.address),\n        from: owner.address,\n        functionSignature: functionSignature,\n      });\n\n      let signedData = await owner._signTypedData(\n        typedData.domain,\n        typedData.types,\n        typedData.message\n      );\n\n      let { r, s, v } = await getRsvFromSig(signedData);\n\n      await core.executeMetaTransaction(\n        owner.address,\n        functionSignature,\n        r,\n        s,\n        v\n      );\n\n      let data = await core.getHorseData(1);\n\n      expect(ethers.utils.parseBytes32String(data[\"0\"])).to.equal(\"M\");\n      expect(data[\"1\"].toNumber()).to.be.above(4);\n      expect(data[\"1\"].toNumber()).to.be.below(80);\n      expect(data[\"3\"].toNumber()).to.equal(3);\n      expect(ethers.utils.parseBytes32String(data[\"4\"])).to.equal(\"S\");\n      expect(ethers.utils.parseBytes32String(data[\"5\"])).to.equal(\"Colt\");\n      expect(ethers.utils.parseBytes32String(data[\"6\"])).to.equal(\"SecondName\");\n      expect(ethers.utils.parseBytes32String(data[\"7\"])).to.equal(\"Negro\");\n    });\n\n    it(\"should transfer a horse through a meta-tx\", async () => {\n      // Since ID 0 is created already we're going to use that one\n      let functionSignature = core.interface.encodeFunctionData(\n        \"transferFrom\",\n        [owner.address, acc[1].address, 0]\n      );\n\n      let typedData = await getTypedData({\n        name: \"ZED Horse\",\n        version: \"1\",\n        chainId: chainId,\n        verifyingContract: core.address,\n        nonce: await core.getNonce(owner.address),\n        from: owner.address,\n        functionSignature: functionSignature,\n      });\n\n      let signedData = await owner._signTypedData(\n        typedData.domain,\n        typedData.types,\n        typedData.message\n      );\n      let { r, s, v } = await getRsvFromSig(signedData);\n\n      await core.executeMetaTransaction(\n        owner.address,\n        functionSignature,\n        r,\n        s,\n        v\n      );\n\n      expect(await core.ownerOf(0)).to.equal(acc[1].address);\n    });\n\n    it(\"should revert if user has no rights for token transfer\", async () => {\n      let functionSignature = core.interface.encodeFunctionData(\n        \"transferFrom\",\n        [owner.address, acc[1].address, 0]\n      );\n\n      let typedData = await getTypedData({\n        name: \"ZED Horse\",\n        version: \"1\",\n        chainId: chainId,\n        verifyingContract: core.address,\n        nonce: await core.getNonce(acc[1].address),\n        from: acc[1].address,\n        functionSignature: functionSignature,\n      });\n\n      let signedData = await acc[1]._signTypedData(\n        typedData.domain,\n        typedData.types,\n        typedData.message\n      );\n      let { r, s, v } = await getRsvFromSig(signedData);\n\n      expect(\n        core.executeMetaTransaction(acc[1].address, functionSignature, r, s, v)\n      ).to.be.revertedWith(\"ERC721: transfer caller is not owner nor approved\");\n    });\n\n    it(\"should burn a token for an user\", async () => {\n      await core.mintCustomHorse(\n        acc[4].address,\n        1,\n        ethers.utils.formatBytes32String(\"Female\"),\n        ethers.utils.formatBytes32String(\"FemHorse\"),\n        ethers.utils.formatBytes32String(\"Pink\")\n      );\n\n      expect(await core.tokenExists(1)).to.be.true;\n\n      let functionSignature = core.interface.encodeFunctionData(\"burn\", [1]);\n\n      let typedData = await getTypedData({\n        name: \"ZED Horse\",\n        version: \"1\",\n        chainId: chainId,\n        verifyingContract: core.address,\n        nonce: await core.getNonce(acc[4].address),\n        from: acc[4].address,\n        functionSignature: functionSignature,\n      });\n\n      let signedData = await acc[4]._signTypedData(\n        typedData.domain,\n        typedData.types,\n        typedData.message\n      );\n      let { r, s, v } = await getRsvFromSig(signedData);\n\n      await core.executeMetaTransaction(\n        acc[4].address,\n        functionSignature,\n        r,\n        s,\n        v\n      );\n\n      expect(await core.tokenExists(1)).to.be.false;\n      expect(await core.nextTokenId()).to.equal(2);\n    });\n  });\n});\n"
      ]
    },
    "mtime": 1627083004556
  },
  "{\"filename\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/GOPCreatorV3Test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/GOPCreatorV3Test.js",
      "filenameRelative": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/GOPCreatorV3Test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "GOPCreatorV3Test.js",
      "sourceFileName": "GOPCreatorV3Test.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "GOPCreatorV3Test"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar GOPCreatorV3 = artifacts.require(\"GOPCreatorV3\");\nvar Core = artifacts.require(\"Core\");\nvar HorseData = artifacts.require(\"HorseData\");\n\ncontract(\"GOPCreatorV3\", function (acc) {\n  var gop = void 0,\n      core = void 0,\n      horseData = void 0;\n  var owner = acc[0];\n  var receiver = acc[1];\n  var blockchainBrain = acc[3];\n\n  beforeEach(\"setup instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return HorseData.new();\n\n          case 2:\n            horseData = _context2.sent;\n            _context2.next = 5;\n            return Core.new(horseData.address);\n\n          case 5:\n            core = _context2.sent;\n            _context2.next = 8;\n            return GOPCreatorV3.new(receiver, core.address, blockchainBrain);\n\n          case 8:\n            gop = _context2.sent;\n            _context2.next = 11;\n            return core.grantRole(web3.utils.toHex(\"core_contracts\"), gop.address);\n\n          case 11:\n            _context2.next = 13;\n            return gop.grantRole(web3.utils.toHex(\"gop_owners\"), owner);\n\n          case 13:\n\n            [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].forEach(function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(x) {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return gop.setHorsesRemaining(x, 1000, { from: blockchainBrain });\n\n                      case 2:\n                        return _context.abrupt(\"return\", _context.sent);\n\n                      case 3:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, undefined);\n              }));\n\n              return function (_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n\n            _context2.next = 16;\n            return gop.createCustomHorse(owner, 1, web3.utils.toHex(\"Male\"), web3.utils.toHex(\"FirstName\"), web3.utils.toHex(\"Black\"), { from: blockchainBrain });\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })));\n\n  describe(\"creating horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            it(\"should buy a horse and decrease counter\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n              var remaining;\n              return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return gop.createCustomHorse(owner, 1, web3.utils.toHex(\"Female\"), web3.utils.toHex(\"Second\"), web3.utils.toHex(\"Black\"), { from: blockchainBrain });\n\n                    case 2:\n                      _context3.next = 4;\n                      return gop.horsesRemaining(1);\n\n                    case 4:\n                      remaining = _context3.sent;\n\n\n                      // 8 remaining because we create one on the setup\n                      assert.equal(web3.utils.toBN(remaining).toNumber(), 998);\n\n                    case 6:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3, undefined);\n            })));\n\n            it(\"should create horse with specific data\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n              var givenGender, baseValue, data;\n              return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      givenGender = web3.utils.stringToHex(\"Male\");\n                      _context4.next = 3;\n                      return gop.createCustomHorse(owner, 3, givenGender, web3.utils.toHex(\"Second\"), web3.utils.toHex(\"Black\"), { from: blockchainBrain });\n\n                    case 3:\n                      _context4.next = 5;\n                      return core.getBaseValue(1);\n\n                    case 5:\n                      baseValue = _context4.sent;\n\n\n                      assert.isAtMost(web3.utils.toBN(baseValue).toNumber(), 80);\n                      assert.isAtLeast(web3.utils.toBN(baseValue).toNumber(), 76);\n\n                      _context4.next = 10;\n                      return core.getHorseData(1);\n\n                    case 10:\n                      data = _context4.sent;\n\n\n                      assert.equal(web3.utils.hexToUtf8(data[0]), \"M\");\n                      assert.equal(web3.utils.toBN(data[3]).toNumber(), 3);\n                      assert.equal(web3.utils.hexToUtf8(data[4]), \"S\");\n                      assert.equal(web3.utils.hexToUtf8(data[5]), \"Colt\");\n\n                      givenGender = web3.utils.stringToHex(\"Female\");\n                      _context4.next = 18;\n                      return gop.createCustomHorse(owner, 6, givenGender, web3.utils.toHex(\"Third\"), web3.utils.toHex(\"Black\"), { from: blockchainBrain });\n\n                    case 18:\n                      _context4.next = 20;\n                      return core.getHorseData(2);\n\n                    case 20:\n                      data = _context4.sent;\n\n\n                      assert.equal(web3.utils.hexToUtf8(data[0]), \"F\");\n                      assert.equal(web3.utils.toBN(data[3]).toNumber(), 6);\n                      assert.equal(web3.utils.hexToUtf8(data[4]), \"F\"); // Finney\n                      assert.equal(web3.utils.hexToUtf8(data[5]), \"Filly\");\n\n                    case 25:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4, undefined);\n            })));\n\n            it(\"should revert if there are no more horses for a genotype\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n              return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.next = 2;\n                      return gop.setHorsesRemaining(1, 0, { from: blockchainBrain });\n\n                    case 2:\n                      _context5.prev = 2;\n                      _context5.next = 5;\n                      return gop.createCustomHorse(owner, 1, web3.utils.toHex(\"Female\"), web3.utils.toHex(\"Second\"), web3.utils.toHex(\"Black\"), { from: blockchainBrain });\n\n                    case 5:\n\n                      assert.fail(\"Expected revert not received\");\n                      _context5.next = 11;\n                      break;\n\n                    case 8:\n                      _context5.prev = 8;\n                      _context5.t0 = _context5[\"catch\"](2);\n\n                      assert.equal(_context5.t0.reason, \"GOP: Limit for genotype reached\");\n\n                    case 11:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, _callee5, undefined, [[2, 8]]);\n            })));\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, undefined);\n  })));\n\n  describe(\"horse codes\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            it(\"should mark a code as used\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n              var id;\n              return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      id = web3.utils.toHex(\"xxx\");\n                      _context7.next = 3;\n                      return gop.markCodeAsUsed(id, {\n                        from: owner\n                      });\n\n                    case 3:\n                      _context7.prev = 3;\n                      _context7.next = 6;\n                      return gop.markCodeAsUsed(id, {\n                        from: owner\n                      });\n\n                    case 6:\n                      assert.fail(\"Expected revert not received\");\n                      _context7.next = 12;\n                      break;\n\n                    case 9:\n                      _context7.prev = 9;\n                      _context7.t0 = _context7[\"catch\"](3);\n\n                      assert.equal(_context7.t0.reason, \"GOP: Code has been used\");\n\n                    case 12:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, _callee7, undefined, [[3, 9]]);\n            })));\n\n            it(\"should mark a code as unused\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n              var id;\n              return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                while (1) {\n                  switch (_context8.prev = _context8.next) {\n                    case 0:\n                      // should revert as code is not used yet\n                      id = web3.utils.toHex(\"xxx\");\n                      _context8.prev = 1;\n                      _context8.next = 4;\n                      return gop.markCodeAsUnused(id, {\n                        from: owner\n                      });\n\n                    case 4:\n                      assert.fail(\"Expected revert not received\");\n                      _context8.next = 10;\n                      break;\n\n                    case 7:\n                      _context8.prev = 7;\n                      _context8.t0 = _context8[\"catch\"](1);\n\n                      assert.equal(_context8.t0.reason, \"GOP: Code has not been used\");\n\n                    case 10:\n                    case \"end\":\n                      return _context8.stop();\n                  }\n                }\n              }, _callee8, undefined, [[1, 7]]);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, undefined);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "GOPCreatorV3Test.js"
      ],
      "names": [
        "GOPCreatorV3",
        "artifacts",
        "require",
        "Core",
        "HorseData",
        "contract",
        "acc",
        "gop",
        "core",
        "horseData",
        "owner",
        "receiver",
        "blockchainBrain",
        "beforeEach",
        "new",
        "address",
        "grantRole",
        "web3",
        "utils",
        "toHex",
        "forEach",
        "x",
        "setHorsesRemaining",
        "from",
        "createCustomHorse",
        "describe",
        "it",
        "horsesRemaining",
        "remaining",
        "assert",
        "equal",
        "toBN",
        "toNumber",
        "givenGender",
        "stringToHex",
        "getBaseValue",
        "baseValue",
        "isAtMost",
        "isAtLeast",
        "getHorseData",
        "data",
        "hexToUtf8",
        "fail",
        "reason",
        "id",
        "markCodeAsUsed",
        "markCodeAsUnused"
      ],
      "mappings": "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",
      "file": "GOPCreatorV3Test.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "sourcesContent": [
        "const GOPCreatorV3 = artifacts.require(\"GOPCreatorV3\");\nconst Core = artifacts.require(\"Core\");\nconst HorseData = artifacts.require(\"HorseData\");\n\ncontract(\"GOPCreatorV3\", (acc) => {\n  let gop, core, horseData;\n  let owner = acc[0];\n  let receiver = acc[1];\n  let blockchainBrain = acc[3];\n\n  beforeEach(\"setup instances\", async () => {\n    horseData = await HorseData.new();\n    core = await Core.new(horseData.address);\n    gop = await GOPCreatorV3.new(receiver, core.address, blockchainBrain);\n\n    // This will give GOPCreator the ability to call certain functions from Core\n    await core.grantRole(web3.utils.toHex(\"core_contracts\"), gop.address);\n    await gop.grantRole(web3.utils.toHex(\"gop_owners\"), owner);\n\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].forEach(\n      async (x) =>\n        await gop.setHorsesRemaining(x, 1000, { from: blockchainBrain })\n    );\n\n    await gop.createCustomHorse(\n      owner,\n      1,\n      web3.utils.toHex(\"Male\"),\n      web3.utils.toHex(\"FirstName\"),\n      web3.utils.toHex(\"Black\"),\n      { from: blockchainBrain }\n    );\n  });\n\n  describe(\"creating horse\", async () => {\n    it(\"should buy a horse and decrease counter\", async () => {\n      await gop.createCustomHorse(\n        owner,\n        1,\n        web3.utils.toHex(\"Female\"),\n        web3.utils.toHex(\"Second\"),\n        web3.utils.toHex(\"Black\"),\n        { from: blockchainBrain }\n      );\n\n      let remaining = await gop.horsesRemaining(1);\n\n      // 8 remaining because we create one on the setup\n      assert.equal(web3.utils.toBN(remaining).toNumber(), 998);\n    });\n\n    it(\"should create horse with specific data\", async () => {\n      let givenGender = web3.utils.stringToHex(\"Male\");\n      await gop.createCustomHorse(\n        owner,\n        3,\n        givenGender,\n        web3.utils.toHex(\"Second\"),\n        web3.utils.toHex(\"Black\"),\n        { from: blockchainBrain }\n      );\n\n      let baseValue = await core.getBaseValue(1);\n\n      assert.isAtMost(web3.utils.toBN(baseValue).toNumber(), 80);\n      assert.isAtLeast(web3.utils.toBN(baseValue).toNumber(), 76);\n\n      let data = await core.getHorseData(1);\n\n      assert.equal(web3.utils.hexToUtf8(data[0]), \"M\");\n      assert.equal(web3.utils.toBN(data[3]).toNumber(), 3);\n      assert.equal(web3.utils.hexToUtf8(data[4]), \"S\");\n      assert.equal(web3.utils.hexToUtf8(data[5]), \"Colt\");\n\n      givenGender = web3.utils.stringToHex(\"Female\");\n      await gop.createCustomHorse(\n        owner,\n        6,\n        givenGender,\n        web3.utils.toHex(\"Third\"),\n        web3.utils.toHex(\"Black\"),\n        { from: blockchainBrain }\n      );\n\n      data = await core.getHorseData(2);\n\n      assert.equal(web3.utils.hexToUtf8(data[0]), \"F\");\n      assert.equal(web3.utils.toBN(data[3]).toNumber(), 6);\n      assert.equal(web3.utils.hexToUtf8(data[4]), \"F\"); // Finney\n      assert.equal(web3.utils.hexToUtf8(data[5]), \"Filly\");\n    });\n\n    it(\"should revert if there are no more horses for a genotype\", async () => {\n      await gop.setHorsesRemaining(1, 0, { from: blockchainBrain });\n\n      try {\n        await gop.createCustomHorse(\n          owner,\n          1,\n          web3.utils.toHex(\"Female\"),\n          web3.utils.toHex(\"Second\"),\n          web3.utils.toHex(\"Black\"),\n          { from: blockchainBrain }\n        );\n\n        assert.fail(\"Expected revert not received\");\n      } catch (err) {\n        assert.equal(err.reason, \"GOP: Limit for genotype reached\");\n      }\n    });\n  });\n\n  describe(\"horse codes\", async () => {\n    it(\"should mark a code as used\", async () => {\n      let id = web3.utils.toHex(\"xxx\");\n\n      await gop.markCodeAsUsed(id, {\n        from: owner,\n      });\n\n      // should revert because code is marked as used already.\n      try {\n        await gop.markCodeAsUsed(id, {\n          from: owner,\n        });\n        assert.fail(\"Expected revert not received\");\n      } catch (err) {\n        assert.equal(err.reason, \"GOP: Code has been used\");\n      }\n    });\n\n    it(\"should mark a code as unused\", async () => {\n      // should revert as code is not used yet\n      let id = web3.utils.toHex(\"xxx\");\n      try {\n        await gop.markCodeAsUnused(id, {\n          from: owner,\n        });\n        assert.fail(\"Expected revert not received\");\n      } catch (err) {\n        assert.equal(err.reason, \"GOP: Code has not been used\");\n      }\n    });\n  });\n});\n"
      ]
    },
    "mtime": 1614607483760
  },
  "{\"filename\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/BreedingTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../../utils",
            "imported": [
              "funcFromABI",
              "signTxData",
              "getTypedData",
              "getRsvFromSig"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "funcFromABI",
                "local": "funcFromABI"
              },
              {
                "kind": "named",
                "imported": "signTxData",
                "local": "signTxData"
              },
              {
                "kind": "named",
                "imported": "getTypedData",
                "local": "getTypedData"
              },
              {
                "kind": "named",
                "imported": "getRsvFromSig",
                "local": "getRsvFromSig"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/BreedingTest.js",
      "filenameRelative": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/BreedingTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "BreedingTest.js",
      "sourceFileName": "BreedingTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "BreedingTest"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nvar _utils = require(\"../../utils\");\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar Core = artifacts.require(\"Core\");\nvar HorseData = artifacts.require(\"HorseData\");\nvar Breeding = artifacts.require(\"Breeding\");\nvar BreedingProxy = artifacts.require(\"BreedingProxy\");\nvar BreedingProxyAdmin = artifacts.require(\"BreedingProxyAdmin\");\nvar StudService = artifacts.require(\"StudServiceV5\");\nvar BreedTypes = artifacts.require(\"BreedTypes\");\nvar ERC20Test = artifacts.require(\"ERC20Test\");\nvar ganache = require(\"ganache-core\");\n\ncontract(\"Breeding\", function (acc) {\n  var maxWETH = web3.utils.toWei(\"1000\", \"ether\");\n\n  var core = void 0,\n      breedTypes = void 0,\n      breedingLogic = void 0,\n      breedingProxy = void 0,\n      breedingProxyAdmin = void 0,\n      breeding = void 0,\n      studService = void 0,\n      horseData = void 0,\n      erc20 = void 0,\n      chainId = void 0;\n\n  var owner = acc[0],\n      poolAddress = acc[1],\n      blockchainBrain = acc[2],\n      amount = web3.utils.toWei(\"0.1\", \"ether\"),\n      priceyAmount = web3.utils.toWei(\"1\", \"ether\");\n\n  beforeEach(\"deploy instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return HorseData.new();\n\n          case 2:\n            horseData = _context.sent;\n            _context.next = 5;\n            return Core.new(horseData.address);\n\n          case 5:\n            core = _context.sent;\n            _context.next = 8;\n            return web3.eth.net.getId();\n\n          case 8:\n            chainId = _context.sent;\n            _context.next = 11;\n            return BreedTypes.new();\n\n          case 11:\n            breedTypes = _context.sent;\n            _context.next = 14;\n            return StudService.new(core.address, horseData.address, breedTypes.address);\n\n          case 14:\n            studService = _context.sent;\n            _context.next = 17;\n            return ERC20Test.new(web3.utils.toWei(\"100\", \"ether\"));\n\n          case 17:\n            erc20 = _context.sent;\n            _context.next = 20;\n            return Breeding.new();\n\n          case 20:\n            breedingLogic = _context.sent;\n            _context.next = 23;\n            return BreedingProxyAdmin.new();\n\n          case 23:\n            breedingProxyAdmin = _context.sent;\n            _context.next = 26;\n            return BreedingProxy.new(breedingLogic.address, breedingProxyAdmin.address);\n\n          case 26:\n            breedingProxy = _context.sent;\n            _context.next = 29;\n            return Breeding.at(breedingProxy.address);\n\n          case 29:\n            breeding = _context.sent;\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  beforeEach(\"setup initial state of instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return breeding.setDomainSeparator(\"ZED Breeding\", \"1\", chainId);\n\n          case 2:\n            _context2.next = 4;\n            return studService.grantRole(web3.utils.toHex(\"stud_owners\"), owner);\n\n          case 4:\n            _context2.next = 6;\n            return core.grantRole(web3.utils.toHex(\"core_contracts\"), owner);\n\n          case 6:\n            _context2.next = 8;\n            return core.mintCustomHorse(owner, 4, web3.utils.toHex(\"Male\"), web3.utils.toHex(\"FirstName\"), web3.utils.toHex(\"Black\"));\n\n          case 8:\n            _context2.next = 10;\n            return breedTypes.grantRole(web3.utils.toHex(\"breed_types_owners\"), owner);\n\n          case 10:\n            _context2.next = 12;\n            return breeding.initialize(core.address, studService.address, breedTypes.address, erc20.address, poolAddress);\n\n          case 12:\n            _context2.next = 14;\n            return breedTypes.grantRole(web3.utils.toHex(\"breed_types_owners\"), breeding.address);\n\n          case 14:\n            _context2.next = 16;\n            return core.grantRole(web3.utils.toHex(\"core_contracts\"), breeding.address);\n\n          case 16:\n            _context2.next = 18;\n            return core.grantRole(web3.utils.toHex(\"core_owners\"), breeding.address);\n\n          case 18:\n            _context2.next = 20;\n            return core.mintCustomHorse(owner, 4, web3.utils.toHex(\"Female\"), web3.utils.toHex(\"Truc\"), web3.utils.toHex(\"violet\"));\n\n          case 20:\n            _context2.next = 22;\n            return core.mintCustomHorse(acc[2], 4, web3.utils.toHex(\"Male\"), web3.utils.toHex(\"Trung\"), web3.utils.toHex(\"blue\"));\n\n          case 22:\n            _context2.next = 24;\n            return studService.putInStud(2, amount, 100);\n\n          case 24:\n            _context2.next = 26;\n            return erc20.transfer(acc[2], amount);\n\n          case 26:\n            _context2.next = 28;\n            return erc20.approve(breeding.address, maxWETH, {\n              from: acc[2]\n            });\n\n          case 28:\n            _context2.next = 30;\n            return erc20.approve(breeding.address, maxWETH);\n\n          case 30:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  }))\n\n  // Female ID 1 and Male ID 2\n  );\n\n  describe(\"initial proxy validation\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            it(\"should make deployer of contract admin of breeding owners\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n              var isDeployer;\n              return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return breeding.hasRole(web3.utils.toHex(\"breeding_owners_admin\"), owner);\n\n                    case 2:\n                      isDeployer = _context3.sent;\n\n\n                      assert.isTrue(isDeployer);\n\n                    case 4:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3, undefined);\n            })));\n\n            it(\"should set upgrade admin correctly\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n              return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return breedingProxyAdmin.getProxyImplementation(breedingProxy.address);\n\n                    case 2:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4, undefined);\n            })));\n\n            it(\"should upgrade to new implementation\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n              var newLogic;\n              return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.t0 = assert;\n                      _context5.next = 3;\n                      return breedingProxyAdmin.getProxyImplementation(breedingProxy.address);\n\n                    case 3:\n                      _context5.t1 = _context5.sent;\n                      _context5.t2 = breedingLogic.address;\n\n                      _context5.t0.equal.call(_context5.t0, _context5.t1, _context5.t2);\n\n                      _context5.next = 8;\n                      return Breeding.new();\n\n                    case 8:\n                      newLogic = _context5.sent;\n                      _context5.next = 11;\n                      return breedingProxyAdmin.upgrade(breedingProxy.address, newLogic.address);\n\n                    case 11:\n                      _context5.t3 = assert;\n                      _context5.next = 14;\n                      return breedingProxyAdmin.getProxyImplementation(breedingProxy.address);\n\n                    case 14:\n                      _context5.t4 = _context5.sent;\n                      _context5.t5 = newLogic.address;\n\n                      _context5.t3.equal.call(_context5.t3, _context5.t4, _context5.t5);\n\n                    case 17:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, _callee5, undefined);\n            })));\n\n            it(\"should revert when calling initialize() after upgrading\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n              var newLogic;\n              return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                while (1) {\n                  switch (_context6.prev = _context6.next) {\n                    case 0:\n                      _context6.next = 2;\n                      return Breeding.new();\n\n                    case 2:\n                      newLogic = _context6.sent;\n                      _context6.next = 5;\n                      return breedingProxyAdmin.upgrade(breedingProxy.address, newLogic.address);\n\n                    case 5:\n                      _context6.prev = 5;\n                      _context6.next = 8;\n                      return breeding.initialize(core.address, studService.address, breedTypes.address, erc20.address, poolAddress);\n\n                    case 8:\n\n                      assert.fail(\"Expected revert not received\");\n                      _context6.next = 14;\n                      break;\n\n                    case 11:\n                      _context6.prev = 11;\n                      _context6.t0 = _context6[\"catch\"](5);\n\n                      assert.equal(_context6.t0.reason, \"Initializable: contract is already initialized\");\n\n                    case 14:\n                    case \"end\":\n                      return _context6.stop();\n                  }\n                }\n              }, _callee6, undefined, [[5, 11]]);\n            })));\n\n            it(\"should hold state after upgrading\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n              var newLogic;\n              return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      _context7.t0 = assert;\n                      _context7.next = 3;\n                      return breeding.hasRole(web3.utils.toHex(\"breeding_owners_admin\"), blockchainBrain);\n\n                    case 3:\n                      _context7.t1 = _context7.sent;\n\n                      _context7.t0.isFalse.call(_context7.t0, _context7.t1);\n\n                      _context7.next = 7;\n                      return breeding.grantRoleAdmin(web3.utils.toHex(\"breeding_owners_admin\"), blockchainBrain);\n\n                    case 7:\n                      _context7.t2 = assert;\n                      _context7.next = 10;\n                      return breeding.hasRole(web3.utils.toHex(\"breeding_owners_admin\"), blockchainBrain);\n\n                    case 10:\n                      _context7.t3 = _context7.sent;\n\n                      _context7.t2.isTrue.call(_context7.t2, _context7.t3);\n\n                      _context7.next = 14;\n                      return Breeding.new();\n\n                    case 14:\n                      newLogic = _context7.sent;\n                      _context7.next = 17;\n                      return breedingProxyAdmin.upgrade(breedingProxy.address, newLogic.address);\n\n                    case 17:\n                      _context7.t4 = assert;\n                      _context7.next = 20;\n                      return breeding.hasRole(web3.utils.toHex(\"breeding_owners_admin\"), blockchainBrain);\n\n                    case 20:\n                      _context7.t5 = _context7.sent;\n\n                      _context7.t4.isTrue.call(_context7.t4, _context7.t5);\n\n                    case 22:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, _callee7, undefined);\n            })));\n\n          case 5:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, undefined);\n  })));\n\n  describe(\"mix\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n    return regeneratorRuntime.wrap(function _callee20$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            it(\"should mix two horses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n              var firstOffspringStats, secondOffspringStats;\n              return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                while (1) {\n                  switch (_context9.prev = _context9.next) {\n                    case 0:\n                      _context9.t0 = assert;\n                      _context9.next = 3;\n                      return core.tokenExists(3);\n\n                    case 3:\n                      _context9.t1 = _context9.sent;\n\n                      _context9.t0.isFalse.call(_context9.t0, _context9.t1);\n\n                      _context9.next = 7;\n                      return breeding.mix(2, 1, web3.utils.toHex(\"blueviolet\"), amount);\n\n                    case 7:\n                      _context9.t2 = assert;\n                      _context9.next = 10;\n                      return core.tokenExists(3);\n\n                    case 10:\n                      _context9.t3 = _context9.sent;\n\n                      _context9.t2.isTrue.call(_context9.t2, _context9.t3);\n\n                      _context9.next = 14;\n                      return breeding.getHorseOffspringStats(1);\n\n                    case 14:\n                      firstOffspringStats = _context9.sent;\n                      _context9.next = 17;\n                      return breeding.getHorseOffspringStats(2);\n\n                    case 17:\n                      secondOffspringStats = _context9.sent;\n\n\n                      assert.equal(web3.utils.toBN(firstOffspringStats).toNumber(), 1);\n                      assert.equal(web3.utils.toBN(secondOffspringStats).toNumber(), 1);\n\n                      // Ensure the owner is the owner of the female horse\n                      _context9.t4 = assert;\n                      _context9.next = 23;\n                      return core.ownerOf(3);\n\n                    case 23:\n                      _context9.t5 = _context9.sent;\n                      _context9.t6 = owner;\n\n                      _context9.t4.equal.call(_context9.t4, _context9.t5, _context9.t6);\n\n                    case 26:\n                    case \"end\":\n                      return _context9.stop();\n                  }\n                }\n              }, _callee9, undefined);\n            })));\n\n            it(\"should create a base value for the offspring\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n              var baseValue;\n              return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                while (1) {\n                  switch (_context10.prev = _context10.next) {\n                    case 0:\n                      _context10.next = 2;\n                      return breeding.mix(2, 1, web3.utils.toHex(\"blueviolet\"), amount);\n\n                    case 2:\n                      _context10.next = 4;\n                      return core.getBaseValue(3);\n\n                    case 4:\n                      baseValue = _context10.sent;\n\n                      assert.notEqual(web3.utils.toBN(baseValue).toNumber(), 0);\n\n                      // The parents of the third horse are horses from the first Gen, they have high base value\n                      // so offspring's base value should be at least 40.\n                      // This is a bit tricky because those numbers are random so we need to make assumptions about the base value.\n                      assert.isAbove(web3.utils.toBN(baseValue).toNumber(), 39);\n\n                    case 7:\n                    case \"end\":\n                      return _context10.stop();\n                  }\n                }\n              }, _callee10, undefined);\n            })));\n\n            it(\"should return the correct genotype for a given horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n              var genotype;\n              return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                while (1) {\n                  switch (_context11.prev = _context11.next) {\n                    case 0:\n                      _context11.next = 2;\n                      return breeding.mix(2, 1, web3.utils.toHex(\"blueviolet\"), amount);\n\n                    case 2:\n                      _context11.next = 4;\n                      return core.getHorseData(3);\n\n                    case 4:\n                      genotype = _context11.sent;\n\n                      assert.equal(web3.utils.toBN(genotype[3]).toNumber(), 8);\n\n                    case 6:\n                    case \"end\":\n                      return _context11.stop();\n                  }\n                }\n              }, _callee11, undefined);\n            })));\n\n            it(\"should revert when mixing two offsprings from the same parents\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n              var maleOffspring, femaleOffspring;\n              return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                while (1) {\n                  switch (_context12.prev = _context12.next) {\n                    case 0:\n                      _context12.next = 2;\n                      return createOffspring(2, 1, \"blue\", owner, \"M\");\n\n                    case 2:\n                      maleOffspring = _context12.sent;\n                      _context12.next = 5;\n                      return createOffspring(2, 1, \"yellow\", owner, \"F\");\n\n                    case 5:\n                      femaleOffspring = _context12.sent;\n                      _context12.next = 8;\n                      return studService.putInStud(maleOffspring, amount, 1000);\n\n                    case 8:\n                      _context12.prev = 8;\n                      _context12.next = 11;\n                      return breeding.mix(maleOffspring, femaleOffspring, web3.utils.toHex(\"colorNew\"), amount);\n\n                    case 11:\n                      assert.fail(\"Expected revert not received\");\n                      _context12.next = 17;\n                      break;\n\n                    case 14:\n                      _context12.prev = 14;\n                      _context12.t0 = _context12[\"catch\"](8);\n\n                      assert.equal(_context12.t0.reason, \"Breeding: horses are brothers\");\n\n                    case 17:\n                    case \"end\":\n                      return _context12.stop();\n                  }\n                }\n              }, _callee12, undefined, [[8, 14]]);\n            })));\n\n            it(\"should revert when mixing an offspring with a parent\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n              var femaleOffspring;\n              return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                while (1) {\n                  switch (_context13.prev = _context13.next) {\n                    case 0:\n                      _context13.next = 2;\n                      return createOffspring(2, 1, \"colorFemale\", owner, \"F\");\n\n                    case 2:\n                      femaleOffspring = _context13.sent;\n                      _context13.prev = 3;\n                      _context13.next = 6;\n                      return breeding.mix(2, femaleOffspring, web3.utils.toHex(\"colorNew\"), amount);\n\n                    case 6:\n                      assert.fail(\"Expected revert not received\");\n                      _context13.next = 12;\n                      break;\n\n                    case 9:\n                      _context13.prev = 9;\n                      _context13.t0 = _context13[\"catch\"](3);\n\n                      assert.equal(_context13.t0.reason, \"Breeding: horses are directly related\");\n\n                    case 12:\n                    case \"end\":\n                      return _context13.stop();\n                  }\n                }\n              }, _callee13, undefined, [[3, 9]]);\n            })));\n\n            it(\"should revert when first horse is not male\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n              return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                while (1) {\n                  switch (_context14.prev = _context14.next) {\n                    case 0:\n                      _context14.prev = 0;\n                      _context14.next = 3;\n                      return breeding.mix(1, 1, web3.utils.toHex(\"colorNew\"), amount);\n\n                    case 3:\n                      assert.fail(\"Expected revert not received\");\n                      _context14.next = 9;\n                      break;\n\n                    case 6:\n                      _context14.prev = 6;\n                      _context14.t0 = _context14[\"catch\"](0);\n\n                      assert.equal(_context14.t0.reason, \"Breeding: expected male horse but received female\");\n\n                    case 9:\n                    case \"end\":\n                      return _context14.stop();\n                  }\n                }\n              }, _callee14, undefined, [[0, 6]]);\n            })));\n\n            it(\"should revert when the second parameter isn't a female horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n              return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                while (1) {\n                  switch (_context15.prev = _context15.next) {\n                    case 0:\n                      _context15.next = 2;\n                      return core.mintCustomHorse(acc[2], 4, web3.utils.toHex(\"Male\"), web3.utils.toHex(\"Trung2\"), web3.utils.toHex(\"blue\"));\n\n                    case 2:\n                      _context15.prev = 2;\n                      _context15.next = 5;\n                      return breeding.mix(2, 3, web3.utils.toHex(\"colorNew\"), amount);\n\n                    case 5:\n                      assert.fail(\"Expected revert not received\");\n                      _context15.next = 11;\n                      break;\n\n                    case 8:\n                      _context15.prev = 8;\n                      _context15.t0 = _context15[\"catch\"](2);\n\n                      assert.equal(_context15.t0.reason, \"Breeding: expected female horse but received male\");\n\n                    case 11:\n                    case \"end\":\n                      return _context15.stop();\n                  }\n                }\n              }, _callee15, undefined, [[2, 8]]);\n            })));\n\n            it(\"should revert when mixing with ancestors\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n              var male2Id, firstOffspringMale, secondOffspringMale;\n              return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                while (1) {\n                  switch (_context16.prev = _context16.next) {\n                    case 0:\n                      _context16.next = 2;\n                      return core.mintCustomHorse(owner, 4, web3.utils.toHex(\"Female\"), web3.utils.toHex(\"Truc22\"), web3.utils.toHex(\"violet\"));\n\n                    case 2:\n\n                      // Male horse 2\n                      male2Id = 4;\n                      _context16.next = 5;\n                      return core.mintCustomHorse(owner, 4, web3.utils.toHex(\"Male\"), web3.utils.toHex(\"Trung2\"), web3.utils.toHex(\"blue\"));\n\n                    case 5:\n                      _context16.next = 7;\n                      return studService.putInStud(male2Id, amount, 100);\n\n                    case 7:\n                      _context16.next = 9;\n                      return createOffspring(2, 1, \"offspring\", owner, \"M\");\n\n                    case 9:\n                      firstOffspringMale = _context16.sent;\n                      _context16.next = 12;\n                      return studService.putInStud(firstOffspringMale, amount, 100);\n\n                    case 12:\n                      _context16.next = 14;\n                      return core.mintCustomHorse(owner, 4, web3.utils.toHex(\"Female\"), web3.utils.toHex(\"Trung3\"), web3.utils.toHex(\"blue\"));\n\n                    case 14:\n                      _context16.next = 16;\n                      return createOffspring(firstOffspringMale, Number(firstOffspringMale) + 1, \"offspring\", owner, \"M\");\n\n                    case 16:\n                      secondOffspringMale = _context16.sent;\n                      _context16.next = 19;\n                      return studService.putInStud(secondOffspringMale, amount, 1);\n\n                    case 19:\n                      _context16.next = 21;\n                      return core.mintCustomHorse(owner, 4, web3.utils.toHex(\"Male\"), web3.utils.toHex(\"Trung4\"), web3.utils.toHex(\"blue\"));\n\n                    case 21:\n                      _context16.next = 23;\n                      return core.mintCustomHorse(owner, 4, web3.utils.toHex(\"Female\"), web3.utils.toHex(\"Trung5\"), web3.utils.toHex(\"blue\"));\n\n                    case 23:\n                      _context16.next = 25;\n                      return createOffspring(firstOffspringMale, Number(secondOffspringMale) + 2, \"offspring\", owner, \"M\");\n\n                    case 25:\n                      _context16.prev = 25;\n                      _context16.next = 28;\n                      return breeding.mix(secondOffspringMale, 1, web3.utils.toHex(\"color\"), amount);\n\n                    case 28:\n                      assert.fail(\"Expected revert not received\");\n                      _context16.next = 34;\n                      break;\n\n                    case 31:\n                      _context16.prev = 31;\n                      _context16.t0 = _context16[\"catch\"](25);\n\n                      assert.equal(_context16.t0.reason, \"Breeding: horse is grandchild\");\n\n                    case 34:\n                    case \"end\":\n                      return _context16.stop();\n                  }\n                }\n              }, _callee16, undefined, [[25, 31]]);\n            })));\n\n            it(\"should send part of the reserve amount to the owner of the horse when mixing\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n              var preBalance, currBalance;\n              return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                while (1) {\n                  switch (_context17.prev = _context17.next) {\n                    case 0:\n                      _context17.t0 = web3.utils;\n                      _context17.next = 3;\n                      return web3.eth.getBalance(acc[2]);\n\n                    case 3:\n                      _context17.t1 = _context17.sent;\n                      preBalance = _context17.t0.toWei.call(_context17.t0, _context17.t1);\n                      _context17.next = 7;\n                      return core.mintCustomHorse(acc[2], 4, web3.utils.toHex(\"Female\"), web3.utils.toHex(\"ThirdName\"), web3.utils.toHex(\"Black\"));\n\n                    case 7:\n                      _context17.next = 9;\n                      return breeding.mix(2, 3, web3.utils.toHex(\"colorNew\"), amount, {\n                        from: acc[2],\n                        value: priceyAmount\n                      });\n\n                    case 9:\n                      _context17.t2 = web3.utils;\n                      _context17.next = 12;\n                      return web3.eth.getBalance(acc[2]);\n\n                    case 12:\n                      _context17.t3 = _context17.sent;\n                      currBalance = _context17.t2.toWei.call(_context17.t2, _context17.t3);\n\n\n                      // Since the owner of the horse is\n                      assert.isTrue(Number(preBalance) > Number(currBalance));\n\n                    case 15:\n                    case \"end\":\n                      return _context17.stop();\n                  }\n                }\n              }, _callee17, undefined);\n            })));\n\n            it(\"should select the correct bloodline based in parents\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n              var data, cycles, i, offspringId;\n              return regeneratorRuntime.wrap(function _callee18$(_context18) {\n                while (1) {\n                  switch (_context18.prev = _context18.next) {\n                    case 0:\n                      _context18.next = 2;\n                      return breeding.mix(2, 1, web3.utils.toHex(\"colorNew\"), amount);\n\n                    case 2:\n                      _context18.next = 4;\n                      return core.getHorseData(3);\n\n                    case 4:\n                      data = _context18.sent;\n                      // Nakamoto + Nakamoto = Nakamoto\n\n                      assert.equal(web3.utils.hexToUtf8(data[4]), \"S\");\n\n                      cycles = 10;\n                      i = 3;\n\n                    case 8:\n                      if (!(i <= cycles)) {\n                        _context18.next = 14;\n                        break;\n                      }\n\n                      _context18.next = 11;\n                      return core.mintCustomHorse(acc[5], 4, web3.utils.toHex(\"Female\"), web3.utils.toHex(\"Trung\" + i), web3.utils.toHex(\"blue\"));\n\n                    case 11:\n                      i++;\n                      _context18.next = 8;\n                      break;\n\n                    case 14:\n                      _context18.next = 16;\n                      return core.nextTokenId();\n\n                    case 16:\n                      offspringId = _context18.sent;\n                      _context18.next = 19;\n                      return breeding.mix(2, cycles, web3.utils.toHex(\"colorNew\"), amount, {\n                        from: acc[5]\n                      });\n\n                    case 19:\n                      _context18.next = 21;\n                      return core.getHorseData(offspringId);\n\n                    case 21:\n                      data = _context18.sent;\n\n\n                      assert.equal(web3.utils.hexToUtf8(data[4]), \"S\");\n\n                    case 23:\n                    case \"end\":\n                      return _context18.stop();\n                  }\n                }\n              }, _callee18, undefined);\n            })));\n\n            // BreedTypes test\n            it(\"should get breed type from parents\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n              var maleId, maleIdExist, femaleId, femaleIdExist, offspringId, offspringIdExist, breedType;\n              return regeneratorRuntime.wrap(function _callee19$(_context19) {\n                while (1) {\n                  switch (_context19.prev = _context19.next) {\n                    case 0:\n                      _context19.next = 2;\n                      return core.nextTokenId();\n\n                    case 2:\n                      maleId = _context19.sent;\n                      _context19.next = 5;\n                      return core.mintCustomHorse(owner, 4, web3.utils.toHex(\"Male\"), web3.utils.toHex(\"Trung1111\"), web3.utils.toHex(\"blue\"));\n\n                    case 5:\n                      _context19.next = 7;\n                      return core.tokenExists(maleId);\n\n                    case 7:\n                      maleIdExist = _context19.sent;\n\n                      assert.equal(maleIdExist, true);\n\n                      // Female horse\n                      _context19.next = 11;\n                      return core.nextTokenId();\n\n                    case 11:\n                      femaleId = _context19.sent;\n                      _context19.next = 14;\n                      return core.mintCustomHorse(owner, 4, web3.utils.toHex(\"Female\"), web3.utils.toHex(\"Truc2222\"), web3.utils.toHex(\"violet\"));\n\n                    case 14:\n                      _context19.next = 16;\n                      return core.tokenExists(femaleId);\n\n                    case 16:\n                      femaleIdExist = _context19.sent;\n\n                      assert.equal(femaleIdExist, true);\n\n                      // Put a male horse into stud\n                      _context19.next = 20;\n                      return studService.putInStud(maleId, amount, 1);\n\n                    case 20:\n                      _context19.next = 22;\n                      return core.nextTokenId();\n\n                    case 22:\n                      offspringId = _context19.sent;\n                      _context19.next = 25;\n                      return breeding.mix(maleId, femaleId, web3.utils.toHex(\"blueviolet\"), amount);\n\n                    case 25:\n                      _context19.next = 27;\n                      return core.tokenExists(offspringId);\n\n                    case 27:\n                      offspringIdExist = _context19.sent;\n\n                      assert.equal(offspringIdExist, true);\n\n                      // Parents are Genesis so we should have a Legendary\n                      _context19.next = 31;\n                      return breedTypes.getBreedType(offspringId);\n\n                    case 31:\n                      breedType = _context19.sent;\n\n\n                      assert.equal(web3.utils.toUtf8(breedType), \"legendary\");\n\n                    case 33:\n                    case \"end\":\n                      return _context19.stop();\n                  }\n                }\n              }, _callee19, undefined);\n            })));\n\n          case 11:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _callee20, undefined);\n  })));\n\n  describe(\"migrateData\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n    return regeneratorRuntime.wrap(function _callee22$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            it(\"should migrate well\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n              var breedingData, parents, fatherId, motherId, offsprings, offspringCounter, fatherParents, motherParents, offspringBreedType, offspringId, isHorseMigrated;\n              return regeneratorRuntime.wrap(function _callee21$(_context21) {\n                while (1) {\n                  switch (_context21.prev = _context21.next) {\n                    case 0:\n                      breedingData = { 0: [\"1\", \"2\"], 1: [], 2: \"0\" };\n                      parents = breedingData[0];\n                      fatherId = parents[2];\n                      motherId = parents[12];\n                      offsprings = breedingData[1];\n                      offspringCounter = 0;\n                      fatherParents = [0, 1];\n                      motherParents = [10, 11];\n                      offspringBreedType = web3.utils.toHex(\"type\");\n                      offspringId = 14;\n                      _context21.next = 12;\n                      return breeding.grantRole(web3.utils.toHex(\"breeding_owners\"), blockchainBrain);\n\n                    case 12:\n                      _context21.next = 14;\n                      return breeding.migrateData(offspringId, parents, offsprings, offspringCounter, fatherParents, motherParents, offspringBreedType, { from: blockchainBrain });\n\n                    case 14:\n                      _context21.next = 16;\n                      return breeding.isHorseAlreadyMigrated(offspringId);\n\n                    case 16:\n                      isHorseMigrated = _context21.sent;\n\n                      assert.isTrue(isHorseMigrated);\n\n                      // Must failed if migrate again\n                      _context21.prev = 18;\n                      _context21.next = 21;\n                      return breeding.migrateData(offspringId, parents, offsprings, offspringCounter, fatherParents, motherParents, offspringBreedType, { from: blockchainBrain });\n\n                    case 21:\n\n                      assert.fail(\"Expected revert not received\");\n                      _context21.next = 27;\n                      break;\n\n                    case 24:\n                      _context21.prev = 24;\n                      _context21.t0 = _context21[\"catch\"](18);\n\n                      assert.equal(_context21.t0.reason, \"Breeding: horse has been migrated already\");\n\n                    case 27:\n                    case \"end\":\n                      return _context21.stop();\n                  }\n                }\n              }, _callee21, undefined, [[18, 24]]);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, _callee22, undefined);\n  })));\n\n  describe(\"pausable\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {\n    return regeneratorRuntime.wrap(function _callee25$(_context25) {\n      while (1) {\n        switch (_context25.prev = _context25.next) {\n          case 0:\n            it(\"can only be paused by accounts with correct role\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n              return regeneratorRuntime.wrap(function _callee23$(_context23) {\n                while (1) {\n                  switch (_context23.prev = _context23.next) {\n                    case 0:\n                      _context23.next = 2;\n                      return breeding.pause();\n\n                    case 2:\n                      _context23.next = 4;\n                      return breeding.unpause();\n\n                    case 4:\n                      _context23.prev = 4;\n                      _context23.next = 7;\n                      return breeding.pause({ from: acc[1] });\n\n                    case 7:\n                      assert.faile(\"Expected revert not received\");\n                      _context23.next = 13;\n                      break;\n\n                    case 10:\n                      _context23.prev = 10;\n                      _context23.t0 = _context23[\"catch\"](4);\n\n                      assert.equal(_context23.t0.reason, \"Breeding: unauthorized owner admin\");\n\n                    case 13:\n                    case \"end\":\n                      return _context23.stop();\n                  }\n                }\n              }, _callee23, undefined, [[4, 10]]);\n            })));\n\n            it(\"should revert if contract is paused\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {\n              return regeneratorRuntime.wrap(function _callee24$(_context24) {\n                while (1) {\n                  switch (_context24.prev = _context24.next) {\n                    case 0:\n                      _context24.next = 2;\n                      return breeding.pause();\n\n                    case 2:\n                      _context24.prev = 2;\n                      _context24.next = 5;\n                      return breeding.mix(2, 1, web3.utils.toHex(\"blueviolet\"), amount);\n\n                    case 5:\n                      assert.fail(\"Expected revert not received\");\n                      _context24.next = 11;\n                      break;\n\n                    case 8:\n                      _context24.prev = 8;\n                      _context24.t0 = _context24[\"catch\"](2);\n\n                      assert.equal(_context24.t0.reason, \"Pausable: paused\");\n\n                    case 11:\n                    case \"end\":\n                      return _context24.stop();\n                  }\n                }\n              }, _callee24, undefined, [[2, 8]]);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context25.stop();\n        }\n      }\n    }, _callee25, undefined);\n  })));\n\n  describe(\"meta txs\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28() {\n    return regeneratorRuntime.wrap(function _callee28$(_context28) {\n      while (1) {\n        switch (_context28.prev = _context28.next) {\n          case 0:\n            beforeEach(\"set web3 provider\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {\n              return regeneratorRuntime.wrap(function _callee26$(_context26) {\n                while (1) {\n                  switch (_context26.prev = _context26.next) {\n                    case 0:\n                      web3.setProvider(ganache.provider({\n                        accounts: [{\n                          balance: 10000000,\n                          secretKey: \"0x4f3edf983ac636a65a842ce7c78d9aa706d3b113bce9c46f30d7d21715b23b1d\"\n                        }, {\n                          balance: 10000000,\n                          secretKey: \"0x6cbed15c793ce57650b9877cf6fa156fbef513c4e6134f022a85b1ffdd59b2a1\"\n                        }, {\n                          balance: 10000000,\n                          secretKey: \"0x6370fd033278c143179d81c5526140625662b8daa446c22ee2d73db3707e620c\"\n                        }, {\n                          balance: 10000000,\n                          secretKey: \"0x646f1ce2fdad0e6deeeb5c7e8e5543bdde65e86029e2fd9fc169899c440a7913\"\n                        }, {\n                          balance: 10000000,\n                          secretKey: \"0xadd53f9a7e588d003326d1cbf9e4a43c061aadd9bc938c843a79e7b4fd2ad743\"\n                        }]\n                      }));\n\n                    case 1:\n                    case \"end\":\n                      return _context26.stop();\n                  }\n                }\n              }, _callee26, undefined);\n            })));\n\n            it(\"should create a horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27() {\n              var functionSignature, typedData, signedData, _ref29, r, s, v;\n\n              return regeneratorRuntime.wrap(function _callee27$(_context27) {\n                while (1) {\n                  switch (_context27.prev = _context27.next) {\n                    case 0:\n                      _context27.t0 = web3.eth.abi;\n                      _context27.next = 3;\n                      return (0, _utils.funcFromABI)(breeding.abi, \"mix\");\n\n                    case 3:\n                      _context27.t1 = _context27.sent;\n                      _context27.t2 = [2, 1, web3.utils.toHex(\"Azul\"), amount];\n                      functionSignature = _context27.t0.encodeFunctionCall.call(_context27.t0, _context27.t1, _context27.t2);\n                      _context27.t3 = assert;\n                      _context27.next = 9;\n                      return core.tokenExists(3);\n\n                    case 9:\n                      _context27.t4 = _context27.sent;\n\n                      _context27.t3.isFalse.call(_context27.t3, _context27.t4);\n\n                      _context27.t5 = _utils.getTypedData;\n                      _context27.t6 = chainId;\n                      _context27.t7 = breeding.address;\n                      _context27.next = 16;\n                      return breeding.getNonce(owner);\n\n                    case 16:\n                      _context27.t8 = _context27.sent;\n                      _context27.t9 = owner;\n                      _context27.t10 = functionSignature;\n                      _context27.t11 = {\n                        name: \"ZED Breeding\",\n                        version: \"1\",\n                        chainId: _context27.t6,\n                        verifyingContract: _context27.t7,\n                        nonce: _context27.t8,\n                        from: _context27.t9,\n                        functionSignature: _context27.t10\n                      };\n                      _context27.next = 22;\n                      return (0, _context27.t5)(_context27.t11);\n\n                    case 22:\n                      typedData = _context27.sent;\n                      _context27.next = 25;\n                      return (0, _utils.signTxData)(owner, typedData);\n\n                    case 25:\n                      signedData = _context27.sent;\n                      _context27.next = 28;\n                      return (0, _utils.getRsvFromSig)(signedData);\n\n                    case 28:\n                      _ref29 = _context27.sent;\n                      r = _ref29.r;\n                      s = _ref29.s;\n                      v = _ref29.v;\n                      _context27.next = 34;\n                      return breeding.executeMetaTransaction(owner, functionSignature, r, s, v);\n\n                    case 34:\n                      _context27.t12 = assert;\n                      _context27.next = 37;\n                      return core.tokenExists(3);\n\n                    case 37:\n                      _context27.t13 = _context27.sent;\n\n                      _context27.t12.isTrue.call(_context27.t12, _context27.t13);\n\n                      _context27.t14 = assert;\n                      _context27.next = 42;\n                      return core.nextTokenId();\n\n                    case 42:\n                      _context27.t15 = _context27.sent;\n\n                      _context27.t14.equal.call(_context27.t14, _context27.t15, 4);\n\n                    case 44:\n                    case \"end\":\n                      return _context27.stop();\n                  }\n                }\n              }, _callee27, undefined);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context28.stop();\n        }\n      }\n    }, _callee28, undefined);\n  })));\n\n  var createOffspring = function () {\n    var _ref30 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee29(male, female, color, from, wantedGender) {\n      var offspringId, sex;\n      return regeneratorRuntime.wrap(function _callee29$(_context29) {\n        while (1) {\n          switch (_context29.prev = _context29.next) {\n            case 0:\n              offspringId = void 0;\n\n            case 1:\n              if (!true) {\n                _context29.next = 14;\n                break;\n              }\n\n              _context29.next = 4;\n              return core.nextTokenId();\n\n            case 4:\n              offspringId = _context29.sent;\n              _context29.next = 7;\n              return breeding.mix(male, female, web3.utils.toHex(color), amount, {\n                from: from\n              });\n\n            case 7:\n              _context29.next = 9;\n              return breeding.getHorseSex(offspringId);\n\n            case 9:\n              sex = _context29.sent;\n\n              if (!(web3.utils.toUtf8(sex) === wantedGender)) {\n                _context29.next = 12;\n                break;\n              }\n\n              return _context29.abrupt(\"break\", 14);\n\n            case 12:\n              _context29.next = 1;\n              break;\n\n            case 14:\n              return _context29.abrupt(\"return\", offspringId);\n\n            case 15:\n            case \"end\":\n              return _context29.stop();\n          }\n        }\n      }, _callee29, undefined);\n    }));\n\n    return function createOffspring(_x, _x2, _x3, _x4, _x5) {\n      return _ref30.apply(this, arguments);\n    };\n  }();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "BreedingTest.js"
      ],
      "names": [
        "Core",
        "artifacts",
        "require",
        "HorseData",
        "Breeding",
        "BreedingProxy",
        "BreedingProxyAdmin",
        "StudService",
        "BreedTypes",
        "ERC20Test",
        "ganache",
        "contract",
        "acc",
        "maxWETH",
        "web3",
        "utils",
        "toWei",
        "core",
        "breedTypes",
        "breedingLogic",
        "breedingProxy",
        "breedingProxyAdmin",
        "breeding",
        "studService",
        "horseData",
        "erc20",
        "chainId",
        "owner",
        "poolAddress",
        "blockchainBrain",
        "amount",
        "priceyAmount",
        "beforeEach",
        "new",
        "address",
        "eth",
        "net",
        "getId",
        "at",
        "setDomainSeparator",
        "grantRole",
        "toHex",
        "mintCustomHorse",
        "initialize",
        "putInStud",
        "transfer",
        "approve",
        "from",
        "describe",
        "it",
        "hasRole",
        "isDeployer",
        "assert",
        "isTrue",
        "getProxyImplementation",
        "equal",
        "newLogic",
        "upgrade",
        "fail",
        "reason",
        "isFalse",
        "grantRoleAdmin",
        "tokenExists",
        "mix",
        "getHorseOffspringStats",
        "firstOffspringStats",
        "secondOffspringStats",
        "toBN",
        "toNumber",
        "ownerOf",
        "getBaseValue",
        "baseValue",
        "notEqual",
        "isAbove",
        "getHorseData",
        "genotype",
        "createOffspring",
        "maleOffspring",
        "femaleOffspring",
        "male2Id",
        "firstOffspringMale",
        "Number",
        "secondOffspringMale",
        "getBalance",
        "preBalance",
        "value",
        "currBalance",
        "data",
        "hexToUtf8",
        "cycles",
        "i",
        "nextTokenId",
        "offspringId",
        "maleId",
        "maleIdExist",
        "femaleId",
        "femaleIdExist",
        "offspringIdExist",
        "getBreedType",
        "breedType",
        "toUtf8",
        "breedingData",
        "parents",
        "fatherId",
        "motherId",
        "offsprings",
        "offspringCounter",
        "fatherParents",
        "motherParents",
        "offspringBreedType",
        "migrateData",
        "isHorseAlreadyMigrated",
        "isHorseMigrated",
        "pause",
        "unpause",
        "faile",
        "setProvider",
        "provider",
        "accounts",
        "balance",
        "secretKey",
        "abi",
        "functionSignature",
        "encodeFunctionCall",
        "getTypedData",
        "getNonce",
        "name",
        "version",
        "verifyingContract",
        "nonce",
        "typedData",
        "signedData",
        "r",
        "s",
        "v",
        "executeMetaTransaction",
        "male",
        "female",
        "color",
        "wantedGender",
        "getHorseSex",
        "sex"
      ],
      "mappings": "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",
      "file": "BreedingTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "sourcesContent": [
        "const Core = artifacts.require(\"Core\");\nconst HorseData = artifacts.require(\"HorseData\");\nconst Breeding = artifacts.require(\"Breeding\");\nconst BreedingProxy = artifacts.require(\"BreedingProxy\");\nconst BreedingProxyAdmin = artifacts.require(\"BreedingProxyAdmin\");\nconst StudService = artifacts.require(\"StudServiceV5\");\nconst BreedTypes = artifacts.require(\"BreedTypes\");\nconst ERC20Test = artifacts.require(\"ERC20Test\");\nconst ganache = require(\"ganache-core\");\n\nimport {\n  funcFromABI,\n  signTxData,\n  getTypedData,\n  getRsvFromSig,\n} from \"../../utils\";\n\ncontract(\"Breeding\", (acc) => {\n  const maxWETH = web3.utils.toWei(\"1000\", \"ether\");\n\n  let core,\n    breedTypes,\n    breedingLogic,\n    breedingProxy,\n    breedingProxyAdmin,\n    breeding,\n    studService,\n    horseData,\n    erc20,\n    chainId;\n\n  let owner = acc[0],\n    poolAddress = acc[1],\n    blockchainBrain = acc[2],\n    amount = web3.utils.toWei(\"0.1\", \"ether\"),\n    priceyAmount = web3.utils.toWei(\"1\", \"ether\");\n\n  beforeEach(\"deploy instances\", async () => {\n    horseData = await HorseData.new();\n    core = await Core.new(horseData.address);\n    chainId = await web3.eth.net.getId();\n\n    breedTypes = await BreedTypes.new();\n\n    studService = await StudService.new(\n      core.address,\n      horseData.address,\n      breedTypes.address\n    );\n\n    erc20 = await ERC20Test.new(web3.utils.toWei(\"100\", \"ether\"));\n\n    // Deploys Breeding Logic instance\n    breedingLogic = await Breeding.new();\n\n    // Deploys Breeding Admin to be used as admin of BreedingProxy\n    breedingProxyAdmin = await BreedingProxyAdmin.new();\n\n    // Deploys proxy instance\n    breedingProxy = await BreedingProxy.new(\n      breedingLogic.address,\n      breedingProxyAdmin.address\n    );\n\n    breeding = await Breeding.at(breedingProxy.address);\n  });\n\n  beforeEach(\"setup initial state of instances\", async () => {\n    await breeding.setDomainSeparator(\"ZED Breeding\", \"1\", chainId);\n\n    await studService.grantRole(web3.utils.toHex(\"stud_owners\"), owner);\n\n    await core.grantRole(web3.utils.toHex(\"core_contracts\"), owner);\n\n    // We cannot interact with ID 0\n    await core.mintCustomHorse(\n      owner,\n      4,\n      web3.utils.toHex(\"Male\"),\n      web3.utils.toHex(\"FirstName\"),\n      web3.utils.toHex(\"Black\")\n    );\n\n    await breedTypes.grantRole(web3.utils.toHex(\"breed_types_owners\"), owner);\n\n    await breeding.initialize(\n      core.address,\n      studService.address,\n      breedTypes.address,\n      erc20.address,\n      poolAddress\n    );\n\n    await breedTypes.grantRole(\n      web3.utils.toHex(\"breed_types_owners\"),\n      breeding.address\n    );\n\n    // Core need to grant CORE_CONTRACTS_ROLE for Breeding to able to invoke method Core.mintOffspring\n    await core.grantRole(web3.utils.toHex(\"core_contracts\"), breeding.address);\n    await core.grantRole(web3.utils.toHex(\"core_owners\"), breeding.address);\n\n    await core.mintCustomHorse(\n      owner,\n      4,\n      web3.utils.toHex(\"Female\"),\n      web3.utils.toHex(\"Truc\"),\n      web3.utils.toHex(\"violet\")\n    );\n\n    await core.mintCustomHorse(\n      acc[2],\n      4,\n      web3.utils.toHex(\"Male\"),\n      web3.utils.toHex(\"Trung\"),\n      web3.utils.toHex(\"blue\")\n    );\n\n    await studService.putInStud(2, amount, 100);\n\n    await erc20.transfer(acc[2], amount);\n    await erc20.approve(breeding.address, maxWETH, {\n      from: acc[2],\n    });\n    await erc20.approve(breeding.address, maxWETH);\n\n    // Female ID 1 and Male ID 2\n  });\n\n  describe(\"initial proxy validation\", async () => {\n    it(\"should make deployer of contract admin of breeding owners\", async () => {\n      const isDeployer = await breeding.hasRole(\n        web3.utils.toHex(\"breeding_owners_admin\"),\n        owner\n      );\n\n      assert.isTrue(isDeployer);\n    });\n\n    it(\"should set upgrade admin correctly\", async () => {\n      // only admin can call this function so if it goes through it's ok\n      await breedingProxyAdmin.getProxyImplementation(breedingProxy.address);\n    });\n\n    it(\"should upgrade to new implementation\", async () => {\n      assert.equal(\n        await breedingProxyAdmin.getProxyImplementation(breedingProxy.address),\n        breedingLogic.address\n      );\n\n      const newLogic = await Breeding.new();\n      await breedingProxyAdmin.upgrade(breedingProxy.address, newLogic.address);\n\n      assert.equal(\n        await breedingProxyAdmin.getProxyImplementation(breedingProxy.address),\n        newLogic.address\n      );\n    });\n\n    it(\"should revert when calling initialize() after upgrading\", async () => {\n      const newLogic = await Breeding.new();\n      await breedingProxyAdmin.upgrade(breedingProxy.address, newLogic.address);\n\n      try {\n        await breeding.initialize(\n          core.address,\n          studService.address,\n          breedTypes.address,\n          erc20.address,\n          poolAddress\n        );\n\n        assert.fail(\"Expected revert not received\");\n      } catch (err) {\n        assert.equal(\n          err.reason,\n          \"Initializable: contract is already initialized\"\n        );\n      }\n    });\n\n    it(\"should hold state after upgrading\", async () => {\n      assert.isFalse(\n        await breeding.hasRole(\n          web3.utils.toHex(\"breeding_owners_admin\"),\n          blockchainBrain\n        )\n      );\n\n      await breeding.grantRoleAdmin(\n        web3.utils.toHex(\"breeding_owners_admin\"),\n        blockchainBrain\n      );\n\n      assert.isTrue(\n        await breeding.hasRole(\n          web3.utils.toHex(\"breeding_owners_admin\"),\n          blockchainBrain\n        )\n      );\n\n      const newLogic = await Breeding.new();\n      await breedingProxyAdmin.upgrade(breedingProxy.address, newLogic.address);\n\n      assert.isTrue(\n        await breeding.hasRole(\n          web3.utils.toHex(\"breeding_owners_admin\"),\n          blockchainBrain\n        )\n      );\n    });\n  });\n\n  describe(\"mix\", async () => {\n    it(\"should mix two horses\", async () => {\n      assert.isFalse(await core.tokenExists(3));\n\n      await breeding.mix(2, 1, web3.utils.toHex(\"blueviolet\"), amount);\n\n      assert.isTrue(await core.tokenExists(3));\n\n      let firstOffspringStats = await breeding.getHorseOffspringStats(1);\n      let secondOffspringStats = await breeding.getHorseOffspringStats(2);\n\n      assert.equal(web3.utils.toBN(firstOffspringStats).toNumber(), 1);\n      assert.equal(web3.utils.toBN(secondOffspringStats).toNumber(), 1);\n\n      // Ensure the owner is the owner of the female horse\n      assert.equal(await core.ownerOf(3), owner);\n    });\n\n    it(\"should create a base value for the offspring\", async () => {\n      await breeding.mix(2, 1, web3.utils.toHex(\"blueviolet\"), amount);\n\n      let baseValue = await core.getBaseValue(3);\n      assert.notEqual(web3.utils.toBN(baseValue).toNumber(), 0);\n\n      // The parents of the third horse are horses from the first Gen, they have high base value\n      // so offspring's base value should be at least 40.\n      // This is a bit tricky because those numbers are random so we need to make assumptions about the base value.\n      assert.isAbove(web3.utils.toBN(baseValue).toNumber(), 39);\n    });\n\n    it(\"should return the correct genotype for a given horse\", async () => {\n      await breeding.mix(2, 1, web3.utils.toHex(\"blueviolet\"), amount);\n\n      let genotype = await core.getHorseData(3);\n      assert.equal(web3.utils.toBN(genotype[3]).toNumber(), 8);\n    });\n\n    it(\"should revert when mixing two offsprings from the same parents\", async () => {\n      let maleOffspring = await createOffspring(2, 1, \"blue\", owner, \"M\");\n\n      let femaleOffspring = await createOffspring(2, 1, \"yellow\", owner, \"F\");\n\n      await studService.putInStud(maleOffspring, amount, 1000);\n\n      try {\n        await breeding.mix(\n          maleOffspring,\n          femaleOffspring,\n          web3.utils.toHex(\"colorNew\"),\n          amount\n        );\n        assert.fail(\"Expected revert not received\");\n      } catch (err) {\n        assert.equal(err.reason, \"Breeding: horses are brothers\");\n      }\n    });\n\n    it(\"should revert when mixing an offspring with a parent\", async () => {\n      let femaleOffspring = await createOffspring(\n        2,\n        1,\n        \"colorFemale\",\n        owner,\n        \"F\"\n      );\n\n      try {\n        await breeding.mix(\n          2,\n          femaleOffspring,\n          web3.utils.toHex(\"colorNew\"),\n          amount\n        );\n        assert.fail(\"Expected revert not received\");\n      } catch (err) {\n        assert.equal(err.reason, \"Breeding: horses are directly related\");\n      }\n    });\n\n    it(\"should revert when first horse is not male\", async () => {\n      // Mixing the two horses from the same parents (5 and 6)\n      try {\n        await breeding.mix(1, 1, web3.utils.toHex(\"colorNew\"), amount);\n        assert.fail(\"Expected revert not received\");\n      } catch (err) {\n        assert.equal(\n          err.reason,\n          \"Breeding: expected male horse but received female\"\n        );\n      }\n    });\n\n    it(\"should revert when the second parameter isn't a female horse\", async () => {\n      await core.mintCustomHorse(\n        acc[2],\n        4,\n        web3.utils.toHex(\"Male\"),\n        web3.utils.toHex(\"Trung2\"),\n        web3.utils.toHex(\"blue\")\n      );\n\n      // Mixing the two horses from the same parents (5 and 6)\n      try {\n        await breeding.mix(2, 3, web3.utils.toHex(\"colorNew\"), amount);\n        assert.fail(\"Expected revert not received\");\n      } catch (err) {\n        assert.equal(\n          err.reason,\n          \"Breeding: expected female horse but received male\"\n        );\n      }\n    });\n\n    it(\"should revert when mixing with ancestors\", async () => {\n      // Ancestors have a limit until grandparents, that would be two ancestors lines.\n      // We'll go for Paternal grandparents\n      // We'll use new horses for this.\n\n      /*\n             G     -      G\n          |F - M   -   F - M|\n            ||     -    ||\n          S -- S   -  S -- S\n\n          Family tree... sort of, we want to reach S and mate one of S with a G\n      */\n\n      // * Grandparents are the ones we created in the setup (ID 1 and 2)\n\n      // Female horse 2\n      await core.mintCustomHorse(\n        owner,\n        4,\n        web3.utils.toHex(\"Female\"),\n        web3.utils.toHex(\"Truc22\"),\n        web3.utils.toHex(\"violet\")\n      );\n\n      // Male horse 2\n      const male2Id = 4;\n      await core.mintCustomHorse(\n        owner,\n        4,\n        web3.utils.toHex(\"Male\"),\n        web3.utils.toHex(\"Trung2\"),\n        web3.utils.toHex(\"blue\")\n      );\n\n      await studService.putInStud(male2Id, amount, 100);\n\n      let firstOffspringMale = await createOffspring(\n        2,\n        1,\n        \"offspring\",\n        owner,\n        \"M\"\n      );\n\n      await studService.putInStud(firstOffspringMale, amount, 100);\n\n      await core.mintCustomHorse(\n        owner,\n        4,\n        web3.utils.toHex(\"Female\"),\n        web3.utils.toHex(\"Trung3\"),\n        web3.utils.toHex(\"blue\")\n      ); // firstOffspringMale + 1\n\n      // parents firstOffspringMale, firstOffspringMale + 1 / grandparents 2, 1.\n      let secondOffspringMale = await createOffspring(\n        firstOffspringMale,\n        Number(firstOffspringMale) + 1,\n        \"offspring\",\n        owner,\n        \"M\"\n      );\n\n      await studService.putInStud(secondOffspringMale, amount, 1);\n\n      await core.mintCustomHorse(\n        owner,\n        4,\n        web3.utils.toHex(\"Male\"),\n        web3.utils.toHex(\"Trung4\"),\n        web3.utils.toHex(\"blue\")\n      ); // secondOffspringMale + 1\n\n      await core.mintCustomHorse(\n        owner,\n        4,\n        web3.utils.toHex(\"Female\"),\n        web3.utils.toHex(\"Trung5\"),\n        web3.utils.toHex(\"blue\")\n      ); // secondOffspringMale + 2\n\n      // parents firstOffspringMale, secondOffspringMale - grandparents 2, 1.\n      await createOffspring(\n        firstOffspringMale,\n        Number(secondOffspringMale) + 2,\n        \"offspring\",\n        owner,\n        \"M\"\n      );\n\n      // Trying to mate 12 with 9 should revert.\n      try {\n        await breeding.mix(\n          secondOffspringMale,\n          1,\n          web3.utils.toHex(\"color\"),\n          amount\n        );\n        assert.fail(\"Expected revert not received\");\n      } catch (err) {\n        assert.equal(err.reason, \"Breeding: horse is grandchild\");\n      }\n    });\n\n    it(\"should send part of the reserve amount to the owner of the horse when mixing\", async () => {\n      let preBalance = web3.utils.toWei(await web3.eth.getBalance(acc[2]));\n\n      await core.mintCustomHorse(\n        acc[2],\n        4,\n        web3.utils.toHex(\"Female\"),\n        web3.utils.toHex(\"ThirdName\"),\n        web3.utils.toHex(\"Black\")\n      );\n\n      await breeding.mix(2, 3, web3.utils.toHex(\"colorNew\"), amount, {\n        from: acc[2],\n        value: priceyAmount,\n      });\n\n      let currBalance = web3.utils.toWei(await web3.eth.getBalance(acc[2]));\n\n      // Since the owner of the horse is\n      assert.isTrue(Number(preBalance) > Number(currBalance));\n    });\n\n    it(\"should select the correct bloodline based in parents\", async () => {\n      await breeding.mix(2, 1, web3.utils.toHex(\"colorNew\"), amount);\n\n      let data = await core.getHorseData(3); // Nakamoto + Nakamoto = Nakamoto\n\n      assert.equal(web3.utils.hexToUtf8(data[4]), \"S\");\n\n      const cycles = 10;\n      for (let i = 3; i <= cycles; i++) {\n        await core.mintCustomHorse(\n          acc[5],\n          4,\n          web3.utils.toHex(\"Female\"),\n          web3.utils.toHex(`Trung${i}`),\n          web3.utils.toHex(\"blue\")\n        );\n      }\n\n      const offspringId = await core.nextTokenId();\n      await breeding.mix(2, cycles, web3.utils.toHex(\"colorNew\"), amount, {\n        from: acc[5],\n      });\n\n      data = await core.getHorseData(offspringId);\n\n      assert.equal(web3.utils.hexToUtf8(data[4]), \"S\");\n    });\n\n    // BreedTypes test\n    it(\"should get breed type from parents\", async () => {\n      // Male horse\n      const maleId = await core.nextTokenId();\n      await core.mintCustomHorse(\n        owner,\n        4,\n        web3.utils.toHex(\"Male\"),\n        web3.utils.toHex(\"Trung1111\"),\n        web3.utils.toHex(\"blue\")\n      );\n      const maleIdExist = await core.tokenExists(maleId);\n      assert.equal(maleIdExist, true);\n\n      // Female horse\n      const femaleId = await core.nextTokenId();\n      await core.mintCustomHorse(\n        owner,\n        4,\n        web3.utils.toHex(\"Female\"),\n        web3.utils.toHex(\"Truc2222\"),\n        web3.utils.toHex(\"violet\")\n      );\n      const femaleIdExist = await core.tokenExists(femaleId);\n      assert.equal(femaleIdExist, true);\n\n      // Put a male horse into stud\n      await studService.putInStud(maleId, amount, 1);\n\n      const offspringId = await core.nextTokenId();\n      await breeding.mix(\n        maleId,\n        femaleId,\n        web3.utils.toHex(\"blueviolet\"),\n        amount\n      );\n\n      const offspringIdExist = await core.tokenExists(offspringId);\n      assert.equal(offspringIdExist, true);\n\n      // Parents are Genesis so we should have a Legendary\n      let breedType = await breedTypes.getBreedType(offspringId);\n\n      assert.equal(web3.utils.toUtf8(breedType), \"legendary\");\n    });\n  });\n\n  describe(\"migrateData\", async () => {\n    it(\"should migrate well\", async () => {\n      const breedingData = { 0: [\"1\", \"2\"], 1: [], 2: \"0\" };\n      const parents = breedingData[0];\n      const fatherId = parents[2];\n      const motherId = parents[12];\n\n      const offsprings = breedingData[1];\n      const offspringCounter = 0;\n\n      const fatherParents = [0, 1];\n      const motherParents = [10, 11];\n\n      const offspringBreedType = web3.utils.toHex(\"type\");\n      const offspringId = 14;\n\n      await breeding.grantRole(\n        web3.utils.toHex(\"breeding_owners\"),\n        blockchainBrain\n      );\n\n      await breeding.migrateData(\n        offspringId,\n        parents,\n        offsprings,\n        offspringCounter,\n        fatherParents,\n        motherParents,\n        offspringBreedType,\n        { from: blockchainBrain }\n      );\n\n      let isHorseMigrated = await breeding.isHorseAlreadyMigrated(offspringId);\n      assert.isTrue(isHorseMigrated);\n\n      // Must failed if migrate again\n      try {\n        await breeding.migrateData(\n          offspringId,\n          parents,\n          offsprings,\n          offspringCounter,\n          fatherParents,\n          motherParents,\n          offspringBreedType,\n          { from: blockchainBrain }\n        );\n\n        assert.fail(\"Expected revert not received\");\n      } catch (err) {\n        assert.equal(err.reason, \"Breeding: horse has been migrated already\");\n      }\n    });\n  });\n\n  describe(\"pausable\", async () => {\n    it(\"can only be paused by accounts with correct role\", async () => {\n      await breeding.pause();\n      await breeding.unpause();\n\n      try {\n        await breeding.pause({ from: acc[1] });\n        assert.faile(\"Expected revert not received\");\n      } catch (err) {\n        assert.equal(err.reason, \"Breeding: unauthorized owner admin\");\n      }\n    });\n\n    it(\"should revert if contract is paused\", async () => {\n      await breeding.pause();\n\n      try {\n        await breeding.mix(2, 1, web3.utils.toHex(\"blueviolet\"), amount);\n        assert.fail(\"Expected revert not received\");\n      } catch (err) {\n        assert.equal(err.reason, \"Pausable: paused\");\n      }\n    });\n  });\n\n  describe(\"meta txs\", async () => {\n    beforeEach(\"set web3 provider\", async () => {\n      web3.setProvider(\n        ganache.provider({\n          accounts: [\n            {\n              balance: 10000000,\n              secretKey:\n                \"0x4f3edf983ac636a65a842ce7c78d9aa706d3b113bce9c46f30d7d21715b23b1d\",\n            },\n            {\n              balance: 10000000,\n              secretKey:\n                \"0x6cbed15c793ce57650b9877cf6fa156fbef513c4e6134f022a85b1ffdd59b2a1\",\n            },\n            {\n              balance: 10000000,\n              secretKey:\n                \"0x6370fd033278c143179d81c5526140625662b8daa446c22ee2d73db3707e620c\",\n            },\n            {\n              balance: 10000000,\n              secretKey:\n                \"0x646f1ce2fdad0e6deeeb5c7e8e5543bdde65e86029e2fd9fc169899c440a7913\",\n            },\n            {\n              balance: 10000000,\n              secretKey:\n                \"0xadd53f9a7e588d003326d1cbf9e4a43c061aadd9bc938c843a79e7b4fd2ad743\",\n            },\n          ],\n        })\n      );\n    });\n\n    it(\"should create a horse\", async () => {\n      let functionSignature = web3.eth.abi.encodeFunctionCall(\n        await funcFromABI(breeding.abi, \"mix\"),\n        [2, 1, web3.utils.toHex(\"Azul\"), amount]\n      );\n\n      assert.isFalse(await core.tokenExists(3));\n\n      let typedData = await getTypedData({\n        name: \"ZED Breeding\",\n        version: \"1\",\n        chainId: chainId,\n        verifyingContract: breeding.address,\n        nonce: await breeding.getNonce(owner),\n        from: owner,\n        functionSignature: functionSignature,\n      });\n\n      let signedData = await signTxData(owner, typedData);\n\n      let { r, s, v } = await getRsvFromSig(signedData);\n\n      await breeding.executeMetaTransaction(owner, functionSignature, r, s, v);\n\n      assert.isTrue(await core.tokenExists(3));\n      assert.equal(await core.nextTokenId(), 4);\n    });\n  });\n\n  let createOffspring = async (male, female, color, from, wantedGender) => {\n    let offspringId;\n\n    while (true) {\n      offspringId = await core.nextTokenId();\n      await breeding.mix(male, female, web3.utils.toHex(color), amount, {\n        from: from,\n      });\n\n      let sex = await breeding.getHorseSex(offspringId);\n\n      if (web3.utils.toUtf8(sex) === wantedGender) {\n        break;\n      }\n    }\n\n    return offspringId;\n  };\n});\n"
      ]
    },
    "mtime": 1616461330036
  },
  "{\"filename\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/utils.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "chainId",
            "getTypedData",
            "getRsvFromSig",
            "increaseTimeBySeconds",
            "mineBlock"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "chainId",
              "exported": "chainId"
            },
            {
              "kind": "local",
              "local": "getTypedData",
              "exported": "getTypedData"
            },
            {
              "kind": "local",
              "local": "getRsvFromSig",
              "exported": "getRsvFromSig"
            },
            {
              "kind": "local",
              "local": "increaseTimeBySeconds",
              "exported": "increaseTimeBySeconds"
            },
            {
              "kind": "local",
              "local": "mineBlock",
              "exported": "mineBlock"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Development/zed/cryptofield-core/test/utils.js",
      "filenameRelative": "/Users/migueldiaz/Development/zed/cryptofield-core/test/utils.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "utils.js",
      "sourceFileName": "utils.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "utils"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar chainId = exports.chainId = 31337;\n\nvar getTypedData = exports.getTypedData = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(data) {\n    var name, version, chainId, verifyingContract, nonce, from, functionSignature;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            name = data.name, version = data.version, chainId = data.chainId, verifyingContract = data.verifyingContract, nonce = data.nonce, from = data.from, functionSignature = data.functionSignature;\n            return _context.abrupt(\"return\", {\n              types: {\n                MetaTransaction: [{\n                  name: \"nonce\",\n                  type: \"uint256\"\n                }, {\n                  name: \"from\",\n                  type: \"address\"\n                }, {\n                  name: \"functionSignature\",\n                  type: \"bytes\"\n                }]\n              },\n              domain: {\n                name: name,\n                version: version,\n                verifyingContract: verifyingContract,\n                salt: \"0x\" + chainId.toString(16).padStart(64, \"0\")\n              },\n              primaryType: \"MetaTransaction\",\n              message: {\n                nonce: parseInt(nonce),\n                from: from,\n                functionSignature: functionSignature\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function getTypedData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getRsvFromSig = exports.getRsvFromSig = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(sig) {\n    var signature, r, s, v;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            signature = sig.substring(2);\n            r = \"0x\" + signature.substring(0, 64);\n            s = \"0x\" + signature.substring(64, 128);\n            v = parseInt(signature.substring(128, 130), 16);\n            return _context2.abrupt(\"return\", { r: r, s: s, v: v });\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  }));\n\n  return function getRsvFromSig(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar increaseTimeBySeconds = exports.increaseTimeBySeconds = function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var seconds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3024000;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return ethers.provider.send(\"evm_increaseTime\", [seconds]);\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  }));\n\n  return function increaseTimeBySeconds() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar mineBlock = exports.mineBlock = function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return ethers.provider.send(\"evm_mine\");\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined);\n  }));\n\n  return function mineBlock() {\n    return _ref4.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImNoYWluSWQiLCJnZXRUeXBlZERhdGEiLCJkYXRhIiwibmFtZSIsInZlcnNpb24iLCJ2ZXJpZnlpbmdDb250cmFjdCIsIm5vbmNlIiwiZnJvbSIsImZ1bmN0aW9uU2lnbmF0dXJlIiwidHlwZXMiLCJNZXRhVHJhbnNhY3Rpb24iLCJ0eXBlIiwiZG9tYWluIiwic2FsdCIsInRvU3RyaW5nIiwicGFkU3RhcnQiLCJwcmltYXJ5VHlwZSIsIm1lc3NhZ2UiLCJwYXJzZUludCIsImdldFJzdkZyb21TaWciLCJzaWciLCJzaWduYXR1cmUiLCJzdWJzdHJpbmciLCJyIiwicyIsInYiLCJpbmNyZWFzZVRpbWVCeVNlY29uZHMiLCJzZWNvbmRzIiwiZXRoZXJzIiwicHJvdmlkZXIiLCJzZW5kIiwibWluZUJsb2NrIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPLElBQU1BLDRCQUFVLEtBQWhCOztBQUVBLElBQU1DO0FBQUEscUVBQWUsaUJBQU9DLElBQVA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRXhCQyxnQkFGd0IsR0FTdEJELElBVHNCLENBRXhCQyxJQUZ3QixFQUd4QkMsT0FId0IsR0FTdEJGLElBVHNCLENBR3hCRSxPQUh3QixFQUl4QkosT0FKd0IsR0FTdEJFLElBVHNCLENBSXhCRixPQUp3QixFQUt4QkssaUJBTHdCLEdBU3RCSCxJQVRzQixDQUt4QkcsaUJBTHdCLEVBTXhCQyxLQU53QixHQVN0QkosSUFUc0IsQ0FNeEJJLEtBTndCLEVBT3hCQyxJQVB3QixHQVN0QkwsSUFUc0IsQ0FPeEJLLElBUHdCLEVBUXhCQyxpQkFSd0IsR0FTdEJOLElBVHNCLENBUXhCTSxpQkFSd0I7QUFBQSw2Q0FXbkI7QUFDTEMscUJBQU87QUFDTEMsaUNBQWlCLENBQ2Y7QUFDRVAsd0JBQU0sT0FEUjtBQUVFUSx3QkFBTTtBQUZSLGlCQURlLEVBS2Y7QUFDRVIsd0JBQU0sTUFEUjtBQUVFUSx3QkFBTTtBQUZSLGlCQUxlLEVBU2Y7QUFDRVIsd0JBQU0sbUJBRFI7QUFFRVEsd0JBQU07QUFGUixpQkFUZTtBQURaLGVBREY7QUFpQkxDLHNCQUFRO0FBQ05ULDBCQURNO0FBRU5DLGdDQUZNO0FBR05DLG9EQUhNO0FBSU5RLHNCQUFNLE9BQU9iLFFBQVFjLFFBQVIsQ0FBaUIsRUFBakIsRUFBcUJDLFFBQXJCLENBQThCLEVBQTlCLEVBQWtDLEdBQWxDO0FBSlAsZUFqQkg7QUF1QkxDLDJCQUFhLGlCQXZCUjtBQXdCTEMsdUJBQVM7QUFDUFgsdUJBQU9ZLFNBQVNaLEtBQVQsQ0FEQTtBQUVQQywwQkFGTztBQUdQQztBQUhPO0FBeEJKLGFBWG1COztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWY7O0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBTjs7QUEyQ0EsSUFBTVc7QUFBQSxzRUFBZ0Isa0JBQU9DLEdBQVA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ3JCQyxxQkFEcUIsR0FDVEQsSUFBSUUsU0FBSixDQUFjLENBQWQsQ0FEUztBQUVyQkMsYUFGcUIsR0FFakIsT0FBT0YsVUFBVUMsU0FBVixDQUFvQixDQUFwQixFQUF1QixFQUF2QixDQUZVO0FBR3JCRSxhQUhxQixHQUdqQixPQUFPSCxVQUFVQyxTQUFWLENBQW9CLEVBQXBCLEVBQXdCLEdBQXhCLENBSFU7QUFJckJHLGFBSnFCLEdBSWpCUCxTQUFTRyxVQUFVQyxTQUFWLENBQW9CLEdBQXBCLEVBQXlCLEdBQXpCLENBQVQsRUFBd0MsRUFBeEMsQ0FKaUI7QUFBQSw4Q0FNcEIsRUFBRUMsSUFBRixFQUFLQyxJQUFMLEVBQVFDLElBQVIsRUFOb0I7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBaEI7O0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBTjs7QUFTQSxJQUFNQztBQUFBLHNFQUF3QjtBQUFBLFFBQU9DLE9BQVAsdUVBQWlCLE9BQWpCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUM3QkMsT0FBT0MsUUFBUCxDQUFnQkMsSUFBaEIsQ0FBcUIsa0JBQXJCLEVBQXlDLENBQUNILE9BQUQsQ0FBekMsQ0FENkI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBeEI7O0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBTjs7QUFJQSxJQUFNSTtBQUFBLHNFQUFZO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNqQkgsT0FBT0MsUUFBUCxDQUFnQkMsSUFBaEIsQ0FBcUIsVUFBckIsQ0FEaUI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBWjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFOIiwiZmlsZSI6InV0aWxzLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9taWd1ZWxkaWF6L0RldmVsb3BtZW50L3plZC9jcnlwdG9maWVsZC1jb3JlL3Rlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgY2hhaW5JZCA9IDMxMzM3O1xuXG5leHBvcnQgY29uc3QgZ2V0VHlwZWREYXRhID0gYXN5bmMgKGRhdGEpID0+IHtcbiAgY29uc3Qge1xuICAgIG5hbWUsXG4gICAgdmVyc2lvbixcbiAgICBjaGFpbklkLFxuICAgIHZlcmlmeWluZ0NvbnRyYWN0LFxuICAgIG5vbmNlLFxuICAgIGZyb20sXG4gICAgZnVuY3Rpb25TaWduYXR1cmUsXG4gIH0gPSBkYXRhO1xuXG4gIHJldHVybiB7XG4gICAgdHlwZXM6IHtcbiAgICAgIE1ldGFUcmFuc2FjdGlvbjogW1xuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJub25jZVwiLFxuICAgICAgICAgIHR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJmcm9tXCIsXG4gICAgICAgICAgdHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBcImZ1bmN0aW9uU2lnbmF0dXJlXCIsXG4gICAgICAgICAgdHlwZTogXCJieXRlc1wiLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9LFxuICAgIGRvbWFpbjoge1xuICAgICAgbmFtZSxcbiAgICAgIHZlcnNpb24sXG4gICAgICB2ZXJpZnlpbmdDb250cmFjdCxcbiAgICAgIHNhbHQ6IFwiMHhcIiArIGNoYWluSWQudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDY0LCBcIjBcIiksXG4gICAgfSxcbiAgICBwcmltYXJ5VHlwZTogXCJNZXRhVHJhbnNhY3Rpb25cIixcbiAgICBtZXNzYWdlOiB7XG4gICAgICBub25jZTogcGFyc2VJbnQobm9uY2UpLFxuICAgICAgZnJvbSxcbiAgICAgIGZ1bmN0aW9uU2lnbmF0dXJlLFxuICAgIH0sXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UnN2RnJvbVNpZyA9IGFzeW5jIChzaWcpID0+IHtcbiAgY29uc3Qgc2lnbmF0dXJlID0gc2lnLnN1YnN0cmluZygyKTtcbiAgY29uc3QgciA9IFwiMHhcIiArIHNpZ25hdHVyZS5zdWJzdHJpbmcoMCwgNjQpO1xuICBjb25zdCBzID0gXCIweFwiICsgc2lnbmF0dXJlLnN1YnN0cmluZyg2NCwgMTI4KTtcbiAgY29uc3QgdiA9IHBhcnNlSW50KHNpZ25hdHVyZS5zdWJzdHJpbmcoMTI4LCAxMzApLCAxNik7XG5cbiAgcmV0dXJuIHsgciwgcywgdiB9O1xufTtcblxuZXhwb3J0IGNvbnN0IGluY3JlYXNlVGltZUJ5U2Vjb25kcyA9IGFzeW5jIChzZWNvbmRzID0gMzAyNDAwMCkgPT4ge1xuICBhd2FpdCBldGhlcnMucHJvdmlkZXIuc2VuZChcImV2bV9pbmNyZWFzZVRpbWVcIiwgW3NlY29uZHNdKTtcbn07XG5cbmV4cG9ydCBjb25zdCBtaW5lQmxvY2sgPSBhc3luYyAoKSA9PiB7XG4gIGF3YWl0IGV0aGVycy5wcm92aWRlci5zZW5kKFwiZXZtX21pbmVcIik7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "chainId",
        "getTypedData",
        "data",
        "name",
        "version",
        "verifyingContract",
        "nonce",
        "from",
        "functionSignature",
        "types",
        "MetaTransaction",
        "type",
        "domain",
        "salt",
        "toString",
        "padStart",
        "primaryType",
        "message",
        "parseInt",
        "getRsvFromSig",
        "sig",
        "signature",
        "substring",
        "r",
        "s",
        "v",
        "increaseTimeBySeconds",
        "seconds",
        "ethers",
        "provider",
        "send",
        "mineBlock"
      ],
      "mappings": ";;;;;;;;AAAO,IAAMA,4BAAU,KAAhB;;AAEA,IAAMC;AAAA,qEAAe,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAExBC,gBAFwB,GAStBD,IATsB,CAExBC,IAFwB,EAGxBC,OAHwB,GAStBF,IATsB,CAGxBE,OAHwB,EAIxBJ,OAJwB,GAStBE,IATsB,CAIxBF,OAJwB,EAKxBK,iBALwB,GAStBH,IATsB,CAKxBG,iBALwB,EAMxBC,KANwB,GAStBJ,IATsB,CAMxBI,KANwB,EAOxBC,IAPwB,GAStBL,IATsB,CAOxBK,IAPwB,EAQxBC,iBARwB,GAStBN,IATsB,CAQxBM,iBARwB;AAAA,6CAWnB;AACLC,qBAAO;AACLC,iCAAiB,CACf;AACEP,wBAAM,OADR;AAEEQ,wBAAM;AAFR,iBADe,EAKf;AACER,wBAAM,MADR;AAEEQ,wBAAM;AAFR,iBALe,EASf;AACER,wBAAM,mBADR;AAEEQ,wBAAM;AAFR,iBATe;AADZ,eADF;AAiBLC,sBAAQ;AACNT,0BADM;AAENC,gCAFM;AAGNC,oDAHM;AAINQ,sBAAM,OAAOb,QAAQc,QAAR,CAAiB,EAAjB,EAAqBC,QAArB,CAA8B,EAA9B,EAAkC,GAAlC;AAJP,eAjBH;AAuBLC,2BAAa,iBAvBR;AAwBLC,uBAAS;AACPX,uBAAOY,SAASZ,KAAT,CADA;AAEPC,0BAFO;AAGPC;AAHO;AAxBJ,aAXmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA,GAAN;;AA2CA,IAAMW;AAAA,sEAAgB,kBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,qBADqB,GACTD,IAAIE,SAAJ,CAAc,CAAd,CADS;AAErBC,aAFqB,GAEjB,OAAOF,UAAUC,SAAV,CAAoB,CAApB,EAAuB,EAAvB,CAFU;AAGrBE,aAHqB,GAGjB,OAAOH,UAAUC,SAAV,CAAoB,EAApB,EAAwB,GAAxB,CAHU;AAIrBG,aAJqB,GAIjBP,SAASG,UAAUC,SAAV,CAAoB,GAApB,EAAyB,GAAzB,CAAT,EAAwC,EAAxC,CAJiB;AAAA,8CAMpB,EAAEC,IAAF,EAAKC,IAAL,EAAQC,IAAR,EANoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AASA,IAAMC;AAAA,sEAAwB;AAAA,QAAOC,OAAP,uEAAiB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC7BC,OAAOC,QAAP,CAAgBC,IAAhB,CAAqB,kBAArB,EAAyC,CAACH,OAAD,CAAzC,CAD6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAIA,IAAMI;AAAA,sEAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACjBH,OAAOC,QAAP,CAAgBC,IAAhB,CAAqB,UAArB,CADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ;;AAAA;AAAA;AAAA;AAAA,GAAN",
      "file": "utils.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test",
      "sourcesContent": [
        "export const chainId = 31337;\n\nexport const getTypedData = async (data) => {\n  const {\n    name,\n    version,\n    chainId,\n    verifyingContract,\n    nonce,\n    from,\n    functionSignature,\n  } = data;\n\n  return {\n    types: {\n      MetaTransaction: [\n        {\n          name: \"nonce\",\n          type: \"uint256\",\n        },\n        {\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          name: \"functionSignature\",\n          type: \"bytes\",\n        },\n      ],\n    },\n    domain: {\n      name,\n      version,\n      verifyingContract,\n      salt: \"0x\" + chainId.toString(16).padStart(64, \"0\"),\n    },\n    primaryType: \"MetaTransaction\",\n    message: {\n      nonce: parseInt(nonce),\n      from,\n      functionSignature,\n    },\n  };\n};\n\nexport const getRsvFromSig = async (sig) => {\n  const signature = sig.substring(2);\n  const r = \"0x\" + signature.substring(0, 64);\n  const s = \"0x\" + signature.substring(64, 128);\n  const v = parseInt(signature.substring(128, 130), 16);\n\n  return { r, s, v };\n};\n\nexport const increaseTimeBySeconds = async (seconds = 3024000) => {\n  await ethers.provider.send(\"evm_increaseTime\", [seconds]);\n};\n\nexport const mineBlock = async () => {\n  await ethers.provider.send(\"evm_mine\");\n};\n"
      ]
    },
    "mtime": 1627083128662
  },
  "{\"filename\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/StudServiceV5Test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../../utils",
            "imported": [
              "getTypedData",
              "getRsvFromSig",
              "chainId"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getTypedData",
                "local": "getTypedData"
              },
              {
                "kind": "named",
                "imported": "getRsvFromSig",
                "local": "getRsvFromSig"
              },
              {
                "kind": "named",
                "imported": "chainId",
                "local": "chainId"
              }
            ]
          },
          {
            "source": "chai",
            "imported": [
              "expect"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "expect",
                "local": "expect"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/StudServiceV5Test.js",
      "filenameRelative": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/StudServiceV5Test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "StudServiceV5Test.js",
      "sourceFileName": "StudServiceV5Test.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "StudServiceV5Test"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nvar _utils = require(\"../../utils\");\n\nvar _chai = require(\"chai\");\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar STUD_OWNERS_ROLE = ethers.utils.formatBytes32String(\"stud_owners\");\n\ndescribe(\"StudServiceV5\", function () {\n  var core = void 0,\n      breedTypes = void 0,\n      breedingLogic = void 0,\n      breedingProxy = void 0,\n      breedingProxyAdmin = void 0,\n      breeding = void 0,\n      studService = void 0,\n      horseData = void 0,\n      erc20 = void 0;\n\n  var acc = void 0,\n      owner = void 0,\n      secondOwner = void 0,\n      randomAddress = void 0,\n      poolAddress = void 0,\n      highMating = ethers.utils.parseUnits(\"1\"),\n      seconds = {\n    day1: 86400,\n    day3: 259200,\n    day6: 518400\n  },\n      amount = ethers.utils.parseUnits(\"0.1\"),\n      maxWETH = ethers.utils.parseUnits(\"100\");\n\n  before(\"populate accs\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ethers.getSigners();\n\n          case 2:\n            acc = _context.sent;\n\n            owner = acc[0];\n            secondOwner = acc[2];\n            randomAddress = acc[3];\n            poolAddress = acc[9];\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  beforeEach(\"get factories\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return ethers.getContractFactory(\"HorseData\");\n\n          case 2:\n            horseData = _context2.sent;\n            _context2.next = 5;\n            return ethers.getContractFactory(\"Core\");\n\n          case 5:\n            core = _context2.sent;\n            _context2.next = 8;\n            return ethers.getContractFactory(\"BreedTypes\");\n\n          case 8:\n            breedTypes = _context2.sent;\n            _context2.next = 11;\n            return ethers.getContractFactory(\"StudServiceV5\");\n\n          case 11:\n            studService = _context2.sent;\n            _context2.next = 14;\n            return ethers.getContractFactory(\"ZedProxyAdmin\");\n\n          case 14:\n            breedingProxyAdmin = _context2.sent;\n            _context2.next = 17;\n            return ethers.getContractFactory(\"BreedingProxy\");\n\n          case 17:\n            breedingProxy = _context2.sent;\n            _context2.next = 20;\n            return ethers.getContractFactory(\"Breeding\");\n\n          case 20:\n            breeding = _context2.sent;\n            _context2.next = 23;\n            return ethers.getContractFactory(\"ERC20Test\");\n\n          case 23:\n            erc20 = _context2.sent;\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })));\n\n  beforeEach(\"deploy instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return horseData.deploy();\n\n          case 2:\n            horseData = _context3.sent;\n            _context3.next = 5;\n            return horseData.deployed();\n\n          case 5:\n            _context3.next = 7;\n            return core.deploy(horseData.address);\n\n          case 7:\n            core = _context3.sent;\n            _context3.next = 10;\n            return core.deployed();\n\n          case 10:\n            _context3.next = 12;\n            return breedTypes.deploy();\n\n          case 12:\n            breedTypes = _context3.sent;\n            _context3.next = 15;\n            return breedTypes.deployed();\n\n          case 15:\n            _context3.next = 17;\n            return studService.deploy(core.address, horseData.address, breedTypes.address);\n\n          case 17:\n            studService = _context3.sent;\n            _context3.next = 20;\n            return studService.deployed();\n\n          case 20:\n            _context3.next = 22;\n            return erc20.deploy(ethers.utils.parseUnits(\"100\"));\n\n          case 22:\n            erc20 = _context3.sent;\n            _context3.next = 25;\n            return erc20.deployed();\n\n          case 25:\n            _context3.next = 27;\n            return breeding.deploy();\n\n          case 27:\n            breedingLogic = _context3.sent;\n            _context3.next = 30;\n            return breedingLogic.deployed();\n\n          case 30:\n            _context3.next = 32;\n            return breedingProxyAdmin.deploy();\n\n          case 32:\n            breedingProxyAdmin = _context3.sent;\n            _context3.next = 35;\n            return breedingProxyAdmin.deployed();\n\n          case 35:\n            _context3.next = 37;\n            return breedingProxy.deploy(breedingLogic.address, breedingProxyAdmin.address);\n\n          case 37:\n            breedingProxy = _context3.sent;\n            _context3.next = 40;\n            return breedingProxy.deployed();\n\n          case 40:\n\n            breeding = new ethers.Contract(breedingProxy.address, breedingLogic.interface);\n\n            breeding = breeding.connect(owner);\n\n          case 42:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  })));\n\n  beforeEach(\"setup initial state of instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return studService.grantRole(ethers.utils.formatBytes32String(\"stud_owners\"), owner.address);\n\n          case 2:\n            _context4.next = 4;\n            return studService.setDomainSeparator(\"ZED Stud\", \"1\", _utils.chainId);\n\n          case 4:\n            _context4.next = 6;\n            return core.grantRole(ethers.utils.formatBytes32String(\"core_contracts\"), owner.address);\n\n          case 6:\n            _context4.next = 8;\n            return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"FirstName\"), ethers.utils.formatBytes32String(\"Black\"));\n\n          case 8:\n            _context4.next = 10;\n            return breedTypes.grantRole(ethers.utils.formatBytes32String(\"breed_types_owners\"), owner.address);\n\n          case 10:\n            _context4.next = 12;\n            return breeding.initialize(core.address, studService.address, breedTypes.address, erc20.address, poolAddress.address, acc[2].address);\n\n          case 12:\n            _context4.next = 14;\n            return breedTypes.grantRole(ethers.utils.formatBytes32String(\"breed_types_contracts\"), breeding.address);\n\n          case 14:\n            _context4.next = 16;\n            return core.grantRole(ethers.utils.formatBytes32String(\"core_contracts\"), breeding.address);\n\n          case 16:\n            _context4.next = 18;\n            return erc20.transfer(acc[2].address, amount);\n\n          case 18:\n            _context4.next = 20;\n            return erc20.connect(secondOwner).approve(breeding.address, maxWETH);\n\n          case 20:\n            _context4.next = 22;\n            return erc20.approve(breeding.address, maxWETH);\n\n          case 22:\n            _context4.next = 24;\n            return createInitialHorses();\n\n          case 24:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined);\n  })));\n\n  var createInitialHorses = function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"Truc1\"), ethers.utils.formatBytes32String(\"violet\"));\n\n            case 2:\n              _context5.next = 4;\n              return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Trung1\"), ethers.utils.formatBytes32String(\"blue\"));\n\n            case 4:\n              _context5.next = 6;\n              return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"Truc2\"), ethers.utils.formatBytes32String(\"violet\"));\n\n            case 6:\n              _context5.next = 8;\n              return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Trung2\"), ethers.utils.formatBytes32String(\"blue\"));\n\n            case 8:\n              _context5.next = 10;\n              return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Trung3\"), ethers.utils.formatBytes32String(\"blue\"));\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, undefined);\n    }));\n\n    return function createInitialHorses() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  describe(\"Initial methods\", function () {\n    it(\"should check the emptiness of init state before adding horses to stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.t0 = _chai.expect;\n              _context6.next = 3;\n              return studService.getHorsesInStud();\n\n            case 3:\n              _context6.t1 = _context6.sent;\n              (0, _context6.t0)(_context6.t1).to.be.empty;\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, undefined);\n    })));\n  });\n\n  describe(\"Ownership checks\", function () {\n    it(\"should check deployer to admin of stud service\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.t0 = _chai.expect;\n              _context7.next = 3;\n              return studService.hasRole(STUD_OWNERS_ROLE, owner.address);\n\n            case 3:\n              _context7.t1 = _context7.sent;\n              (0, _context7.t0)(_context7.t1).to.be.true;\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, undefined);\n    })));\n\n    it(\"should add another address as admin of stud service\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return studService.grantRole(STUD_OWNERS_ROLE, secondOwner.address);\n\n            case 2:\n              _context8.t0 = _chai.expect;\n              _context8.next = 5;\n              return studService.hasRole(STUD_OWNERS_ROLE, secondOwner.address);\n\n            case 5:\n              _context8.t1 = _context8.sent;\n              (0, _context8.t0)(_context8.t1).to.be.true;\n\n            case 7:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, undefined);\n    })));\n\n    it(\"should revert transaction to protected method from non-registered addresses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              (0, _chai.expect)(studService.connect(randomAddress).grantRole(STUD_OWNERS_ROLE, secondOwner.address)).to.be.revertedWith(\"AccessControl: sender must be an admin to grant\");\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, undefined);\n    })));\n\n    it(\"should renounce ownership and can't call methods after that\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return studService.revokeRole(STUD_OWNERS_ROLE, secondOwner.address);\n\n            case 2:\n\n              (0, _chai.expect)(studService.connect(secondOwner).grantRole(STUD_OWNERS_ROLE, randomAddress.address)).to.be.revertedWith(\"AccessControl: sender must be an admin to grant\");\n\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, undefined);\n    })));\n  });\n\n  describe(\"Stud admin methods checks\", function () {\n    it(\"should add new timeframe and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n      var newTimeframe, isNewTimeframeActive;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              newTimeframe = 256000;\n              _context11.next = 3;\n              return studService.isTimeframeExist(newTimeframe);\n\n            case 3:\n              isNewTimeframeActive = _context11.sent;\n\n\n              (0, _chai.expect)(isNewTimeframeActive).to.be.false;\n\n              _context11.next = 7;\n              return studService.addTimeFrame(newTimeframe);\n\n            case 7:\n              _context11.next = 9;\n              return studService.isTimeframeExist(newTimeframe);\n\n            case 9:\n              isNewTimeframeActive = _context11.sent;\n\n              (0, _chai.expect)(isNewTimeframeActive).to.be.true;\n\n            case 11:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, undefined);\n    })));\n\n    it(\"should remove timeframe and check the state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n      var targetTimeframe, isTargetTimeframeActive;\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              targetTimeframe = 86400;\n              _context12.next = 3;\n              return studService.removeTimeFrame(targetTimeframe);\n\n            case 3:\n              _context12.next = 5;\n              return studService.isTimeframeExist(targetTimeframe);\n\n            case 5:\n              isTargetTimeframeActive = _context12.sent;\n\n              (0, _chai.expect)(isTargetTimeframeActive).to.be.false;\n\n            case 7:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, undefined);\n    })));\n\n    it(\"should set new base fee\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n      var currentBaseFee;\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return studService.getBaseFee();\n\n            case 2:\n              currentBaseFee = _context13.sent;\n\n              (0, _chai.expect)(currentBaseFee).to.equal(ethers.utils.parseUnits(\"0.075\"));\n\n              _context13.next = 6;\n              return studService.setBaseFee(ethers.utils.parseUnits(\"0.5\"));\n\n            case 6:\n              _context13.next = 8;\n              return studService.getBaseFee();\n\n            case 8:\n              currentBaseFee = _context13.sent;\n\n\n              (0, _chai.expect)(currentBaseFee.toString()).to.equal(ethers.utils.parseUnits(\"0.5\"));\n\n            case 10:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, undefined);\n    })));\n\n    it(\"should set new breed type weight\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n      var breedType, newBreedTypeWeight;\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              breedType = ethers.utils.formatBytes32String(\"mustang\");\n              _context14.next = 3;\n              return studService.getBreedTypeWeight(breedType);\n\n            case 3:\n              newBreedTypeWeight = _context14.sent;\n\n              (0, _chai.expect)(newBreedTypeWeight.toString()).to.equal(\"0\");\n\n              _context14.next = 7;\n              return studService.setBreedTypeWeight(breedType, 200);\n\n            case 7:\n              _context14.next = 9;\n              return studService.getBreedTypeWeight(breedType);\n\n            case 9:\n              newBreedTypeWeight = _context14.sent;\n\n              (0, _chai.expect)(newBreedTypeWeight.toString()).to.equal(\"200\");\n\n            case 11:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, undefined);\n    })));\n\n    it(\"should set new bloodline weight\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n      var bloodLine, newBloodLineWeight;\n      return regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              bloodLine = ethers.utils.formatBytes32String(\"X\");\n              _context15.next = 3;\n              return studService.getBloodlineWeight(bloodLine);\n\n            case 3:\n              newBloodLineWeight = _context15.sent;\n\n              (0, _chai.expect)(newBloodLineWeight.toString()).to.equal(\"0\");\n\n              _context15.next = 7;\n              return studService.setBloodlineWeight(bloodLine, 200);\n\n            case 7:\n              _context15.next = 9;\n              return studService.getBloodlineWeight(bloodLine);\n\n            case 9:\n              newBloodLineWeight = _context15.sent;\n\n              (0, _chai.expect)(newBloodLineWeight.toString()).to.equal(\"200\");\n\n            case 11:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, undefined);\n    })));\n\n    it(\"should allow admin to put and remove horse on stud without value\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return studService.adminPutInStud(2, highMating, seconds.day1);\n\n            case 2:\n              _context16.t0 = _chai.expect;\n              _context16.next = 5;\n              return studService.isHorseInStud(2);\n\n            case 5:\n              _context16.t1 = _context16.sent;\n              (0, _context16.t0)(_context16.t1).to.be.true;\n              _context16.t2 = _chai.expect;\n              _context16.next = 10;\n              return studService.getMatingPrice(2);\n\n            case 10:\n              _context16.t3 = _context16.sent;\n              _context16.t4 = highMating;\n              (0, _context16.t2)(_context16.t3).to.equal(_context16.t4);\n              _context16.t5 = _chai.expect;\n              _context16.next = 16;\n              return studService.getStudTime(2);\n\n            case 16:\n              _context16.t6 = _context16.sent;\n              _context16.t7 = seconds.day1;\n              (0, _context16.t5)(_context16.t6).to.equal(_context16.t7);\n              _context16.next = 21;\n              return studService.removeFromStud(2);\n\n            case 21:\n              _context16.t8 = _chai.expect;\n              _context16.next = 24;\n              return studService.isHorseInStud(2);\n\n            case 24:\n              _context16.t9 = _context16.sent;\n              (0, _context16.t8)(_context16.t9).to.be.false;\n              _context16.t10 = _chai.expect;\n              _context16.next = 29;\n              return studService.getMatingPrice(2);\n\n            case 29:\n              _context16.t11 = _context16.sent;\n              (0, _context16.t10)(_context16.t11).to.equal(0);\n              _context16.t12 = _chai.expect;\n              _context16.next = 34;\n              return studService.getStudTime(2);\n\n            case 34:\n              _context16.t13 = _context16.sent;\n              (0, _context16.t12)(_context16.t13).to.equal(0);\n\n            case 36:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, undefined);\n    })));\n  });\n\n  describe(\"Stud logic checks\", function () {\n    it(\"should add first horse in stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n      var studInfo;\n      return regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.next = 2;\n              return studService.putInStud(2, highMating, seconds.day1);\n\n            case 2:\n              _context17.next = 4;\n              return studService.getStudInfo(2);\n\n            case 4:\n              studInfo = _context17.sent;\n\n              (0, _chai.expect)(studInfo[0]).to.be.true;\n              (0, _chai.expect)(studInfo[1]).to.equal(highMating);\n              (0, _chai.expect)(studInfo[2]).to.equal(seconds.day1);\n\n            case 8:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17, undefined);\n    })));\n\n    it(\"should add 2 horses to stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n      var studInfo, horsesInStud;\n      return regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.next = 2;\n              return studService.putInStud(2, highMating, seconds.day1);\n\n            case 2:\n              _context18.next = 4;\n              return studService.putInStud(4, highMating, seconds.day3);\n\n            case 4:\n              _context18.next = 6;\n              return studService.getStudInfo(4);\n\n            case 6:\n              studInfo = _context18.sent;\n\n              (0, _chai.expect)(studInfo[0]).to.be.true;\n              (0, _chai.expect)(studInfo[1]).to.equal(highMating);\n              (0, _chai.expect)(studInfo[2]).to.equal(seconds.day3);\n\n              _context18.next = 12;\n              return studService.getHorsesInStud();\n\n            case 12:\n              horsesInStud = _context18.sent;\n\n\n              (0, _chai.expect)(horsesInStud.toString()).to.equal(\"2,4\");\n\n            case 14:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18, undefined);\n    })));\n\n    it(\"should remove horse from stud and update listed horses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n      var horsesInStud;\n      return regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.next = 2;\n              return studService.putInStud(4, highMating, seconds.day1);\n\n            case 2:\n              _context19.next = 4;\n              return studService.putInStud(2, highMating, seconds.day1);\n\n            case 4:\n              _context19.next = 6;\n              return studService.removeFromStud(4);\n\n            case 6:\n              _context19.next = 8;\n              return studService.getHorsesInStud();\n\n            case 8:\n              horsesInStud = _context19.sent;\n\n              (0, _chai.expect)(horsesInStud.toString()).to.equal(\"2\");\n\n            case 10:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19, undefined);\n    })));\n\n    it(\"should use a default value if a different time is sent\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n      var studInfo, expectedTime;\n      return regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.next = 2;\n              return core.mintCustomHorse(randomAddress.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"FirstName111\"), ethers.utils.formatBytes32String(\"Black\"));\n\n            case 2:\n              _context20.next = 4;\n              return studService.connect(randomAddress).putInStud(6, highMating, 123456);\n\n            case 4:\n              _context20.next = 6;\n              return studService.getStudInfo(6);\n\n            case 6:\n              studInfo = _context20.sent;\n\n\n              // In case we change the time for dev. 1 day on prod.\n              expectedTime = studInfo[2].toNumber() === 3600 ? 86400 : studInfo[2].toNumber();\n\n\n              (0, _chai.expect)(expectedTime).to.equal(seconds.day1); // Default to three days.\n\n            case 9:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20, undefined);\n    })));\n\n    it(\"should remove last horse from the list of horses in stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n      var horses;\n      return regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.next = 2;\n              return studService.putInStud(2, highMating, seconds.day1);\n\n            case 2:\n              _context21.next = 4;\n              return studService.putInStud(4, highMating, seconds.day1);\n\n            case 4:\n              _context21.next = 6;\n              return studService.getHorsesInStud();\n\n            case 6:\n              horses = _context21.sent;\n\n              (0, _chai.expect)(horses.toString()).to.equal(\"2,4\");\n\n              _context21.next = 10;\n              return studService.removeFromStud(4);\n\n            case 10:\n              _context21.next = 12;\n              return studService.getHorsesInStud();\n\n            case 12:\n              horses = _context21.sent;\n\n\n              (0, _chai.expect)(horses.toString()).to.equal(\"2\");\n\n            case 14:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21, undefined);\n    })));\n  });\n\n  describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee38() {\n    return regeneratorRuntime.wrap(function _callee38$(_context38) {\n      while (1) {\n        switch (_context38.prev = _context38.next) {\n          case 0:\n            describe(\"putInStud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {\n              return regeneratorRuntime.wrap(function _callee25$(_context25) {\n                while (1) {\n                  switch (_context25.prev = _context25.next) {\n                    case 0:\n                      it(\"should revert when a different user than owner tries to put a horse in stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n                        return regeneratorRuntime.wrap(function _callee22$(_context22) {\n                          while (1) {\n                            switch (_context22.prev = _context22.next) {\n                              case 0:\n                                (0, _chai.expect)(studService.connect(randomAddress).putInStud(4, highMating, seconds.day6)).to.be.revertedWith(\"StudService: unauthorized\");\n\n                              case 1:\n                              case \"end\":\n                                return _context22.stop();\n                            }\n                          }\n                        }, _callee22, undefined);\n                      })));\n\n                      it(\"should revert if we try to put a female horse into stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n                        return regeneratorRuntime.wrap(function _callee23$(_context23) {\n                          while (1) {\n                            switch (_context23.prev = _context23.next) {\n                              case 0:\n                                (0, _chai.expect)(studService.putInStud(1, highMating, seconds.day6)).to.be.revertedWith(\"StudService: horse is not male\");\n\n                              case 1:\n                              case \"end\":\n                                return _context23.stop();\n                            }\n                          }\n                        }, _callee23, undefined);\n                      })));\n\n                      it(\"should revert if minimum breed price is lower than required\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {\n                        return regeneratorRuntime.wrap(function _callee24$(_context24) {\n                          while (1) {\n                            switch (_context24.prev = _context24.next) {\n                              case 0:\n                                (0, _chai.expect)(studService.putInStud(2, ethers.utils.parseUnits(\"0.0001\"), seconds.day1)).to.be.revertedWith(\"StudService: mating price lower than minimum breed price\");\n\n                              case 1:\n                              case \"end\":\n                                return _context24.stop();\n                            }\n                          }\n                        }, _callee24, undefined);\n                      })));\n\n                    case 3:\n                    case \"end\":\n                      return _context25.stop();\n                  }\n                }\n              }, _callee25, undefined);\n            })));\n\n            describe(\"pausable\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28() {\n              return regeneratorRuntime.wrap(function _callee28$(_context28) {\n                while (1) {\n                  switch (_context28.prev = _context28.next) {\n                    case 0:\n                      it(\"can only be paused by accounts with correct role\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {\n                        return regeneratorRuntime.wrap(function _callee26$(_context26) {\n                          while (1) {\n                            switch (_context26.prev = _context26.next) {\n                              case 0:\n                                _context26.next = 2;\n                                return studService.pause();\n\n                              case 2:\n                                _context26.next = 4;\n                                return studService.unpause();\n\n                              case 4:\n\n                                (0, _chai.expect)(studService.connect(acc[1]).pause()).to.be.revertedWith(\"StudService: unauthorized owner admin\");\n\n                              case 5:\n                              case \"end\":\n                                return _context26.stop();\n                            }\n                          }\n                        }, _callee26, undefined);\n                      })));\n\n                      it(\"should revert if paused\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27() {\n                        var minBreedingPrice;\n                        return regeneratorRuntime.wrap(function _callee27$(_context27) {\n                          while (1) {\n                            switch (_context27.prev = _context27.next) {\n                              case 0:\n                                _context27.t0 = _chai.expect;\n                                _context27.next = 3;\n                                return studService.paused();\n\n                              case 3:\n                                _context27.t1 = _context27.sent;\n                                (0, _context27.t0)(_context27.t1).to.be.false;\n                                _context27.next = 7;\n                                return studService.pause();\n\n                              case 7:\n                                _context27.t2 = _chai.expect;\n                                _context27.next = 10;\n                                return studService.paused();\n\n                              case 10:\n                                _context27.t3 = _context27.sent;\n                                (0, _context27.t2)(_context27.t3).to.be.true;\n                                _context27.next = 14;\n                                return studService.getMinimumBreedPrice(2);\n\n                              case 14:\n                                minBreedingPrice = _context27.sent;\n\n                                (0, _chai.expect)(studService.putInStud(2, minBreedingPrice, seconds.day1)).to.be.revertedWith(\"Pausable: paused\");\n\n                              case 16:\n                              case \"end\":\n                                return _context27.stop();\n                            }\n                          }\n                        }, _callee27, undefined);\n                      })));\n\n                    case 2:\n                    case \"end\":\n                      return _context28.stop();\n                  }\n                }\n              }, _callee28, undefined);\n            })));\n\n            describe(\"addTimeFrame\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee31() {\n              return regeneratorRuntime.wrap(function _callee31$(_context31) {\n                while (1) {\n                  switch (_context31.prev = _context31.next) {\n                    case 0:\n                      it(\"reverts if timeframe is not > 0\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee29() {\n                        return regeneratorRuntime.wrap(function _callee29$(_context29) {\n                          while (1) {\n                            switch (_context29.prev = _context29.next) {\n                              case 0:\n                                (0, _chai.expect)(studService.addTimeFrame(0)).to.be.revertedWith(\"StudService: invalid seconds frame\");\n\n                              case 1:\n                              case \"end\":\n                                return _context29.stop();\n                            }\n                          }\n                        }, _callee29, undefined);\n                      })));\n\n                      it(\"reverts if timeframe already exists\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee30() {\n                        return regeneratorRuntime.wrap(function _callee30$(_context30) {\n                          while (1) {\n                            switch (_context30.prev = _context30.next) {\n                              case 0:\n                                (0, _chai.expect)(studService.addTimeFrame(86400)).to.be.revertedWith(\"StudService: seconds frame already active\");\n\n                              case 1:\n                              case \"end\":\n                                return _context30.stop();\n                            }\n                          }\n                        }, _callee30, undefined);\n                      })));\n\n                    case 2:\n                    case \"end\":\n                      return _context31.stop();\n                  }\n                }\n              }, _callee31, undefined);\n            })));\n\n            describe(\"setBreedTypesAddress\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee33() {\n              return regeneratorRuntime.wrap(function _callee33$(_context33) {\n                while (1) {\n                  switch (_context33.prev = _context33.next) {\n                    case 0:\n                      it(\"reverts if breedtypes address is 0\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee32() {\n                        return regeneratorRuntime.wrap(function _callee32$(_context32) {\n                          while (1) {\n                            switch (_context32.prev = _context32.next) {\n                              case 0:\n                                (0, _chai.expect)(studService.setBreedTypesAddress(ethers.constants.AddressZero)).to.be.revertedWith(\"StudService: invalid breedtypes contract address\");\n\n                              case 1:\n                              case \"end\":\n                                return _context32.stop();\n                            }\n                          }\n                        }, _callee32, undefined);\n                      })));\n\n                    case 1:\n                    case \"end\":\n                      return _context33.stop();\n                  }\n                }\n              }, _callee33, undefined);\n            })));\n\n            describe(\"setCoreAddress\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee35() {\n              return regeneratorRuntime.wrap(function _callee35$(_context35) {\n                while (1) {\n                  switch (_context35.prev = _context35.next) {\n                    case 0:\n                      it(\"reverts if core address is 0\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee34() {\n                        return regeneratorRuntime.wrap(function _callee34$(_context34) {\n                          while (1) {\n                            switch (_context34.prev = _context34.next) {\n                              case 0:\n                                (0, _chai.expect)(studService.setCoreAddress(ethers.constants.AddressZero)).to.be.revertedWith(\"StudService: invalid core contract address\");\n\n                              case 1:\n                              case \"end\":\n                                return _context34.stop();\n                            }\n                          }\n                        }, _callee34, undefined);\n                      })));\n\n                    case 1:\n                    case \"end\":\n                      return _context35.stop();\n                  }\n                }\n              }, _callee35, undefined);\n            })));\n\n            describe(\"removeTimeFrame\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee37() {\n              return regeneratorRuntime.wrap(function _callee37$(_context37) {\n                while (1) {\n                  switch (_context37.prev = _context37.next) {\n                    case 0:\n                      it(\"reverts if timeframe is not found when removing\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee36() {\n                        return regeneratorRuntime.wrap(function _callee36$(_context36) {\n                          while (1) {\n                            switch (_context36.prev = _context36.next) {\n                              case 0:\n                                (0, _chai.expect)(studService.removeTimeFrame(123)).to.be.revertedWith(\"StudService: seconds frame is not found\");\n\n                              case 1:\n                              case \"end\":\n                                return _context36.stop();\n                            }\n                          }\n                        }, _callee36, undefined);\n                      })));\n\n                    case 1:\n                    case \"end\":\n                      return _context37.stop();\n                  }\n                }\n              }, _callee37, undefined);\n            })));\n\n          case 6:\n          case \"end\":\n            return _context38.stop();\n        }\n      }\n    }, _callee38, undefined);\n  })));\n\n  describe(\"meta-transactions\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee42() {\n    return regeneratorRuntime.wrap(function _callee42$(_context42) {\n      while (1) {\n        switch (_context42.prev = _context42.next) {\n          case 0:\n            it(\"should put a horse in stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee39() {\n              var functionSignature, typedData, signedData, _ref41, r, s, v;\n\n              return regeneratorRuntime.wrap(function _callee39$(_context39) {\n                while (1) {\n                  switch (_context39.prev = _context39.next) {\n                    case 0:\n                      _context39.t0 = _chai.expect;\n                      _context39.next = 3;\n                      return studService.isHorseInStud(2);\n\n                    case 3:\n                      _context39.t1 = _context39.sent;\n                      (0, _context39.t0)(_context39.t1).to.be.false;\n                      functionSignature = studService.interface.encodeFunctionData(\"putInStud\", [2, highMating, seconds.day3]);\n                      _context39.t2 = _utils.getTypedData;\n                      _context39.t3 = _utils.chainId;\n                      _context39.t4 = studService.address;\n                      _context39.next = 11;\n                      return studService.getNonce(owner.address);\n\n                    case 11:\n                      _context39.t5 = _context39.sent;\n                      _context39.t6 = owner.address;\n                      _context39.t7 = functionSignature;\n                      _context39.t8 = {\n                        name: \"ZED Stud\",\n                        version: \"1\",\n                        chainId: _context39.t3,\n                        verifyingContract: _context39.t4,\n                        nonce: _context39.t5,\n                        from: _context39.t6,\n                        functionSignature: _context39.t7\n                      };\n                      _context39.next = 17;\n                      return (0, _context39.t2)(_context39.t8);\n\n                    case 17:\n                      typedData = _context39.sent;\n                      _context39.next = 20;\n                      return owner._signTypedData(typedData.domain, typedData.types, typedData.message);\n\n                    case 20:\n                      signedData = _context39.sent;\n                      _context39.next = 23;\n                      return (0, _utils.getRsvFromSig)(signedData);\n\n                    case 23:\n                      _ref41 = _context39.sent;\n                      r = _ref41.r;\n                      s = _ref41.s;\n                      v = _ref41.v;\n                      _context39.next = 29;\n                      return studService.executeMetaTransaction(owner.address, functionSignature, r, s, v);\n\n                    case 29:\n                      _context39.t9 = _chai.expect;\n                      _context39.next = 32;\n                      return studService.isHorseInStud(2);\n\n                    case 32:\n                      _context39.t10 = _context39.sent;\n                      (0, _context39.t9)(_context39.t10).to.be.true;\n\n                    case 34:\n                    case \"end\":\n                      return _context39.stop();\n                  }\n                }\n              }, _callee39, undefined);\n            })));\n\n            describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee41() {\n              return regeneratorRuntime.wrap(function _callee41$(_context41) {\n                while (1) {\n                  switch (_context41.prev = _context41.next) {\n                    case 0:\n                      it(\"should revert if minimum breed is not met\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee40() {\n                        var functionSignature, typedData, signedData, _ref44, r, s, v;\n\n                        return regeneratorRuntime.wrap(function _callee40$(_context40) {\n                          while (1) {\n                            switch (_context40.prev = _context40.next) {\n                              case 0:\n                                functionSignature = studService.interface.encodeFunctionData(\"putInStud\", [2, ethers.utils.parseUnits(\"0.0001\"), seconds.day3]);\n                                _context40.t0 = _chai.expect;\n                                _context40.next = 4;\n                                return studService.isHorseInStud(2);\n\n                              case 4:\n                                _context40.t1 = _context40.sent;\n                                (0, _context40.t0)(_context40.t1).to.be.false;\n                                _context40.t2 = _utils.getTypedData;\n                                _context40.t3 = _utils.chainId;\n                                _context40.t4 = studService.address;\n                                _context40.next = 11;\n                                return studService.getNonce(owner.address);\n\n                              case 11:\n                                _context40.t5 = _context40.sent;\n                                _context40.t6 = owner.address;\n                                _context40.t7 = functionSignature;\n                                _context40.t8 = {\n                                  name: \"ZED Stud\",\n                                  version: \"1\",\n                                  chainId: _context40.t3,\n                                  verifyingContract: _context40.t4,\n                                  nonce: _context40.t5,\n                                  from: _context40.t6,\n                                  functionSignature: _context40.t7\n                                };\n                                _context40.next = 17;\n                                return (0, _context40.t2)(_context40.t8);\n\n                              case 17:\n                                typedData = _context40.sent;\n                                _context40.next = 20;\n                                return owner._signTypedData(typedData.domain, typedData.types, typedData.message);\n\n                              case 20:\n                                signedData = _context40.sent;\n                                _context40.next = 23;\n                                return (0, _utils.getRsvFromSig)(signedData);\n\n                              case 23:\n                                _ref44 = _context40.sent;\n                                r = _ref44.r;\n                                s = _ref44.s;\n                                v = _ref44.v;\n\n\n                                (0, _chai.expect)(studService.executeMetaTransaction(owner.address, functionSignature, r, s, v)).to.be.revertedWith(\"StudService: mating price lower than minimum breed price\");\n\n                              case 28:\n                              case \"end\":\n                                return _context40.stop();\n                            }\n                          }\n                        }, _callee40, undefined);\n                      })));\n\n                    case 1:\n                    case \"end\":\n                      return _context41.stop();\n                  }\n                }\n              }, _callee41, undefined);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context42.stop();\n        }\n      }\n    }, _callee42, undefined);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "StudServiceV5Test.js"
      ],
      "names": [
        "STUD_OWNERS_ROLE",
        "ethers",
        "utils",
        "formatBytes32String",
        "describe",
        "core",
        "breedTypes",
        "breedingLogic",
        "breedingProxy",
        "breedingProxyAdmin",
        "breeding",
        "studService",
        "horseData",
        "erc20",
        "acc",
        "owner",
        "secondOwner",
        "randomAddress",
        "poolAddress",
        "highMating",
        "parseUnits",
        "seconds",
        "day1",
        "day3",
        "day6",
        "amount",
        "maxWETH",
        "before",
        "getSigners",
        "beforeEach",
        "getContractFactory",
        "deploy",
        "deployed",
        "address",
        "Contract",
        "interface",
        "connect",
        "grantRole",
        "setDomainSeparator",
        "chainId",
        "mintCustomHorse",
        "initialize",
        "transfer",
        "approve",
        "createInitialHorses",
        "it",
        "expect",
        "getHorsesInStud",
        "to",
        "be",
        "empty",
        "hasRole",
        "true",
        "revertedWith",
        "revokeRole",
        "newTimeframe",
        "isTimeframeExist",
        "isNewTimeframeActive",
        "false",
        "addTimeFrame",
        "targetTimeframe",
        "removeTimeFrame",
        "isTargetTimeframeActive",
        "getBaseFee",
        "currentBaseFee",
        "equal",
        "setBaseFee",
        "toString",
        "breedType",
        "getBreedTypeWeight",
        "newBreedTypeWeight",
        "setBreedTypeWeight",
        "bloodLine",
        "getBloodlineWeight",
        "newBloodLineWeight",
        "setBloodlineWeight",
        "adminPutInStud",
        "isHorseInStud",
        "getMatingPrice",
        "getStudTime",
        "removeFromStud",
        "putInStud",
        "getStudInfo",
        "studInfo",
        "horsesInStud",
        "expectedTime",
        "toNumber",
        "horses",
        "pause",
        "unpause",
        "paused",
        "getMinimumBreedPrice",
        "minBreedingPrice",
        "setBreedTypesAddress",
        "constants",
        "AddressZero",
        "setCoreAddress",
        "functionSignature",
        "encodeFunctionData",
        "getTypedData",
        "getNonce",
        "name",
        "version",
        "verifyingContract",
        "nonce",
        "from",
        "typedData",
        "_signTypedData",
        "domain",
        "types",
        "message",
        "signedData",
        "r",
        "s",
        "v",
        "executeMetaTransaction"
      ],
      "mappings": "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",
      "file": "StudServiceV5Test.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "sourcesContent": [
        "import { getTypedData, getRsvFromSig, chainId } from \"../../utils\";\nimport { expect } from \"chai\";\n\nconst STUD_OWNERS_ROLE = ethers.utils.formatBytes32String(\"stud_owners\");\n\ndescribe(\"StudServiceV5\", () => {\n  let core,\n    breedTypes,\n    breedingLogic,\n    breedingProxy,\n    breedingProxyAdmin,\n    breeding,\n    studService,\n    horseData,\n    erc20;\n\n  let acc,\n    owner,\n    secondOwner,\n    randomAddress,\n    poolAddress,\n    highMating = ethers.utils.parseUnits(\"1\"),\n    seconds = {\n      day1: 86400,\n      day3: 259200,\n      day6: 518400,\n    },\n    amount = ethers.utils.parseUnits(\"0.1\"),\n    maxWETH = ethers.utils.parseUnits(\"100\");\n\n  before(\"populate accs\", async () => {\n    acc = await ethers.getSigners();\n    owner = acc[0];\n    secondOwner = acc[2];\n    randomAddress = acc[3];\n    poolAddress = acc[9];\n  });\n\n  beforeEach(\"get factories\", async () => {\n    horseData = await ethers.getContractFactory(\"HorseData\");\n    core = await ethers.getContractFactory(\"Core\");\n    breedTypes = await ethers.getContractFactory(\"BreedTypes\");\n    studService = await ethers.getContractFactory(\"StudServiceV5\");\n    breedingProxyAdmin = await ethers.getContractFactory(\"ZedProxyAdmin\");\n    breedingProxy = await ethers.getContractFactory(\"BreedingProxy\");\n    breeding = await ethers.getContractFactory(\"Breeding\");\n    erc20 = await ethers.getContractFactory(\"ERC20Test\");\n  });\n\n  beforeEach(\"deploy instances\", async () => {\n    horseData = await horseData.deploy();\n    await horseData.deployed();\n\n    core = await core.deploy(horseData.address);\n    await core.deployed();\n\n    breedTypes = await breedTypes.deploy();\n    await breedTypes.deployed();\n\n    studService = await studService.deploy(\n      core.address,\n      horseData.address,\n      breedTypes.address\n    );\n    await studService.deployed();\n\n    erc20 = await erc20.deploy(ethers.utils.parseUnits(\"100\"));\n    await erc20.deployed();\n\n    // Deploys Breeding Logic instance\n    breedingLogic = await breeding.deploy();\n    await breedingLogic.deployed();\n\n    // Deploys Breeding Admin to be used as admin of BreedingProxy\n    breedingProxyAdmin = await breedingProxyAdmin.deploy();\n    await breedingProxyAdmin.deployed();\n\n    // Deploys proxy instance\n    breedingProxy = await breedingProxy.deploy(\n      breedingLogic.address,\n      breedingProxyAdmin.address\n    );\n    await breedingProxy.deployed();\n\n    breeding = new ethers.Contract(\n      breedingProxy.address,\n      breedingLogic.interface\n    );\n\n    breeding = breeding.connect(owner);\n  });\n\n  beforeEach(\"setup initial state of instances\", async () => {\n    await studService.grantRole(\n      ethers.utils.formatBytes32String(\"stud_owners\"),\n      owner.address\n    );\n\n    await studService.setDomainSeparator(\"ZED Stud\", \"1\", chainId);\n    await core.grantRole(\n      ethers.utils.formatBytes32String(\"core_contracts\"),\n      owner.address\n    );\n\n    // We cannot interact with ID 0\n    await core.mintCustomHorse(\n      owner.address,\n      4,\n      ethers.utils.formatBytes32String(\"Male\"),\n      ethers.utils.formatBytes32String(\"FirstName\"),\n      ethers.utils.formatBytes32String(\"Black\")\n    );\n\n    await breedTypes.grantRole(\n      ethers.utils.formatBytes32String(\"breed_types_owners\"),\n      owner.address\n    );\n\n    await breeding.initialize(\n      core.address,\n      studService.address,\n      breedTypes.address,\n      erc20.address,\n      poolAddress.address,\n      acc[2].address\n    );\n\n    await breedTypes.grantRole(\n      ethers.utils.formatBytes32String(\"breed_types_contracts\"),\n      breeding.address\n    );\n\n    // Core need to grant CORE_CONTRACTS_ROLE for Breeding to able to invoke method Core.mintOffspring\n    await core.grantRole(\n      ethers.utils.formatBytes32String(\"core_contracts\"),\n      breeding.address\n    );\n\n    await erc20.transfer(acc[2].address, amount);\n    await erc20.connect(secondOwner).approve(breeding.address, maxWETH);\n    await erc20.approve(breeding.address, maxWETH);\n\n    await createInitialHorses();\n  });\n\n  const createInitialHorses = async () => {\n    await core.mintCustomHorse(\n      owner.address,\n      4,\n      ethers.utils.formatBytes32String(\"Female\"),\n      ethers.utils.formatBytes32String(\"Truc1\"),\n      ethers.utils.formatBytes32String(\"violet\")\n    );\n\n    await core.mintCustomHorse(\n      owner.address,\n      4,\n      ethers.utils.formatBytes32String(\"Male\"),\n      ethers.utils.formatBytes32String(\"Trung1\"),\n      ethers.utils.formatBytes32String(\"blue\")\n    );\n\n    await core.mintCustomHorse(\n      owner.address,\n      4,\n      ethers.utils.formatBytes32String(\"Female\"),\n      ethers.utils.formatBytes32String(\"Truc2\"),\n      ethers.utils.formatBytes32String(\"violet\")\n    );\n\n    await core.mintCustomHorse(\n      owner.address,\n      4,\n      ethers.utils.formatBytes32String(\"Male\"),\n      ethers.utils.formatBytes32String(\"Trung2\"),\n      ethers.utils.formatBytes32String(\"blue\")\n    );\n\n    await core.mintCustomHorse(\n      owner.address,\n      4,\n      ethers.utils.formatBytes32String(\"Male\"),\n      ethers.utils.formatBytes32String(\"Trung3\"),\n      ethers.utils.formatBytes32String(\"blue\")\n    );\n  };\n\n  describe(\"Initial methods\", () => {\n    it(\"should check the emptiness of init state before adding horses to stud\", async () => {\n      expect(await studService.getHorsesInStud()).to.be.empty;\n    });\n  });\n\n  describe(\"Ownership checks\", () => {\n    it(\"should check deployer to admin of stud service\", async () => {\n      expect(await studService.hasRole(STUD_OWNERS_ROLE, owner.address)).to.be\n        .true;\n    });\n\n    it(\"should add another address as admin of stud service\", async () => {\n      await studService.grantRole(STUD_OWNERS_ROLE, secondOwner.address);\n\n      expect(await studService.hasRole(STUD_OWNERS_ROLE, secondOwner.address))\n        .to.be.true;\n    });\n\n    it(\"should revert transaction to protected method from non-registered addresses\", async () => {\n      expect(\n        studService\n          .connect(randomAddress)\n          .grantRole(STUD_OWNERS_ROLE, secondOwner.address)\n      ).to.be.revertedWith(\"AccessControl: sender must be an admin to grant\");\n    });\n\n    it(\"should renounce ownership and can't call methods after that\", async () => {\n      await studService.revokeRole(STUD_OWNERS_ROLE, secondOwner.address);\n\n      expect(\n        studService\n          .connect(secondOwner)\n          .grantRole(STUD_OWNERS_ROLE, randomAddress.address)\n      ).to.be.revertedWith(\"AccessControl: sender must be an admin to grant\");\n    });\n  });\n\n  describe(\"Stud admin methods checks\", () => {\n    it(\"should add new timeframe and check the state\", async () => {\n      const newTimeframe = 256000;\n      let isNewTimeframeActive = await studService.isTimeframeExist(\n        newTimeframe\n      );\n\n      expect(isNewTimeframeActive).to.be.false;\n\n      await studService.addTimeFrame(newTimeframe);\n\n      isNewTimeframeActive = await studService.isTimeframeExist(newTimeframe);\n      expect(isNewTimeframeActive).to.be.true;\n    });\n\n    it(\"should remove timeframe and check the state\", async () => {\n      const targetTimeframe = 86400;\n      await studService.removeTimeFrame(targetTimeframe);\n\n      const isTargetTimeframeActive = await studService.isTimeframeExist(\n        targetTimeframe\n      );\n      expect(isTargetTimeframeActive).to.be.false;\n    });\n\n    it(\"should set new base fee\", async () => {\n      let currentBaseFee = await studService.getBaseFee();\n      expect(currentBaseFee).to.equal(ethers.utils.parseUnits(\"0.075\"));\n\n      await studService.setBaseFee(ethers.utils.parseUnits(\"0.5\"));\n      currentBaseFee = await studService.getBaseFee();\n\n      expect(currentBaseFee.toString()).to.equal(\n        ethers.utils.parseUnits(\"0.5\")\n      );\n    });\n\n    it(\"should set new breed type weight\", async () => {\n      const breedType = ethers.utils.formatBytes32String(\"mustang\");\n      let newBreedTypeWeight = await studService.getBreedTypeWeight(breedType);\n      expect(newBreedTypeWeight.toString()).to.equal(\"0\");\n\n      await studService.setBreedTypeWeight(breedType, 200);\n\n      newBreedTypeWeight = await studService.getBreedTypeWeight(breedType);\n      expect(newBreedTypeWeight.toString()).to.equal(\"200\");\n    });\n\n    it(\"should set new bloodline weight\", async () => {\n      const bloodLine = ethers.utils.formatBytes32String(\"X\");\n      let newBloodLineWeight = await studService.getBloodlineWeight(bloodLine);\n      expect(newBloodLineWeight.toString()).to.equal(\"0\");\n\n      await studService.setBloodlineWeight(bloodLine, 200);\n\n      newBloodLineWeight = await studService.getBloodlineWeight(bloodLine);\n      expect(newBloodLineWeight.toString()).to.equal(\"200\");\n    });\n\n    it(\"should allow admin to put and remove horse on stud without value\", async () => {\n      await studService.adminPutInStud(2, highMating, seconds.day1);\n\n      expect(await studService.isHorseInStud(2)).to.be.true;\n      expect(await studService.getMatingPrice(2)).to.equal(highMating);\n      expect(await studService.getStudTime(2)).to.equal(seconds.day1);\n\n      await studService.removeFromStud(2);\n\n      expect(await studService.isHorseInStud(2)).to.be.false;\n      expect(await studService.getMatingPrice(2)).to.equal(0);\n      expect(await studService.getStudTime(2)).to.equal(0);\n    });\n  });\n\n  describe(\"Stud logic checks\", () => {\n    it(\"should add first horse in stud\", async () => {\n      await studService.putInStud(2, highMating, seconds.day1);\n\n      const studInfo = await studService.getStudInfo(2);\n      expect(studInfo[0]).to.be.true;\n      expect(studInfo[1]).to.equal(highMating);\n      expect(studInfo[2]).to.equal(seconds.day1);\n    });\n\n    it(\"should add 2 horses to stud\", async () => {\n      // Add horses to stud\n      await studService.putInStud(2, highMating, seconds.day1);\n      await studService.putInStud(4, highMating, seconds.day3);\n\n      // Get state of id4 horse\n      let studInfo = await studService.getStudInfo(4);\n      expect(studInfo[0]).to.be.true;\n      expect(studInfo[1]).to.equal(highMating);\n      expect(studInfo[2]).to.equal(seconds.day3);\n\n      let horsesInStud = await studService.getHorsesInStud();\n\n      expect(horsesInStud.toString()).to.equal(\"2,4\");\n    });\n\n    it(\"should remove horse from stud and update listed horses\", async () => {\n      await studService.putInStud(4, highMating, seconds.day1);\n      await studService.putInStud(2, highMating, seconds.day1);\n\n      // Removes horse from Stud list and changes status. It can't be placed into Stud while\n      // the specified time has not passed yet (should be tested on the next test)\n      await studService.removeFromStud(4);\n\n      const horsesInStud = await studService.getHorsesInStud();\n      expect(horsesInStud.toString()).to.equal(\"2\");\n    });\n\n    it(\"should use a default value if a different time is sent\", async () => {\n      await core.mintCustomHorse(\n        randomAddress.address,\n        4,\n        ethers.utils.formatBytes32String(\"Male\"),\n        ethers.utils.formatBytes32String(\"FirstName111\"),\n        ethers.utils.formatBytes32String(\"Black\")\n      );\n\n      // We'll use a random value for the duration since only three values are allowed at the moment.\n      await studService.connect(randomAddress).putInStud(6, highMating, 123456);\n\n      let studInfo = await studService.getStudInfo(6);\n\n      // In case we change the time for dev. 1 day on prod.\n      const expectedTime =\n        studInfo[2].toNumber() === 3600 ? 86400 : studInfo[2].toNumber();\n\n      expect(expectedTime).to.equal(seconds.day1); // Default to three days.\n    });\n\n    it(\"should remove last horse from the list of horses in stud\", async () => {\n      await studService.putInStud(2, highMating, seconds.day1);\n      await studService.putInStud(4, highMating, seconds.day1);\n\n      // Horse 2 is in Stud at the moment.\n      let horses = await studService.getHorsesInStud();\n      expect(horses.toString()).to.equal(\"2,4\");\n\n      await studService.removeFromStud(4);\n      horses = await studService.getHorsesInStud();\n\n      expect(horses.toString()).to.equal(\"2\");\n    });\n  });\n\n  describe(\"reverts\", async () => {\n    describe(\"putInStud\", async () => {\n      it(\"should revert when a different user than owner tries to put a horse in stud\", async () => {\n        expect(\n          studService\n            .connect(randomAddress)\n            .putInStud(4, highMating, seconds.day6)\n        ).to.be.revertedWith(\"StudService: unauthorized\");\n      });\n\n      it(\"should revert if we try to put a female horse into stud\", async () => {\n        expect(\n          studService.putInStud(1, highMating, seconds.day6)\n        ).to.be.revertedWith(\"StudService: horse is not male\");\n      });\n\n      it(\"should revert if minimum breed price is lower than required\", async () => {\n        expect(\n          studService.putInStud(\n            2,\n            ethers.utils.parseUnits(\"0.0001\"),\n            seconds.day1\n          )\n        ).to.be.revertedWith(\n          \"StudService: mating price lower than minimum breed price\"\n        );\n      });\n    });\n\n    describe(\"pausable\", async () => {\n      it(\"can only be paused by accounts with correct role\", async () => {\n        await studService.pause();\n        await studService.unpause();\n\n        expect(studService.connect(acc[1]).pause()).to.be.revertedWith(\n          \"StudService: unauthorized owner admin\"\n        );\n      });\n\n      it(\"should revert if paused\", async () => {\n        expect(await studService.paused()).to.be.false;\n        await studService.pause();\n        expect(await studService.paused()).to.be.true;\n\n        const minBreedingPrice = await studService.getMinimumBreedPrice(2);\n        expect(\n          studService.putInStud(2, minBreedingPrice, seconds.day1)\n        ).to.be.revertedWith(\"Pausable: paused\");\n      });\n    });\n\n    describe(\"addTimeFrame\", async () => {\n      it(\"reverts if timeframe is not > 0\", async () => {\n        expect(studService.addTimeFrame(0)).to.be.revertedWith(\n          \"StudService: invalid seconds frame\"\n        );\n      });\n\n      it(\"reverts if timeframe already exists\", async () => {\n        expect(studService.addTimeFrame(86400)).to.be.revertedWith(\n          \"StudService: seconds frame already active\"\n        );\n      });\n    });\n\n    describe(\"setBreedTypesAddress\", async () => {\n      it(\"reverts if breedtypes address is 0\", async () => {\n        expect(\n          studService.setBreedTypesAddress(ethers.constants.AddressZero)\n        ).to.be.revertedWith(\n          \"StudService: invalid breedtypes contract address\"\n        );\n      });\n    });\n\n    describe(\"setCoreAddress\", async () => {\n      it(\"reverts if core address is 0\", async () => {\n        expect(\n          studService.setCoreAddress(ethers.constants.AddressZero)\n        ).to.be.revertedWith(\"StudService: invalid core contract address\");\n      });\n    });\n\n    describe(\"removeTimeFrame\", async () => {\n      it(\"reverts if timeframe is not found when removing\", async () => {\n        expect(studService.removeTimeFrame(123)).to.be.revertedWith(\n          \"StudService: seconds frame is not found\"\n        );\n      });\n    });\n  });\n\n  describe(\"meta-transactions\", async () => {\n    it(\"should put a horse in stud\", async () => {\n      expect(await studService.isHorseInStud(2)).to.be.false;\n\n      let functionSignature = studService.interface.encodeFunctionData(\n        \"putInStud\",\n        [2, highMating, seconds.day3]\n      );\n\n      let typedData = await getTypedData({\n        name: \"ZED Stud\",\n        version: \"1\",\n        chainId: chainId,\n        verifyingContract: studService.address,\n        nonce: await studService.getNonce(owner.address),\n        from: owner.address,\n        functionSignature: functionSignature,\n      });\n\n      let signedData = await owner._signTypedData(\n        typedData.domain,\n        typedData.types,\n        typedData.message\n      );\n      let { r, s, v } = await getRsvFromSig(signedData);\n\n      await studService.executeMetaTransaction(\n        owner.address,\n        functionSignature,\n        r,\n        s,\n        v\n      );\n\n      expect(await studService.isHorseInStud(2)).to.be.true;\n    });\n\n    describe(\"reverts\", async () => {\n      it(\"should revert if minimum breed is not met\", async () => {\n        let functionSignature = studService.interface.encodeFunctionData(\n          \"putInStud\",\n          [2, ethers.utils.parseUnits(\"0.0001\"), seconds.day3]\n        );\n\n        expect(await studService.isHorseInStud(2)).to.be.false;\n\n        let typedData = await getTypedData({\n          name: \"ZED Stud\",\n          version: \"1\",\n          chainId: chainId,\n          verifyingContract: studService.address,\n          nonce: await studService.getNonce(owner.address),\n          from: owner.address,\n          functionSignature: functionSignature,\n        });\n\n        let signedData = await owner._signTypedData(\n          typedData.domain,\n          typedData.types,\n          typedData.message\n        );\n        let { r, s, v } = await getRsvFromSig(signedData);\n\n        expect(\n          studService.executeMetaTransaction(\n            owner.address,\n            functionSignature,\n            r,\n            s,\n            v\n          )\n        ).to.be.revertedWith(\n          \"StudService: mating price lower than minimum breed price\"\n        );\n      });\n    });\n  });\n});\n"
      ]
    },
    "mtime": 1627083004557
  },
  "{\"filename\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/BreedTypesTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "chai",
            "imported": [
              "expect"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "expect",
                "local": "expect"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/BreedTypesTest.js",
      "filenameRelative": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/BreedTypesTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "BreedTypesTest.js",
      "sourceFileName": "BreedTypesTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "BreedTypesTest"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar genesis = ethers.constants.HashZero;\nvar legendary = ethers.utils.formatBytes32String(\"legendary\");\nvar exclusive = ethers.utils.formatBytes32String(\"exclusive\");\nvar elite = ethers.utils.formatBytes32String(\"elite\");\nvar cross = ethers.utils.formatBytes32String(\"cross\");\nvar pacer = ethers.utils.formatBytes32String(\"pacer\");\n\ndescribe(\"BreedTypes\", function () {\n  var breedTypes = void 0,\n      acc = void 0;\n\n  before(\"populate accs\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ethers.getSigners();\n\n          case 2:\n            acc = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  beforeEach(\"setup instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return ethers.getContractFactory(\"BreedTypes\");\n\n          case 2:\n            breedTypes = _context2.sent;\n            _context2.next = 5;\n            return breedTypes.deploy();\n\n          case 5:\n            breedTypes = _context2.sent;\n            _context2.next = 8;\n            return breedTypes.deployed();\n\n          case 8:\n            _context2.next = 10;\n            return breedTypes.grantRole(ethers.utils.formatBytes32String(\"breed_types_owners\"), acc[0].address);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })));\n\n  describe(\"constructor\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            describe(\"_populateMatrix\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n              var compareBreedTypes;\n              return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                while (1) {\n                  switch (_context10.prev = _context10.next) {\n                    case 0:\n                      it(\"populates genesis matrix\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                          while (1) {\n                            switch (_context3.prev = _context3.next) {\n                              case 0:\n                                _context3.next = 2;\n                                return compareBreedTypes(genesis, genesis, \"legendary\");\n\n                              case 2:\n                                _context3.next = 4;\n                                return compareBreedTypes(genesis, legendary, \"exclusive\");\n\n                              case 4:\n                                _context3.next = 6;\n                                return compareBreedTypes(genesis, exclusive, \"exclusive\");\n\n                              case 6:\n                                _context3.next = 8;\n                                return compareBreedTypes(genesis, elite, \"elite\");\n\n                              case 8:\n                                _context3.next = 10;\n                                return compareBreedTypes(genesis, cross, \"cross\");\n\n                              case 10:\n                                _context3.next = 12;\n                                return compareBreedTypes(genesis, pacer, \"pacer\");\n\n                              case 12:\n                              case \"end\":\n                                return _context3.stop();\n                            }\n                          }\n                        }, _callee3, undefined);\n                      })));\n\n                      it(\"populates legendary matrix\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                          while (1) {\n                            switch (_context4.prev = _context4.next) {\n                              case 0:\n                                _context4.next = 2;\n                                return compareBreedTypes(legendary, genesis, \"exclusive\");\n\n                              case 2:\n                                _context4.next = 4;\n                                return compareBreedTypes(legendary, legendary, \"exclusive\");\n\n                              case 4:\n                                _context4.next = 6;\n                                return compareBreedTypes(legendary, exclusive, \"elite\");\n\n                              case 6:\n                                _context4.next = 8;\n                                return compareBreedTypes(legendary, elite, \"cross\");\n\n                              case 8:\n                                _context4.next = 10;\n                                return compareBreedTypes(legendary, cross, \"cross\");\n\n                              case 10:\n                                _context4.next = 12;\n                                return compareBreedTypes(legendary, pacer, \"pacer\");\n\n                              case 12:\n                              case \"end\":\n                                return _context4.stop();\n                            }\n                          }\n                        }, _callee4, undefined);\n                      })));\n\n                      it(\"populates exclusive matrix\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                          while (1) {\n                            switch (_context5.prev = _context5.next) {\n                              case 0:\n                                _context5.next = 2;\n                                return compareBreedTypes(exclusive, genesis, \"elite\");\n\n                              case 2:\n                                _context5.next = 4;\n                                return compareBreedTypes(exclusive, legendary, \"elite\");\n\n                              case 4:\n                                _context5.next = 6;\n                                return compareBreedTypes(exclusive, exclusive, \"elite\");\n\n                              case 6:\n                                _context5.next = 8;\n                                return compareBreedTypes(exclusive, elite, \"cross\");\n\n                              case 8:\n                                _context5.next = 10;\n                                return compareBreedTypes(exclusive, cross, \"cross\");\n\n                              case 10:\n                                _context5.next = 12;\n                                return compareBreedTypes(exclusive, pacer, \"pacer\");\n\n                              case 12:\n                              case \"end\":\n                                return _context5.stop();\n                            }\n                          }\n                        }, _callee5, undefined);\n                      })));\n\n                      it(\"populates elite matrix\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                          while (1) {\n                            switch (_context6.prev = _context6.next) {\n                              case 0:\n                                _context6.next = 2;\n                                return compareBreedTypes(elite, genesis, \"cross\");\n\n                              case 2:\n                                _context6.next = 4;\n                                return compareBreedTypes(elite, legendary, \"cross\");\n\n                              case 4:\n                                _context6.next = 6;\n                                return compareBreedTypes(elite, exclusive, \"cross\");\n\n                              case 6:\n                                _context6.next = 8;\n                                return compareBreedTypes(elite, elite, \"cross\");\n\n                              case 8:\n                                _context6.next = 10;\n                                return compareBreedTypes(elite, cross, \"cross\");\n\n                              case 10:\n                                _context6.next = 12;\n                                return compareBreedTypes(elite, pacer, \"pacer\");\n\n                              case 12:\n                              case \"end\":\n                                return _context6.stop();\n                            }\n                          }\n                        }, _callee6, undefined);\n                      })));\n\n                      it(\"populates cross matrix\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n                        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                          while (1) {\n                            switch (_context7.prev = _context7.next) {\n                              case 0:\n                                _context7.next = 2;\n                                return compareBreedTypes(cross, genesis, \"cross\");\n\n                              case 2:\n                                _context7.next = 4;\n                                return compareBreedTypes(cross, legendary, \"cross\");\n\n                              case 4:\n                                _context7.next = 6;\n                                return compareBreedTypes(cross, exclusive, \"cross\");\n\n                              case 6:\n                                _context7.next = 8;\n                                return compareBreedTypes(cross, elite, \"cross\");\n\n                              case 8:\n                                _context7.next = 10;\n                                return compareBreedTypes(cross, cross, \"pacer\");\n\n                              case 10:\n                                _context7.next = 12;\n                                return compareBreedTypes(cross, pacer, \"pacer\");\n\n                              case 12:\n                              case \"end\":\n                                return _context7.stop();\n                            }\n                          }\n                        }, _callee7, undefined);\n                      })));\n\n                      it(\"populates pacer matrix\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                          while (1) {\n                            switch (_context8.prev = _context8.next) {\n                              case 0:\n                                _context8.next = 2;\n                                return compareBreedTypes(pacer, genesis, \"pacer\");\n\n                              case 2:\n                                _context8.next = 4;\n                                return compareBreedTypes(pacer, legendary, \"pacer\");\n\n                              case 4:\n                                _context8.next = 6;\n                                return compareBreedTypes(pacer, exclusive, \"pacer\");\n\n                              case 6:\n                                _context8.next = 8;\n                                return compareBreedTypes(pacer, elite, \"pacer\");\n\n                              case 8:\n                                _context8.next = 10;\n                                return compareBreedTypes(pacer, cross, \"pacer\");\n\n                              case 10:\n                                _context8.next = 12;\n                                return compareBreedTypes(pacer, pacer, \"pacer\");\n\n                              case 12:\n                              case \"end\":\n                                return _context8.stop();\n                            }\n                          }\n                        }, _callee8, undefined);\n                      })));\n\n                      compareBreedTypes = function () {\n                        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(firstType, secondType, expectedType) {\n                          var contractType;\n                          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                            while (1) {\n                              switch (_context9.prev = _context9.next) {\n                                case 0:\n                                  _context9.next = 2;\n                                  return breedTypes.getBreedTypeFromMatrix(firstType, secondType);\n\n                                case 2:\n                                  contractType = _context9.sent;\n\n\n                                  (0, _chai.expect)(ethers.utils.parseBytes32String(contractType)).to.equal(expectedType);\n\n                                case 4:\n                                case \"end\":\n                                  return _context9.stop();\n                              }\n                            }\n                          }, _callee9, undefined);\n                        }));\n\n                        return function compareBreedTypes(_x, _x2, _x3) {\n                          return _ref11.apply(this, arguments);\n                        };\n                      }();\n\n                    case 7:\n                    case \"end\":\n                      return _context10.stop();\n                  }\n                }\n              }, _callee10, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, undefined);\n  })));\n\n  describe(\"setBreedType\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            it(\"sets the breed type for a horse id\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n              var contractType;\n              return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                while (1) {\n                  switch (_context12.prev = _context12.next) {\n                    case 0:\n                      _context12.next = 2;\n                      return breedTypes.setBreedType(100, ethers.utils.formatBytes32String(\"legendary\"));\n\n                    case 2:\n                      _context12.next = 4;\n                      return breedTypes.getBreedType(100);\n\n                    case 4:\n                      contractType = _context12.sent;\n\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(contractType)).to.equal(\"legendary\");\n\n                    case 6:\n                    case \"end\":\n                      return _context12.stop();\n                  }\n                }\n              }, _callee12, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13, undefined);\n  })));\n\n  describe(\"generateBreedType\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            it(\"generates breed type of horse based in parents\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n              var offspringType;\n              return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                while (1) {\n                  switch (_context14.prev = _context14.next) {\n                    case 0:\n                      _context14.next = 2;\n                      return breedTypes.setBreedType(100, ethers.utils.formatBytes32String(\"cross\"));\n\n                    case 2:\n                      _context14.next = 4;\n                      return breedTypes.setBreedType(101, ethers.utils.formatBytes32String(\"legendary\"));\n\n                    case 4:\n                      _context14.next = 6;\n                      return breedTypes.generateBreedType(131, 100, 101);\n\n                    case 6:\n                      _context14.next = 8;\n                      return breedTypes.getBreedType(131);\n\n                    case 8:\n                      offspringType = _context14.sent;\n\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(offspringType)).to.equal(\"cross\");\n\n                    case 10:\n                    case \"end\":\n                      return _context14.stop();\n                  }\n                }\n              }, _callee14, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15, undefined);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "BreedTypesTest.js"
      ],
      "names": [
        "genesis",
        "ethers",
        "constants",
        "HashZero",
        "legendary",
        "utils",
        "formatBytes32String",
        "exclusive",
        "elite",
        "cross",
        "pacer",
        "describe",
        "breedTypes",
        "acc",
        "before",
        "getSigners",
        "beforeEach",
        "getContractFactory",
        "deploy",
        "deployed",
        "grantRole",
        "address",
        "it",
        "compareBreedTypes",
        "firstType",
        "secondType",
        "expectedType",
        "getBreedTypeFromMatrix",
        "contractType",
        "parseBytes32String",
        "to",
        "equal",
        "setBreedType",
        "getBreedType",
        "generateBreedType",
        "offspringType"
      ],
      "mappings": "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",
      "file": "BreedTypesTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "sourcesContent": [
        "import { expect } from \"chai\";\n\nconst genesis = ethers.constants.HashZero;\nconst legendary = ethers.utils.formatBytes32String(\"legendary\");\nconst exclusive = ethers.utils.formatBytes32String(\"exclusive\");\nconst elite = ethers.utils.formatBytes32String(\"elite\");\nconst cross = ethers.utils.formatBytes32String(\"cross\");\nconst pacer = ethers.utils.formatBytes32String(\"pacer\");\n\ndescribe(\"BreedTypes\", () => {\n  let breedTypes, acc;\n\n  before(\"populate accs\", async () => {\n    acc = await ethers.getSigners();\n  });\n\n  beforeEach(\"setup instances\", async () => {\n    breedTypes = await ethers.getContractFactory(\"BreedTypes\");\n    breedTypes = await breedTypes.deploy();\n    await breedTypes.deployed();\n\n    await breedTypes.grantRole(\n      ethers.utils.formatBytes32String(\"breed_types_owners\"),\n      acc[0].address\n    );\n  });\n\n  describe(\"constructor\", async () => {\n    describe(\"_populateMatrix\", async () => {\n      it(\"populates genesis matrix\", async () => {\n        await compareBreedTypes(genesis, genesis, \"legendary\");\n        await compareBreedTypes(genesis, legendary, \"exclusive\");\n        await compareBreedTypes(genesis, exclusive, \"exclusive\");\n        await compareBreedTypes(genesis, elite, \"elite\");\n        await compareBreedTypes(genesis, cross, \"cross\");\n        await compareBreedTypes(genesis, pacer, \"pacer\");\n      });\n\n      it(\"populates legendary matrix\", async () => {\n        await compareBreedTypes(legendary, genesis, \"exclusive\");\n        await compareBreedTypes(legendary, legendary, \"exclusive\");\n        await compareBreedTypes(legendary, exclusive, \"elite\");\n        await compareBreedTypes(legendary, elite, \"cross\");\n        await compareBreedTypes(legendary, cross, \"cross\");\n        await compareBreedTypes(legendary, pacer, \"pacer\");\n      });\n\n      it(\"populates exclusive matrix\", async () => {\n        await compareBreedTypes(exclusive, genesis, \"elite\");\n        await compareBreedTypes(exclusive, legendary, \"elite\");\n        await compareBreedTypes(exclusive, exclusive, \"elite\");\n        await compareBreedTypes(exclusive, elite, \"cross\");\n        await compareBreedTypes(exclusive, cross, \"cross\");\n        await compareBreedTypes(exclusive, pacer, \"pacer\");\n      });\n\n      it(\"populates elite matrix\", async () => {\n        await compareBreedTypes(elite, genesis, \"cross\");\n        await compareBreedTypes(elite, legendary, \"cross\");\n        await compareBreedTypes(elite, exclusive, \"cross\");\n        await compareBreedTypes(elite, elite, \"cross\");\n        await compareBreedTypes(elite, cross, \"cross\");\n        await compareBreedTypes(elite, pacer, \"pacer\");\n      });\n\n      it(\"populates cross matrix\", async () => {\n        await compareBreedTypes(cross, genesis, \"cross\");\n        await compareBreedTypes(cross, legendary, \"cross\");\n        await compareBreedTypes(cross, exclusive, \"cross\");\n        await compareBreedTypes(cross, elite, \"cross\");\n        await compareBreedTypes(cross, cross, \"pacer\");\n        await compareBreedTypes(cross, pacer, \"pacer\");\n      });\n\n      it(\"populates pacer matrix\", async () => {\n        await compareBreedTypes(pacer, genesis, \"pacer\");\n        await compareBreedTypes(pacer, legendary, \"pacer\");\n        await compareBreedTypes(pacer, exclusive, \"pacer\");\n        await compareBreedTypes(pacer, elite, \"pacer\");\n        await compareBreedTypes(pacer, cross, \"pacer\");\n        await compareBreedTypes(pacer, pacer, \"pacer\");\n      });\n\n      const compareBreedTypes = async (firstType, secondType, expectedType) => {\n        let contractType = await breedTypes.getBreedTypeFromMatrix(\n          firstType,\n          secondType\n        );\n\n        expect(ethers.utils.parseBytes32String(contractType)).to.equal(\n          expectedType\n        );\n      };\n    });\n  });\n\n  describe(\"setBreedType\", async () => {\n    it(\"sets the breed type for a horse id\", async () => {\n      await breedTypes.setBreedType(\n        100,\n        ethers.utils.formatBytes32String(\"legendary\")\n      );\n\n      let contractType = await breedTypes.getBreedType(100);\n\n      expect(ethers.utils.parseBytes32String(contractType)).to.equal(\n        \"legendary\"\n      );\n    });\n  });\n\n  describe(\"generateBreedType\", async () => {\n    it(\"generates breed type of horse based in parents\", async () => {\n      await breedTypes.setBreedType(\n        100,\n        ethers.utils.formatBytes32String(\"cross\")\n      );\n      await breedTypes.setBreedType(\n        101,\n        ethers.utils.formatBytes32String(\"legendary\")\n      );\n\n      await breedTypes.generateBreedType(131, 100, 101);\n\n      let offspringType = await breedTypes.getBreedType(131);\n\n      expect(ethers.utils.parseBytes32String(offspringType)).to.equal(\"cross\");\n    });\n  });\n});\n"
      ]
    },
    "mtime": 1627083004714
  },
  "{\"filename\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment/BreedingTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../../utils",
            "imported": [
              "getTypedData",
              "getRsvFromSig",
              "increaseTimeBySeconds",
              "mineBlock",
              "chainId"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getTypedData",
                "local": "getTypedData"
              },
              {
                "kind": "named",
                "imported": "getRsvFromSig",
                "local": "getRsvFromSig"
              },
              {
                "kind": "named",
                "imported": "increaseTimeBySeconds",
                "local": "increaseTimeBySeconds"
              },
              {
                "kind": "named",
                "imported": "mineBlock",
                "local": "mineBlock"
              },
              {
                "kind": "named",
                "imported": "chainId",
                "local": "chainId"
              }
            ]
          },
          {
            "source": "chai",
            "imported": [
              "expect"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "expect",
                "local": "expect"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment/BreedingTest.js",
      "filenameRelative": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment/BreedingTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "BreedingTest.js",
      "sourceFileName": "BreedingTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "BreedingTest"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nvar _utils = require(\"../../utils\");\n\nvar _chai = require(\"chai\");\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar DEFAULT_COLOR = ethers.utils.formatBytes32String(\"Black\");\n\ndescribe(\"Breeding\", function () {\n  var core = void 0,\n      breedTypes = void 0,\n      breedingLogic = void 0,\n      breedingLogicInstance = void 0,\n      breedingProxy = void 0,\n      breedingProxyAdmin = void 0,\n      breeding = void 0,\n      studService = void 0,\n      horseData = void 0,\n      erc20 = void 0;\n\n  var acc = void 0,\n      owner = void 0,\n      poolAddress = void 0,\n      blockchainBrain = void 0,\n      amount = ethers.utils.parseUnits(\"0.2\"),\n      priceyAmount = ethers.utils.parseUnits(\"1\"),\n      maxWETH = ethers.utils.parseUnits(\"1000\");\n\n  before(\"populate accs\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ethers.getSigners();\n\n          case 2:\n            acc = _context.sent;\n\n            owner = acc[0];\n            poolAddress = acc[1];\n            blockchainBrain = acc[2];\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  beforeEach(\"get factories\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return ethers.getContractFactory(\"HorseData\");\n\n          case 2:\n            horseData = _context2.sent;\n            _context2.next = 5;\n            return ethers.getContractFactory(\"Core\");\n\n          case 5:\n            core = _context2.sent;\n            _context2.next = 8;\n            return ethers.getContractFactory(\"BreedTypes\");\n\n          case 8:\n            breedTypes = _context2.sent;\n            _context2.next = 11;\n            return ethers.getContractFactory(\"StudServiceV5\");\n\n          case 11:\n            studService = _context2.sent;\n            _context2.next = 14;\n            return ethers.getContractFactory(\"ERC20Test\");\n\n          case 14:\n            erc20 = _context2.sent;\n            _context2.next = 17;\n            return ethers.getContractFactory(\"Breeding\");\n\n          case 17:\n            breedingLogicInstance = _context2.sent;\n            _context2.next = 20;\n            return ethers.getContractFactory(\"ZedProxyAdmin\");\n\n          case 20:\n            breedingProxyAdmin = _context2.sent;\n            _context2.next = 23;\n            return ethers.getContractFactory(\"BreedingProxy\");\n\n          case 23:\n            breedingProxy = _context2.sent;\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })));\n\n  beforeEach(\"deploy instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return horseData.deploy();\n\n          case 2:\n            horseData = _context3.sent;\n            _context3.next = 5;\n            return horseData.deployed();\n\n          case 5:\n            _context3.next = 7;\n            return core.deploy(horseData.address);\n\n          case 7:\n            core = _context3.sent;\n            _context3.next = 10;\n            return core.deployed();\n\n          case 10:\n            _context3.next = 12;\n            return breedTypes.deploy();\n\n          case 12:\n            breedTypes = _context3.sent;\n            _context3.next = 15;\n            return breedTypes.deployed();\n\n          case 15:\n            _context3.next = 17;\n            return studService.deploy(core.address, horseData.address, breedTypes.address);\n\n          case 17:\n            studService = _context3.sent;\n            _context3.next = 20;\n            return studService.deployed();\n\n          case 20:\n            _context3.next = 22;\n            return erc20.deploy(ethers.utils.parseUnits(\"100\"));\n\n          case 22:\n            erc20 = _context3.sent;\n            _context3.next = 25;\n            return erc20.deployed();\n\n          case 25:\n            _context3.next = 27;\n            return breedingLogicInstance.deploy();\n\n          case 27:\n            breedingLogic = _context3.sent;\n            _context3.next = 30;\n            return breedingLogic.deployed();\n\n          case 30:\n            _context3.next = 32;\n            return breedingProxyAdmin.deploy();\n\n          case 32:\n            breedingProxyAdmin = _context3.sent;\n            _context3.next = 35;\n            return breedingProxyAdmin.deployed();\n\n          case 35:\n            _context3.next = 37;\n            return breedingProxy.deploy(breedingLogic.address, breedingProxyAdmin.address);\n\n          case 37:\n            breedingProxy = _context3.sent;\n            _context3.next = 40;\n            return breedingProxy.deployed();\n\n          case 40:\n\n            breeding = new ethers.Contract(breedingProxy.address, breedingLogic.interface);\n            breeding = breeding.connect(owner);\n\n          case 42:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  })));\n\n  beforeEach(\"setup initial state of instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return breedTypes.grantRole(ethers.utils.formatBytes32String(\"breed_types_owners\"), owner.address);\n\n          case 2:\n            _context4.next = 4;\n            return breeding.setDomainSeparator(\"ZED Breeding\", \"1\", _utils.chainId);\n\n          case 4:\n            _context4.next = 6;\n            return breeding.initialize(core.address, studService.address, breedTypes.address, erc20.address, poolAddress.address, acc[4].address);\n\n          case 6:\n            _context4.next = 8;\n            return breeding.grantRole(ethers.utils.formatBytes32String(\"breeding_owners\"), owner.address);\n\n          case 8:\n            _context4.next = 10;\n            return breedTypes.grantRole(ethers.utils.formatBytes32String(\"breed_types_contracts\"), breeding.address);\n\n          case 10:\n            _context4.next = 12;\n            return core.grantRole(ethers.utils.formatBytes32String(\"core_contracts\"), owner.address);\n\n          case 12:\n            _context4.next = 14;\n            return core.grantRole(ethers.utils.formatBytes32String(\"core_contracts\"), breeding.address);\n\n          case 14:\n            _context4.next = 16;\n            return core.grantRole(ethers.utils.formatBytes32String(\"core_owners\"), breeding.address);\n\n          case 16:\n            _context4.next = 18;\n            return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"FirstName\"), ethers.utils.formatBytes32String(\"Black\"));\n\n          case 18:\n            _context4.next = 20;\n            return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"Truc\"), ethers.utils.formatBytes32String(\"violet\"));\n\n          case 20:\n            _context4.next = 22;\n            return core.mintCustomHorse(acc[2].address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Trung\"), ethers.utils.formatBytes32String(\"blue\"));\n\n          case 22:\n            _context4.next = 24;\n            return studService.grantRole(ethers.utils.formatBytes32String(\"stud_owners\"), owner.address);\n\n          case 24:\n            _context4.next = 26;\n            return studService.putInStud(2, amount, 86400);\n\n          case 26:\n            _context4.next = 28;\n            return erc20.transfer(blockchainBrain.address, priceyAmount);\n\n          case 28:\n            _context4.next = 30;\n            return erc20.transfer(acc[5].address, priceyAmount);\n\n          case 30:\n            _context4.next = 32;\n            return erc20.connect(blockchainBrain).approve(breeding.address, maxWETH);\n\n          case 32:\n            _context4.next = 34;\n            return erc20.connect(acc[5]).approve(breeding.address, maxWETH);\n\n          case 34:\n            _context4.next = 36;\n            return erc20.approve(breeding.address, maxWETH);\n\n          case 36:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined);\n  }))\n\n  // Female ID 1 and Male ID 2\n  );\n\n  describe(\"initial proxy validation\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            it(\"should make deployer of contract admin of breeding owners\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n              var isDeployer;\n              return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.next = 2;\n                      return breeding.hasRole(ethers.utils.formatBytes32String(\"breeding_owners_admin\"), owner.address);\n\n                    case 2:\n                      isDeployer = _context5.sent;\n\n\n                      (0, _chai.expect)(isDeployer).to.be.true;\n\n                    case 4:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, _callee5, undefined);\n            })));\n\n            it(\"should set upgrade admin correctly\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n              return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                while (1) {\n                  switch (_context6.prev = _context6.next) {\n                    case 0:\n                      _context6.next = 2;\n                      return breedingProxyAdmin.getProxyImplementation(breedingProxy.address);\n\n                    case 2:\n                    case \"end\":\n                      return _context6.stop();\n                  }\n                }\n              }, _callee6, undefined);\n            })));\n\n            it(\"should upgrade to new implementation\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n              var newLogic;\n              return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      _context7.t0 = _chai.expect;\n                      _context7.next = 3;\n                      return breedingProxyAdmin.getProxyImplementation(breedingProxy.address);\n\n                    case 3:\n                      _context7.t1 = _context7.sent;\n                      _context7.t2 = breedingLogic.address;\n                      (0, _context7.t0)(_context7.t1).to.equal(_context7.t2);\n                      _context7.next = 8;\n                      return breedingLogicInstance.deploy();\n\n                    case 8:\n                      newLogic = _context7.sent;\n                      _context7.next = 11;\n                      return newLogic.deployed();\n\n                    case 11:\n                      _context7.next = 13;\n                      return breedingProxyAdmin.upgrade(breedingProxy.address, newLogic.address);\n\n                    case 13:\n                      _context7.t3 = _chai.expect;\n                      _context7.next = 16;\n                      return breedingProxyAdmin.getProxyImplementation(breedingProxy.address);\n\n                    case 16:\n                      _context7.t4 = _context7.sent;\n                      _context7.t5 = newLogic.address;\n                      (0, _context7.t3)(_context7.t4).to.equal(_context7.t5);\n\n                    case 19:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, _callee7, undefined);\n            })));\n\n            it(\"should revert when calling initialize() after upgrading\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n              var newLogic;\n              return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                while (1) {\n                  switch (_context8.prev = _context8.next) {\n                    case 0:\n                      _context8.next = 2;\n                      return breedingLogicInstance.deploy();\n\n                    case 2:\n                      newLogic = _context8.sent;\n                      _context8.next = 5;\n                      return newLogic.deployed();\n\n                    case 5:\n                      _context8.next = 7;\n                      return breedingProxyAdmin.upgrade(breedingProxy.address, newLogic.address);\n\n                    case 7:\n\n                      (0, _chai.expect)(breeding.initialize(core.address, studService.address, breedTypes.address, erc20.address, poolAddress.address, acc[2].address)).to.be.revertedWith(\"Initializable: contract is already initialized\");\n\n                    case 8:\n                    case \"end\":\n                      return _context8.stop();\n                  }\n                }\n              }, _callee8, undefined);\n            })));\n\n            it(\"should hold state after upgrading\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n              var newLogic;\n              return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                while (1) {\n                  switch (_context9.prev = _context9.next) {\n                    case 0:\n                      _context9.t0 = _chai.expect;\n                      _context9.next = 3;\n                      return breeding.hasRole(ethers.utils.formatBytes32String(\"breeding_owners_admin\"), blockchainBrain.address);\n\n                    case 3:\n                      _context9.t1 = _context9.sent;\n                      (0, _context9.t0)(_context9.t1).to.be.false;\n                      _context9.next = 7;\n                      return breeding.grantRoleAdmin(ethers.utils.formatBytes32String(\"breeding_owners_admin\"), blockchainBrain.address);\n\n                    case 7:\n                      _context9.t2 = _chai.expect;\n                      _context9.next = 10;\n                      return breeding.hasRole(ethers.utils.formatBytes32String(\"breeding_owners_admin\"), blockchainBrain.address);\n\n                    case 10:\n                      _context9.t3 = _context9.sent;\n                      (0, _context9.t2)(_context9.t3).to.be.true;\n                      _context9.next = 14;\n                      return breedingLogicInstance.deploy();\n\n                    case 14:\n                      newLogic = _context9.sent;\n                      _context9.next = 17;\n                      return newLogic.deployed();\n\n                    case 17:\n                      _context9.next = 19;\n                      return breedingProxyAdmin.upgrade(breedingProxy.address, newLogic.address);\n\n                    case 19:\n                      _context9.t4 = _chai.expect;\n                      _context9.next = 22;\n                      return breeding.hasRole(ethers.utils.formatBytes32String(\"breeding_owners_admin\"), blockchainBrain.address);\n\n                    case 22:\n                      _context9.t5 = _context9.sent;\n                      (0, _context9.t4)(_context9.t5).to.be.true;\n\n                    case 24:\n                    case \"end\":\n                      return _context9.stop();\n                  }\n                }\n              }, _callee9, undefined);\n            })));\n\n          case 5:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, undefined);\n  })));\n\n  describe(\"mix\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {\n    return regeneratorRuntime.wrap(function _callee25$(_context25) {\n      while (1) {\n        switch (_context25.prev = _context25.next) {\n          case 0:\n            it(\"should mix two horses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n              var firstOffspringStats, secondOffspringStats;\n              return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                while (1) {\n                  switch (_context11.prev = _context11.next) {\n                    case 0:\n                      _context11.t0 = _chai.expect;\n                      _context11.next = 3;\n                      return core.tokenExists(3);\n\n                    case 3:\n                      _context11.t1 = _context11.sent;\n                      (0, _context11.t0)(_context11.t1).to.be.false;\n                      _context11.next = 7;\n                      return doNormalMix();\n\n                    case 7:\n                      _context11.t2 = _chai.expect;\n                      _context11.next = 10;\n                      return core.tokenExists(3);\n\n                    case 10:\n                      _context11.t3 = _context11.sent;\n                      (0, _context11.t2)(_context11.t3).to.be.true;\n                      _context11.next = 14;\n                      return breeding.getHorseOffspringStats(1);\n\n                    case 14:\n                      firstOffspringStats = _context11.sent;\n                      _context11.next = 17;\n                      return breeding.getHorseOffspringStats(2);\n\n                    case 17:\n                      secondOffspringStats = _context11.sent;\n\n\n                      (0, _chai.expect)(firstOffspringStats.toNumber()).to.equal(1);\n                      (0, _chai.expect)(secondOffspringStats.toNumber()).to.equal(1);\n\n                      // Ensure the owner is the owner of the female horse\n                      _context11.t4 = _chai.expect;\n                      _context11.next = 23;\n                      return core.ownerOf(3);\n\n                    case 23:\n                      _context11.t5 = _context11.sent;\n                      _context11.t6 = owner.address;\n                      (0, _context11.t4)(_context11.t5).to.equal(_context11.t6);\n\n                    case 26:\n                    case \"end\":\n                      return _context11.stop();\n                  }\n                }\n              }, _callee11, undefined);\n            })));\n\n            it(\"should create a base value for the offspring\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n              var baseValue;\n              return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                while (1) {\n                  switch (_context12.prev = _context12.next) {\n                    case 0:\n                      _context12.next = 2;\n                      return doNormalMix();\n\n                    case 2:\n                      _context12.next = 4;\n                      return core.getBaseValue(3);\n\n                    case 4:\n                      baseValue = _context12.sent;\n\n                      (0, _chai.expect)(baseValue.toNumber()).to.not.equal(0);\n\n                      // The parents of the third horse are horses from the first Gen, they have high base value\n                      // so offspring's base value should be at least 40.\n                      // This is a bit tricky because those numbers are random so we need to make assumptions about the base value.\n                      (0, _chai.expect)(baseValue.toNumber()).to.be.above(39);\n\n                    case 7:\n                    case \"end\":\n                      return _context12.stop();\n                  }\n                }\n              }, _callee12, undefined);\n            })));\n\n            it(\"should return the correct genotype for a given horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n              var horseData;\n              return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                while (1) {\n                  switch (_context13.prev = _context13.next) {\n                    case 0:\n                      _context13.next = 2;\n                      return doNormalMix();\n\n                    case 2:\n                      _context13.next = 4;\n                      return core.getHorseData(3);\n\n                    case 4:\n                      horseData = _context13.sent;\n\n                      (0, _chai.expect)(horseData[3].toNumber()).to.equal(8);\n\n                    case 6:\n                    case \"end\":\n                      return _context13.stop();\n                  }\n                }\n              }, _callee13, undefined);\n            })));\n\n            it(\"should send part of the reserve amount to the owner of the horse when mixing\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n              var preBalance, currBalance;\n              return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                while (1) {\n                  switch (_context14.prev = _context14.next) {\n                    case 0:\n                      _context14.next = 2;\n                      return erc20.balanceOf(acc[2].address);\n\n                    case 2:\n                      preBalance = _context14.sent;\n                      _context14.next = 5;\n                      return core.mintCustomHorse(acc[2].address, 4, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"ThirdName\"), ethers.utils.formatBytes32String(\"Black\"));\n\n                    case 5:\n                      _context14.next = 7;\n                      return breeding.mix(2, 3, ethers.utils.formatBytes32String(\"colorNew\"), amount, acc[2].address);\n\n                    case 7:\n                      _context14.next = 9;\n                      return erc20.balanceOf(acc[2].address);\n\n                    case 9:\n                      currBalance = _context14.sent;\n\n\n                      (0, _chai.expect)(preBalance.gt(currBalance)).to.be.true;\n\n                    case 11:\n                    case \"end\":\n                      return _context14.stop();\n                  }\n                }\n              }, _callee14, undefined);\n            })));\n\n            it(\"should select the correct bloodline based in parents\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n              var data, cycles, i, offspringId;\n              return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                while (1) {\n                  switch (_context15.prev = _context15.next) {\n                    case 0:\n                      _context15.next = 2;\n                      return doNormalMix();\n\n                    case 2:\n                      _context15.next = 4;\n                      return core.getHorseData(3);\n\n                    case 4:\n                      data = _context15.sent;\n                      // Nakamoto + Nakamoto = Nakamoto\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[4])).to.equal(\"S\");\n\n                      cycles = 10;\n                      i = 3;\n\n                    case 8:\n                      if (!(i <= cycles)) {\n                        _context15.next = 14;\n                        break;\n                      }\n\n                      _context15.next = 11;\n                      return core.mintCustomHorse(acc[5].address, 4, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"Trung\" + i), ethers.utils.formatBytes32String(\"blue\"));\n\n                    case 11:\n                      i++;\n                      _context15.next = 8;\n                      break;\n\n                    case 14:\n                      _context15.next = 16;\n                      return core.nextTokenId();\n\n                    case 16:\n                      offspringId = _context15.sent;\n                      _context15.next = 19;\n                      return breeding.mix(2, cycles, ethers.utils.formatBytes32String(\"colorNew\"), amount, acc[5].address);\n\n                    case 19:\n                      _context15.next = 21;\n                      return core.getHorseData(offspringId);\n\n                    case 21:\n                      data = _context15.sent;\n\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(data[4])).to.equal(\"S\");\n\n                    case 23:\n                    case \"end\":\n                      return _context15.stop();\n                  }\n                }\n              }, _callee15, undefined);\n            })));\n\n            // BreedTypes test\n            it(\"should get breed type from parents\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n              var maleId, femaleId, offspringId, breedType;\n              return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                while (1) {\n                  switch (_context16.prev = _context16.next) {\n                    case 0:\n                      _context16.next = 2;\n                      return core.nextTokenId();\n\n                    case 2:\n                      maleId = _context16.sent;\n                      _context16.next = 5;\n                      return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Trung1111\"), ethers.utils.formatBytes32String(\"blue\"));\n\n                    case 5:\n                      _context16.next = 7;\n                      return core.nextTokenId();\n\n                    case 7:\n                      femaleId = _context16.sent;\n                      _context16.next = 10;\n                      return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"Truc2222\"), ethers.utils.formatBytes32String(\"violet\"));\n\n                    case 10:\n                      _context16.next = 12;\n                      return studService.putInStud(maleId, amount, 1);\n\n                    case 12:\n                      _context16.next = 14;\n                      return core.nextTokenId();\n\n                    case 14:\n                      offspringId = _context16.sent;\n                      _context16.next = 17;\n                      return breeding.mix(maleId, femaleId, ethers.utils.formatBytes32String(\"blueviolet\"), amount, owner.address);\n\n                    case 17:\n                      _context16.t0 = _chai.expect;\n                      _context16.next = 20;\n                      return core.tokenExists(offspringId);\n\n                    case 20:\n                      _context16.t1 = _context16.sent;\n                      (0, _context16.t0)(_context16.t1).to.be.true;\n                      _context16.next = 24;\n                      return breedTypes.getBreedType(offspringId);\n\n                    case 24:\n                      breedType = _context16.sent;\n\n\n                      (0, _chai.expect)(ethers.utils.parseBytes32String(breedType)).to.equal(\"legendary\");\n\n                    case 26:\n                    case \"end\":\n                      return _context16.stop();\n                  }\n                }\n              }, _callee16, undefined);\n            })));\n\n            describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {\n              return regeneratorRuntime.wrap(function _callee24$(_context24) {\n                while (1) {\n                  switch (_context24.prev = _context24.next) {\n                    case 0:\n                      it(\"should revert when mixing two offsprings from the same parents\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n                        var maleOffspring, femaleOffspring;\n                        return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                          while (1) {\n                            switch (_context17.prev = _context17.next) {\n                              case 0:\n                                _context17.next = 2;\n                                return createOffspring(2, 1, \"blue\", owner.address, \"M\");\n\n                              case 2:\n                                maleOffspring = _context17.sent;\n                                _context17.next = 5;\n                                return createOffspring(2, 1, \"yellow\", owner.address, \"F\");\n\n                              case 5:\n                                femaleOffspring = _context17.sent;\n                                _context17.next = 8;\n                                return studService.putInStud(maleOffspring, amount, 1000);\n\n                              case 8:\n                                _context17.next = 10;\n                                return (0, _utils.increaseTimeBySeconds)();\n\n                              case 10:\n                                _context17.next = 12;\n                                return (0, _utils.mineBlock)();\n\n                              case 12:\n\n                                (0, _chai.expect)(breeding.mix(maleOffspring, femaleOffspring, ethers.utils.formatBytes32String(\"colorNew\"), amount, owner.address)).to.be.revertedWith(\"Breeding: horses are brothers\");\n\n                              case 13:\n                              case \"end\":\n                                return _context17.stop();\n                            }\n                          }\n                        }, _callee17, undefined);\n                      })));\n\n                      it(\"should revert when mixing an offspring with a parent\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n                        var femaleOffspring;\n                        return regeneratorRuntime.wrap(function _callee18$(_context18) {\n                          while (1) {\n                            switch (_context18.prev = _context18.next) {\n                              case 0:\n                                _context18.next = 2;\n                                return createOffspring(2, 1, \"colorFemale\", owner.address, \"F\");\n\n                              case 2:\n                                femaleOffspring = _context18.sent;\n                                _context18.next = 5;\n                                return (0, _utils.increaseTimeBySeconds)();\n\n                              case 5:\n                                _context18.next = 7;\n                                return (0, _utils.mineBlock)();\n\n                              case 7:\n\n                                (0, _chai.expect)(breeding.mix(2, femaleOffspring, ethers.utils.formatBytes32String(\"colorNew\"), amount, owner.address)).to.be.revertedWith(\"Breeding: horses are directly related\");\n\n                              case 8:\n                              case \"end\":\n                                return _context18.stop();\n                            }\n                          }\n                        }, _callee18, undefined);\n                      })));\n\n                      it(\"should revert when first horse is not male\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n                        return regeneratorRuntime.wrap(function _callee19$(_context19) {\n                          while (1) {\n                            switch (_context19.prev = _context19.next) {\n                              case 0:\n                                // Mixing the two horses from the same parents (5 and 6)\n                                (0, _chai.expect)(breeding.mix(1, 1, ethers.utils.formatBytes32String(\"colorNew\"), amount, owner.address)).to.be.revertedWith(\"Breeding: expected male horse but received female\");\n\n                              case 1:\n                              case \"end\":\n                                return _context19.stop();\n                            }\n                          }\n                        }, _callee19, undefined);\n                      })));\n\n                      it(\"should revert when the second parameter isn't a female horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n                        return regeneratorRuntime.wrap(function _callee20$(_context20) {\n                          while (1) {\n                            switch (_context20.prev = _context20.next) {\n                              case 0:\n                                _context20.next = 2;\n                                return core.mintCustomHorse(blockchainBrain.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Trung2\"), ethers.utils.formatBytes32String(\"blue\"));\n\n                              case 2:\n\n                                // Mixing the two horses from the same parents (5 and 6)\n                                (0, _chai.expect)(breeding.mix(2, 3, ethers.utils.formatBytes32String(\"colorNew\"), amount, owner.address)).to.be.revertedWith(\"Breeding: expected female horse but received male\");\n\n                              case 3:\n                              case \"end\":\n                                return _context20.stop();\n                            }\n                          }\n                        }, _callee20, undefined);\n                      })));\n\n                      it(\"should revert when mixing with ancestors\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n                        var male2Id, firstOffspringMale, secondOffspringMale;\n                        return regeneratorRuntime.wrap(function _callee21$(_context21) {\n                          while (1) {\n                            switch (_context21.prev = _context21.next) {\n                              case 0:\n                                _context21.next = 2;\n                                return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"Truc22\"), ethers.utils.formatBytes32String(\"violet\"));\n\n                              case 2:\n\n                                // Male horse 2\n                                male2Id = 4;\n                                _context21.next = 5;\n                                return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Trung2\"), ethers.utils.formatBytes32String(\"blue\"));\n\n                              case 5:\n                                _context21.next = 7;\n                                return (0, _utils.increaseTimeBySeconds)();\n\n                              case 7:\n                                _context21.next = 9;\n                                return (0, _utils.mineBlock)();\n\n                              case 9:\n                                _context21.next = 11;\n                                return studService.putInStud(male2Id, amount, 100);\n\n                              case 11:\n                                _context21.next = 13;\n                                return createOffspring(2, 1, \"offspring\", owner.address, \"M\");\n\n                              case 13:\n                                firstOffspringMale = _context21.sent;\n                                _context21.next = 16;\n                                return studService.putInStud(firstOffspringMale, amount, 100);\n\n                              case 16:\n                                _context21.next = 18;\n                                return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"Trung3\"), ethers.utils.formatBytes32String(\"blue\"));\n\n                              case 18:\n                                _context21.next = 20;\n                                return (0, _utils.increaseTimeBySeconds)();\n\n                              case 20:\n                                _context21.next = 22;\n                                return (0, _utils.mineBlock)();\n\n                              case 22:\n                                _context21.next = 24;\n                                return createOffspring(firstOffspringMale, Number(firstOffspringMale) + 1, \"offspring\", owner.address, \"M\");\n\n                              case 24:\n                                secondOffspringMale = _context21.sent;\n                                _context21.next = 27;\n                                return studService.putInStud(secondOffspringMale, amount, 1);\n\n                              case 27:\n                                _context21.next = 29;\n                                return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Trung4\"), ethers.utils.formatBytes32String(\"blue\"));\n\n                              case 29:\n                                _context21.next = 31;\n                                return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"Trung5\"), ethers.utils.formatBytes32String(\"blue\"));\n\n                              case 31:\n                                _context21.next = 33;\n                                return (0, _utils.increaseTimeBySeconds)();\n\n                              case 33:\n                                _context21.next = 35;\n                                return (0, _utils.mineBlock)();\n\n                              case 35:\n                                _context21.next = 37;\n                                return createOffspring(firstOffspringMale, Number(secondOffspringMale) + 2, \"offspring\", owner.address, \"M\");\n\n                              case 37:\n\n                                // Trying to mate 12 with 9 should revert.\n                                (0, _chai.expect)(breeding.mix(secondOffspringMale, 1, ethers.utils.formatBytes32String(\"color\"), amount, owner.address)).to.be.revertedWith(\"Breeding: horse is grandchild\");\n\n                              case 38:\n                              case \"end\":\n                                return _context21.stop();\n                            }\n                          }\n                        }, _callee21, undefined);\n                      })));\n\n                      it(\"should revert if male is not old enough\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n                        var maleOffspring;\n                        return regeneratorRuntime.wrap(function _callee22$(_context22) {\n                          while (1) {\n                            switch (_context22.prev = _context22.next) {\n                              case 0:\n                                _context22.next = 2;\n                                return createOffspring(2, 1, \"yellow\", owner.address, \"M\");\n\n                              case 2:\n                                maleOffspring = _context22.sent;\n                                _context22.next = 5;\n                                return studService.putInStud(maleOffspring, amount, 1000);\n\n                              case 5:\n\n                                (0, _chai.expect)(breeding.mix(maleOffspring, 1, ethers.utils.formatBytes32String(\"Color\"), amount, owner.address)).to.be.revertedWith(\"Breeding: male is not old enough\");\n\n                              case 6:\n                              case \"end\":\n                                return _context22.stop();\n                            }\n                          }\n                        }, _callee22, undefined);\n                      })));\n\n                      it(\"should revert if female is not old enough\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n                        var femaleOffspring;\n                        return regeneratorRuntime.wrap(function _callee23$(_context23) {\n                          while (1) {\n                            switch (_context23.prev = _context23.next) {\n                              case 0:\n                                _context23.next = 2;\n                                return createOffspring(2, 1, \"blue\", owner.address, \"F\");\n\n                              case 2:\n                                femaleOffspring = _context23.sent;\n\n\n                                (0, _chai.expect)(breeding.mix(2, femaleOffspring, ethers.utils.formatBytes32String(\"Color\"), amount, owner.address)).to.be.revertedWith(\"Breeding: female is not old enough\");\n\n                              case 4:\n                              case \"end\":\n                                return _context23.stop();\n                            }\n                          }\n                        }, _callee23, undefined);\n                      })));\n\n                    case 7:\n                    case \"end\":\n                      return _context24.stop();\n                  }\n                }\n              }, _callee24, undefined);\n            })));\n\n          case 7:\n          case \"end\":\n            return _context25.stop();\n        }\n      }\n    }, _callee25, undefined);\n  })));\n\n  describe(\"migrateData\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27() {\n    return regeneratorRuntime.wrap(function _callee27$(_context27) {\n      while (1) {\n        switch (_context27.prev = _context27.next) {\n          case 0:\n            it(\"should migrate well\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {\n              var breedingData, parents, offsprings, offspringCounter, fatherParents, motherParents, offspringBreedType, offspringId;\n              return regeneratorRuntime.wrap(function _callee26$(_context26) {\n                while (1) {\n                  switch (_context26.prev = _context26.next) {\n                    case 0:\n                      breedingData = { 0: [\"1\", \"2\"], 1: [], 2: \"0\" };\n                      parents = breedingData[0];\n                      offsprings = breedingData[1];\n                      offspringCounter = 0;\n                      fatherParents = [0, 1];\n                      motherParents = [10, 11];\n                      offspringBreedType = ethers.utils.formatBytes32String(\"type\");\n                      offspringId = 14;\n                      _context26.next = 10;\n                      return breeding.grantRole(ethers.utils.formatBytes32String(\"breeding_owners\"), blockchainBrain.address);\n\n                    case 10:\n                      _context26.next = 12;\n                      return breeding.connect(blockchainBrain).migrateData(offspringId, parents, offsprings, offspringCounter, fatherParents, motherParents, offspringBreedType);\n\n                    case 12:\n                      _context26.t0 = _chai.expect;\n                      _context26.next = 15;\n                      return breeding.isHorseAlreadyMigrated(offspringId);\n\n                    case 15:\n                      _context26.t1 = _context26.sent;\n                      (0, _context26.t0)(_context26.t1).to.be.true;\n\n\n                      (0, _chai.expect)(breeding.connect(blockchainBrain).migrateData(offspringId, parents, offsprings, offspringCounter, fatherParents, motherParents, offspringBreedType)).to.be.revertedWith(\"Breeding: horse has been migrated already\");\n\n                    case 18:\n                    case \"end\":\n                      return _context26.stop();\n                  }\n                }\n              }, _callee26, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context27.stop();\n        }\n      }\n    }, _callee27, undefined);\n  })));\n\n  describe(\"pausable\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee30() {\n    return regeneratorRuntime.wrap(function _callee30$(_context30) {\n      while (1) {\n        switch (_context30.prev = _context30.next) {\n          case 0:\n            it(\"can only be paused by accounts with correct role\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28() {\n              return regeneratorRuntime.wrap(function _callee28$(_context28) {\n                while (1) {\n                  switch (_context28.prev = _context28.next) {\n                    case 0:\n                      _context28.next = 2;\n                      return breeding.pause();\n\n                    case 2:\n                      _context28.next = 4;\n                      return breeding.unpause();\n\n                    case 4:\n\n                      (0, _chai.expect)(breeding.connect(acc[1]).pause()).to.be.revertedWith(\"Breeding: unauthorized owner admin\");\n\n                    case 5:\n                    case \"end\":\n                      return _context28.stop();\n                  }\n                }\n              }, _callee28, undefined);\n            })));\n\n            it(\"should revert if contract is paused\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee29() {\n              return regeneratorRuntime.wrap(function _callee29$(_context29) {\n                while (1) {\n                  switch (_context29.prev = _context29.next) {\n                    case 0:\n                      _context29.next = 2;\n                      return breeding.pause();\n\n                    case 2:\n\n                      (0, _chai.expect)(breeding.mix(2, 1, ethers.utils.formatBytes32String(\"blueviolet\"), amount, owner.address)).to.be.revertedWith(\"Pausable: paused\");\n\n                    case 3:\n                    case \"end\":\n                      return _context29.stop();\n                  }\n                }\n              }, _callee29, undefined);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context30.stop();\n        }\n      }\n    }, _callee30, undefined);\n  })));\n\n  describe(\"funds transfer\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee41() {\n    return regeneratorRuntime.wrap(function _callee41$(_context41) {\n      while (1) {\n        switch (_context41.prev = _context41.next) {\n          case 0:\n            beforeEach(\"increase time by a month\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee31() {\n              return regeneratorRuntime.wrap(function _callee31$(_context31) {\n                while (1) {\n                  switch (_context31.prev = _context31.next) {\n                    case 0:\n                      _context31.next = 2;\n                      return (0, _utils.increaseTimeBySeconds)();\n\n                    case 2:\n                      _context31.next = 4;\n                      return (0, _utils.mineBlock)();\n\n                    case 4:\n                    case \"end\":\n                      return _context31.stop();\n                  }\n                }\n              }, _callee31, undefined);\n            })));\n\n            describe(\"different owners\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee35() {\n              return regeneratorRuntime.wrap(function _callee35$(_context35) {\n                while (1) {\n                  switch (_context35.prev = _context35.next) {\n                    case 0:\n                      // Horse 2 is in stud for 1 day and belongs to acc[2]\n\n                      it(\"sends correct amounts for 1 day in stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee32() {\n                        return regeneratorRuntime.wrap(function _callee32$(_context32) {\n                          while (1) {\n                            switch (_context32.prev = _context32.next) {\n                              case 0:\n                                _context32.t0 = _chai.expect;\n                                _context32.next = 3;\n                                return doNormalMix();\n\n                              case 3:\n                                _context32.t1 = _context32.sent;\n                                _context32.t2 = breeding;\n                                _context32.t3 = ethers.utils.parseUnits(\"0.08\");\n                                _context32.t4 = ethers.utils.parseUnits(\"0.09\");\n                                _context32.t5 = ethers.utils.parseUnits(\"0.03\");\n                                (0, _context32.t0)(_context32.t1).to.emit(_context32.t2, \"BreedingFunds\").withArgs(_context32.t3, _context32.t4, _context32.t5);\n\n                              case 9:\n                              case \"end\":\n                                return _context32.stop();\n                            }\n                          }\n                        }, _callee32, undefined);\n                      })));\n\n                      it(\"sends correct amounts for 3 day in stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee33() {\n                        return regeneratorRuntime.wrap(function _callee33$(_context33) {\n                          while (1) {\n                            switch (_context33.prev = _context33.next) {\n                              case 0:\n                                _context33.next = 2;\n                                return studService.removeFromStud(2);\n\n                              case 2:\n                                _context33.next = 4;\n                                return studService.putInStud(2, amount, 259200);\n\n                              case 4:\n                                _context33.t0 = _chai.expect;\n                                _context33.next = 7;\n                                return doNormalMix();\n\n                              case 7:\n                                _context33.t1 = _context33.sent;\n                                _context33.t2 = breeding;\n                                _context33.t3 = ethers.utils.parseUnits(\"0.096\");\n                                _context33.t4 = ethers.utils.parseUnits(\"0.074\");\n                                _context33.t5 = ethers.utils.parseUnits(\"0.03\");\n                                (0, _context33.t0)(_context33.t1).to.emit(_context33.t2, \"BreedingFunds\").withArgs(_context33.t3, _context33.t4, _context33.t5);\n\n                              case 13:\n                              case \"end\":\n                                return _context33.stop();\n                            }\n                          }\n                        }, _callee33, undefined);\n                      })));\n\n                      it(\"sends correct amounts for 7 day in stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee34() {\n                        return regeneratorRuntime.wrap(function _callee34$(_context34) {\n                          while (1) {\n                            switch (_context34.prev = _context34.next) {\n                              case 0:\n                                _context34.next = 2;\n                                return studService.removeFromStud(2);\n\n                              case 2:\n                                _context34.next = 4;\n                                return studService.putInStud(2, amount, 604800);\n\n                              case 4:\n                                _context34.t0 = _chai.expect;\n                                _context34.next = 7;\n                                return doNormalMix();\n\n                              case 7:\n                                _context34.t1 = _context34.sent;\n                                _context34.t2 = breeding;\n                                _context34.t3 = ethers.utils.parseUnits(\"0.112\");\n                                _context34.t4 = ethers.utils.parseUnits(\"0.058\");\n                                _context34.t5 = ethers.utils.parseUnits(\"0.03\");\n                                (0, _context34.t0)(_context34.t1).to.emit(_context34.t2, \"BreedingFunds\").withArgs(_context34.t3, _context34.t4, _context34.t5);\n\n                              case 13:\n                              case \"end\":\n                                return _context34.stop();\n                            }\n                          }\n                        }, _callee34, undefined);\n                      })));\n\n                    case 3:\n                    case \"end\":\n                      return _context35.stop();\n                  }\n                }\n              }, _callee35, undefined);\n            })));\n\n            describe(\"same owners\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee40() {\n              return regeneratorRuntime.wrap(function _callee40$(_context40) {\n                while (1) {\n                  switch (_context40.prev = _context40.next) {\n                    case 0:\n                      beforeEach(\"transfer token\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee36() {\n                        return regeneratorRuntime.wrap(function _callee36$(_context36) {\n                          while (1) {\n                            switch (_context36.prev = _context36.next) {\n                              case 0:\n                                _context36.next = 2;\n                                return core.connect(acc[2]).transferFrom(acc[2].address, owner.address, 2);\n\n                              case 2:\n                              case \"end\":\n                                return _context36.stop();\n                            }\n                          }\n                        }, _callee36, undefined);\n                      })));\n\n                      // Horse 2 is in stud for 1 day and already belongs to 'owner'.\n\n                      it(\"sends correct amounts for 1 day in stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee37() {\n                        return regeneratorRuntime.wrap(function _callee37$(_context37) {\n                          while (1) {\n                            switch (_context37.prev = _context37.next) {\n                              case 0:\n                                _context37.t0 = _chai.expect;\n                                _context37.next = 3;\n                                return doNormalMix();\n\n                              case 3:\n                                _context37.t1 = _context37.sent;\n                                _context37.t2 = breeding;\n                                _context37.t3 = ethers.utils.parseUnits(\"0.14\");\n                                _context37.t4 = ethers.utils.parseUnits(\"0.06\");\n                                (0, _context37.t0)(_context37.t1).to.emit(_context37.t2, \"BreedingFunds\").withArgs(\"0\", _context37.t3, _context37.t4);\n\n                              case 8:\n                              case \"end\":\n                                return _context37.stop();\n                            }\n                          }\n                        }, _callee37, undefined);\n                      })));\n\n                      it(\"sends correct amounts for 3 day in stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee38() {\n                        return regeneratorRuntime.wrap(function _callee38$(_context38) {\n                          while (1) {\n                            switch (_context38.prev = _context38.next) {\n                              case 0:\n                                _context38.next = 2;\n                                return studService.removeFromStud(2);\n\n                              case 2:\n                                _context38.next = 4;\n                                return studService.putInStud(2, amount, 259200);\n\n                              case 4:\n                                _context38.t0 = _chai.expect;\n                                _context38.next = 7;\n                                return doNormalMix();\n\n                              case 7:\n                                _context38.t1 = _context38.sent;\n                                _context38.t2 = breeding;\n                                _context38.t3 = ethers.utils.parseUnits(\"0.14\");\n                                _context38.t4 = ethers.utils.parseUnits(\"0.06\");\n                                (0, _context38.t0)(_context38.t1).to.emit(_context38.t2, \"BreedingFunds\").withArgs(\"0\", _context38.t3, _context38.t4);\n\n                              case 12:\n                              case \"end\":\n                                return _context38.stop();\n                            }\n                          }\n                        }, _callee38, undefined);\n                      })));\n\n                      it(\"sends correct amounts for 7 day in stud\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee39() {\n                        return regeneratorRuntime.wrap(function _callee39$(_context39) {\n                          while (1) {\n                            switch (_context39.prev = _context39.next) {\n                              case 0:\n                                _context39.next = 2;\n                                return studService.removeFromStud(2);\n\n                              case 2:\n                                _context39.next = 4;\n                                return studService.putInStud(2, amount, 604800);\n\n                              case 4:\n                                _context39.t0 = _chai.expect;\n                                _context39.next = 7;\n                                return doNormalMix();\n\n                              case 7:\n                                _context39.t1 = _context39.sent;\n                                _context39.t2 = breeding;\n                                _context39.t3 = ethers.utils.parseUnits(\"0.14\");\n                                _context39.t4 = ethers.utils.parseUnits(\"0.06\");\n                                (0, _context39.t0)(_context39.t1).to.emit(_context39.t2, \"BreedingFunds\").withArgs(\"0\", _context39.t3, _context39.t4);\n\n                              case 12:\n                              case \"end\":\n                                return _context39.stop();\n                            }\n                          }\n                        }, _callee39, undefined);\n                      })));\n\n                    case 4:\n                    case \"end\":\n                      return _context40.stop();\n                  }\n                }\n              }, _callee40, undefined);\n            })));\n\n          case 3:\n          case \"end\":\n            return _context41.stop();\n        }\n      }\n    }, _callee41, undefined);\n  })));\n\n  describe(\"meta-transactions\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee45() {\n    return regeneratorRuntime.wrap(function _callee45$(_context45) {\n      while (1) {\n        switch (_context45.prev = _context45.next) {\n          case 0:\n            it(\"should create a horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee42() {\n              var functionSignature, typedData, signedData, _ref44, r, s, v;\n\n              return regeneratorRuntime.wrap(function _callee42$(_context42) {\n                while (1) {\n                  switch (_context42.prev = _context42.next) {\n                    case 0:\n                      functionSignature = breeding.interface.encodeFunctionData(\"mix\", [2, 1, ethers.utils.formatBytes32String(\"Azul\"), amount, owner.address]);\n                      _context42.t0 = _chai.expect;\n                      _context42.next = 4;\n                      return core.tokenExists(3);\n\n                    case 4:\n                      _context42.t1 = _context42.sent;\n                      (0, _context42.t0)(_context42.t1).to.be.false;\n                      _context42.t2 = _utils.getTypedData;\n                      _context42.t3 = _utils.chainId;\n                      _context42.t4 = breeding.address;\n                      _context42.next = 11;\n                      return breeding.getNonce(owner.address);\n\n                    case 11:\n                      _context42.t5 = _context42.sent;\n                      _context42.t6 = owner.address;\n                      _context42.t7 = functionSignature;\n                      _context42.t8 = {\n                        name: \"ZED Breeding\",\n                        version: \"1\",\n                        chainId: _context42.t3,\n                        verifyingContract: _context42.t4,\n                        nonce: _context42.t5,\n                        from: _context42.t6,\n                        functionSignature: _context42.t7\n                      };\n                      _context42.next = 17;\n                      return (0, _context42.t2)(_context42.t8);\n\n                    case 17:\n                      typedData = _context42.sent;\n                      _context42.next = 20;\n                      return owner._signTypedData(typedData.domain, typedData.types, typedData.message);\n\n                    case 20:\n                      signedData = _context42.sent;\n                      _context42.next = 23;\n                      return (0, _utils.getRsvFromSig)(signedData);\n\n                    case 23:\n                      _ref44 = _context42.sent;\n                      r = _ref44.r;\n                      s = _ref44.s;\n                      v = _ref44.v;\n                      _context42.next = 29;\n                      return breeding.executeMetaTransaction(owner.address, functionSignature, r, s, v);\n\n                    case 29:\n                      _context42.t9 = _chai.expect;\n                      _context42.next = 32;\n                      return core.tokenExists(3);\n\n                    case 32:\n                      _context42.t10 = _context42.sent;\n                      (0, _context42.t9)(_context42.t10).to.be.true;\n                      _context42.t11 = _chai.expect;\n                      _context42.next = 37;\n                      return core.nextTokenId();\n\n                    case 37:\n                      _context42.t12 = _context42.sent;\n                      (0, _context42.t11)(_context42.t12).to.equal(4);\n\n                    case 39:\n                    case \"end\":\n                      return _context42.stop();\n                  }\n                }\n              }, _callee42, undefined);\n            })));\n\n            describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee44() {\n              return regeneratorRuntime.wrap(function _callee44$(_context44) {\n                while (1) {\n                  switch (_context44.prev = _context44.next) {\n                    case 0:\n                      it(\"should revert if male ID is not male\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee43() {\n                        var functionSignature, typedData, signedData, _ref47, r, s, v;\n\n                        return regeneratorRuntime.wrap(function _callee43$(_context43) {\n                          while (1) {\n                            switch (_context43.prev = _context43.next) {\n                              case 0:\n                                functionSignature = breeding.interface.encodeFunctionData(\"mix\", [1, 2, ethers.utils.formatBytes32String(\"Azul\"), amount, owner.address]);\n                                _context43.t0 = _utils.getTypedData;\n                                _context43.t1 = _utils.chainId;\n                                _context43.t2 = breeding.address;\n                                _context43.next = 6;\n                                return breeding.getNonce(owner.address);\n\n                              case 6:\n                                _context43.t3 = _context43.sent;\n                                _context43.t4 = owner.address;\n                                _context43.t5 = functionSignature;\n                                _context43.t6 = {\n                                  name: \"ZED Breeding\",\n                                  version: \"1\",\n                                  chainId: _context43.t1,\n                                  verifyingContract: _context43.t2,\n                                  nonce: _context43.t3,\n                                  from: _context43.t4,\n                                  functionSignature: _context43.t5\n                                };\n                                _context43.next = 12;\n                                return (0, _context43.t0)(_context43.t6);\n\n                              case 12:\n                                typedData = _context43.sent;\n                                _context43.next = 15;\n                                return owner._signTypedData(typedData.domain, typedData.types, typedData.message);\n\n                              case 15:\n                                signedData = _context43.sent;\n                                _context43.next = 18;\n                                return (0, _utils.getRsvFromSig)(signedData);\n\n                              case 18:\n                                _ref47 = _context43.sent;\n                                r = _ref47.r;\n                                s = _ref47.s;\n                                v = _ref47.v;\n\n\n                                (0, _chai.expect)(breeding.executeMetaTransaction(owner.address, functionSignature, r, s, v)).to.be.revertedWith(\"Breeding: expected male horse but received female\");\n\n                              case 23:\n                              case \"end\":\n                                return _context43.stop();\n                            }\n                          }\n                        }, _callee43, undefined);\n                      })));\n\n                    case 1:\n                    case \"end\":\n                      return _context44.stop();\n                  }\n                }\n              }, _callee44, undefined);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context45.stop();\n        }\n      }\n    }, _callee45, undefined);\n  })));\n\n  var doNormalMix = function () {\n    var _ref48 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee46() {\n      var account = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : owner;\n      var sender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : owner.address;\n      return regeneratorRuntime.wrap(function _callee46$(_context46) {\n        while (1) {\n          switch (_context46.prev = _context46.next) {\n            case 0:\n              _context46.next = 2;\n              return breeding.connect(account).mix(2, 1, DEFAULT_COLOR, amount, sender);\n\n            case 2:\n              return _context46.abrupt(\"return\", _context46.sent);\n\n            case 3:\n            case \"end\":\n              return _context46.stop();\n          }\n        }\n      }, _callee46, undefined);\n    }));\n\n    return function doNormalMix() {\n      return _ref48.apply(this, arguments);\n    };\n  }();\n\n  var createOffspring = function () {\n    var _ref49 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee47(male, female, color, from, wantedGender) {\n      var offspringId, sex;\n      return regeneratorRuntime.wrap(function _callee47$(_context47) {\n        while (1) {\n          switch (_context47.prev = _context47.next) {\n            case 0:\n              offspringId = void 0;\n\n            case 1:\n              if (!true) {\n                _context47.next = 14;\n                break;\n              }\n\n              _context47.next = 4;\n              return core.nextTokenId();\n\n            case 4:\n              offspringId = _context47.sent;\n              _context47.next = 7;\n              return breeding.mix(male, female, ethers.utils.formatBytes32String(color), amount, from);\n\n            case 7:\n              _context47.next = 9;\n              return breeding.getHorseSex(offspringId);\n\n            case 9:\n              sex = _context47.sent;\n\n              if (!(ethers.utils.parseBytes32String(sex) === wantedGender)) {\n                _context47.next = 12;\n                break;\n              }\n\n              return _context47.abrupt(\"break\", 14);\n\n            case 12:\n              _context47.next = 1;\n              break;\n\n            case 14:\n              return _context47.abrupt(\"return\", offspringId);\n\n            case 15:\n            case \"end\":\n              return _context47.stop();\n          }\n        }\n      }, _callee47, undefined);\n    }));\n\n    return function createOffspring(_x3, _x4, _x5, _x6, _x7) {\n      return _ref49.apply(this, arguments);\n    };\n  }();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "BreedingTest.js"
      ],
      "names": [
        "DEFAULT_COLOR",
        "ethers",
        "utils",
        "formatBytes32String",
        "describe",
        "core",
        "breedTypes",
        "breedingLogic",
        "breedingLogicInstance",
        "breedingProxy",
        "breedingProxyAdmin",
        "breeding",
        "studService",
        "horseData",
        "erc20",
        "acc",
        "owner",
        "poolAddress",
        "blockchainBrain",
        "amount",
        "parseUnits",
        "priceyAmount",
        "maxWETH",
        "before",
        "getSigners",
        "beforeEach",
        "getContractFactory",
        "deploy",
        "deployed",
        "address",
        "Contract",
        "interface",
        "connect",
        "grantRole",
        "setDomainSeparator",
        "chainId",
        "initialize",
        "mintCustomHorse",
        "putInStud",
        "transfer",
        "approve",
        "it",
        "hasRole",
        "isDeployer",
        "to",
        "be",
        "true",
        "getProxyImplementation",
        "expect",
        "equal",
        "newLogic",
        "upgrade",
        "revertedWith",
        "false",
        "grantRoleAdmin",
        "tokenExists",
        "doNormalMix",
        "getHorseOffspringStats",
        "firstOffspringStats",
        "secondOffspringStats",
        "toNumber",
        "ownerOf",
        "getBaseValue",
        "baseValue",
        "not",
        "above",
        "getHorseData",
        "balanceOf",
        "preBalance",
        "mix",
        "currBalance",
        "gt",
        "data",
        "parseBytes32String",
        "cycles",
        "i",
        "nextTokenId",
        "offspringId",
        "maleId",
        "femaleId",
        "getBreedType",
        "breedType",
        "createOffspring",
        "maleOffspring",
        "femaleOffspring",
        "male2Id",
        "firstOffspringMale",
        "Number",
        "secondOffspringMale",
        "breedingData",
        "parents",
        "offsprings",
        "offspringCounter",
        "fatherParents",
        "motherParents",
        "offspringBreedType",
        "migrateData",
        "isHorseAlreadyMigrated",
        "pause",
        "unpause",
        "emit",
        "withArgs",
        "removeFromStud",
        "transferFrom",
        "functionSignature",
        "encodeFunctionData",
        "getTypedData",
        "getNonce",
        "name",
        "version",
        "verifyingContract",
        "nonce",
        "from",
        "typedData",
        "_signTypedData",
        "domain",
        "types",
        "message",
        "signedData",
        "r",
        "s",
        "v",
        "executeMetaTransaction",
        "account",
        "sender",
        "male",
        "female",
        "color",
        "wantedGender",
        "getHorseSex",
        "sex"
      ],
      "mappings": "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",
      "file": "BreedingTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment",
      "sourcesContent": [
        "import {\n  getTypedData,\n  getRsvFromSig,\n  increaseTimeBySeconds,\n  mineBlock,\n  chainId,\n} from \"../../utils\";\n\nimport { expect } from \"chai\";\n\nconst DEFAULT_COLOR = ethers.utils.formatBytes32String(\"Black\");\n\ndescribe(\"Breeding\", () => {\n  let core,\n    breedTypes,\n    breedingLogic,\n    breedingLogicInstance,\n    breedingProxy,\n    breedingProxyAdmin,\n    breeding,\n    studService,\n    horseData,\n    erc20;\n\n  let acc,\n    owner,\n    poolAddress,\n    blockchainBrain,\n    amount = ethers.utils.parseUnits(\"0.2\"),\n    priceyAmount = ethers.utils.parseUnits(\"1\"),\n    maxWETH = ethers.utils.parseUnits(\"1000\");\n\n  before(\"populate accs\", async () => {\n    acc = await ethers.getSigners();\n    owner = acc[0];\n    poolAddress = acc[1];\n    blockchainBrain = acc[2];\n  });\n\n  beforeEach(\"get factories\", async () => {\n    horseData = await ethers.getContractFactory(\"HorseData\");\n    core = await ethers.getContractFactory(\"Core\");\n    breedTypes = await ethers.getContractFactory(\"BreedTypes\");\n    studService = await ethers.getContractFactory(\"StudServiceV5\");\n    erc20 = await ethers.getContractFactory(\"ERC20Test\");\n    breedingLogicInstance = await ethers.getContractFactory(\"Breeding\");\n    breedingProxyAdmin = await ethers.getContractFactory(\"ZedProxyAdmin\");\n    breedingProxy = await ethers.getContractFactory(\"BreedingProxy\");\n  });\n\n  beforeEach(\"deploy instances\", async () => {\n    horseData = await horseData.deploy();\n    await horseData.deployed();\n\n    core = await core.deploy(horseData.address);\n    await core.deployed();\n\n    breedTypes = await breedTypes.deploy();\n    await breedTypes.deployed();\n\n    studService = await studService.deploy(\n      core.address,\n      horseData.address,\n      breedTypes.address\n    );\n    await studService.deployed();\n\n    erc20 = await erc20.deploy(ethers.utils.parseUnits(\"100\"));\n    await erc20.deployed();\n\n    // Deploys Breeding Logic instance\n    breedingLogic = await breedingLogicInstance.deploy();\n    await breedingLogic.deployed();\n\n    // Deploys Breeding Admin to be used as admin of BreedingProxy\n    breedingProxyAdmin = await breedingProxyAdmin.deploy();\n    await breedingProxyAdmin.deployed();\n\n    // Deploys proxy instance\n    breedingProxy = await breedingProxy.deploy(\n      breedingLogic.address,\n      breedingProxyAdmin.address\n    );\n    await breedingProxy.deployed();\n\n    breeding = new ethers.Contract(\n      breedingProxy.address,\n      breedingLogic.interface\n    );\n    breeding = breeding.connect(owner);\n  });\n\n  beforeEach(\"setup initial state of instances\", async () => {\n    await breedTypes.grantRole(\n      ethers.utils.formatBytes32String(\"breed_types_owners\"),\n      owner.address\n    );\n\n    await breeding.setDomainSeparator(\"ZED Breeding\", \"1\", chainId);\n\n    await breeding.initialize(\n      core.address,\n      studService.address,\n      breedTypes.address,\n      erc20.address,\n      poolAddress.address,\n      acc[4].address\n    );\n\n    await breeding.grantRole(\n      ethers.utils.formatBytes32String(\"breeding_owners\"),\n      owner.address\n    );\n\n    await breedTypes.grantRole(\n      ethers.utils.formatBytes32String(\"breed_types_contracts\"),\n      breeding.address\n    );\n\n    await core.grantRole(\n      ethers.utils.formatBytes32String(\"core_contracts\"),\n      owner.address\n    );\n\n    // Core need to grant CORE_CONTRACTS_ROLE and CORE_OWNERS_ROLE for Breeding to able to invoke method Core.mintOffspring\n    await core.grantRole(\n      ethers.utils.formatBytes32String(\"core_contracts\"),\n      breeding.address\n    );\n    await core.grantRole(\n      ethers.utils.formatBytes32String(\"core_owners\"),\n      breeding.address\n    );\n\n    // We cannot interact with ID 0\n    await core.mintCustomHorse(\n      owner.address,\n      4,\n      ethers.utils.formatBytes32String(\"Male\"),\n      ethers.utils.formatBytes32String(\"FirstName\"),\n      ethers.utils.formatBytes32String(\"Black\")\n    );\n\n    // 1\n    await core.mintCustomHorse(\n      owner.address,\n      4,\n      ethers.utils.formatBytes32String(\"Female\"),\n      ethers.utils.formatBytes32String(\"Truc\"),\n      ethers.utils.formatBytes32String(\"violet\")\n    );\n\n    // 2\n    await core.mintCustomHorse(\n      acc[2].address,\n      4,\n      ethers.utils.formatBytes32String(\"Male\"),\n      ethers.utils.formatBytes32String(\"Trung\"),\n      ethers.utils.formatBytes32String(\"blue\")\n    );\n\n    await studService.grantRole(\n      ethers.utils.formatBytes32String(\"stud_owners\"),\n      owner.address\n    );\n    await studService.putInStud(2, amount, 86400);\n\n    await erc20.transfer(blockchainBrain.address, priceyAmount);\n    await erc20.transfer(acc[5].address, priceyAmount);\n    await erc20.connect(blockchainBrain).approve(breeding.address, maxWETH);\n    await erc20.connect(acc[5]).approve(breeding.address, maxWETH);\n    await erc20.approve(breeding.address, maxWETH);\n\n    // Female ID 1 and Male ID 2\n  });\n\n  describe(\"initial proxy validation\", async () => {\n    it(\"should make deployer of contract admin of breeding owners\", async () => {\n      const isDeployer = await breeding.hasRole(\n        ethers.utils.formatBytes32String(\"breeding_owners_admin\"),\n        owner.address\n      );\n\n      expect(isDeployer).to.be.true;\n    });\n\n    it(\"should set upgrade admin correctly\", async () => {\n      // only admin can call this function so if it goes through it's ok\n      await breedingProxyAdmin.getProxyImplementation(breedingProxy.address);\n    });\n\n    it(\"should upgrade to new implementation\", async () => {\n      expect(\n        await breedingProxyAdmin.getProxyImplementation(breedingProxy.address)\n      ).to.equal(breedingLogic.address);\n\n      const newLogic = await breedingLogicInstance.deploy();\n      await newLogic.deployed();\n\n      await breedingProxyAdmin.upgrade(breedingProxy.address, newLogic.address);\n\n      expect(\n        await breedingProxyAdmin.getProxyImplementation(breedingProxy.address)\n      ).to.equal(newLogic.address);\n    });\n\n    it(\"should revert when calling initialize() after upgrading\", async () => {\n      const newLogic = await breedingLogicInstance.deploy();\n      await newLogic.deployed();\n\n      await breedingProxyAdmin.upgrade(breedingProxy.address, newLogic.address);\n\n      expect(\n        breeding.initialize(\n          core.address,\n          studService.address,\n          breedTypes.address,\n          erc20.address,\n          poolAddress.address,\n          acc[2].address\n        )\n      ).to.be.revertedWith(\"Initializable: contract is already initialized\");\n    });\n\n    it(\"should hold state after upgrading\", async () => {\n      expect(\n        await breeding.hasRole(\n          ethers.utils.formatBytes32String(\"breeding_owners_admin\"),\n          blockchainBrain.address\n        )\n      ).to.be.false;\n\n      await breeding.grantRoleAdmin(\n        ethers.utils.formatBytes32String(\"breeding_owners_admin\"),\n        blockchainBrain.address\n      );\n\n      expect(\n        await breeding.hasRole(\n          ethers.utils.formatBytes32String(\"breeding_owners_admin\"),\n          blockchainBrain.address\n        )\n      ).to.be.true;\n\n      const newLogic = await breedingLogicInstance.deploy();\n      await newLogic.deployed();\n\n      await breedingProxyAdmin.upgrade(breedingProxy.address, newLogic.address);\n\n      expect(\n        await breeding.hasRole(\n          ethers.utils.formatBytes32String(\"breeding_owners_admin\"),\n          blockchainBrain.address\n        )\n      ).to.be.true;\n    });\n  });\n\n  describe(\"mix\", async () => {\n    it(\"should mix two horses\", async () => {\n      expect(await core.tokenExists(3)).to.be.false;\n\n      await doNormalMix();\n\n      expect(await core.tokenExists(3)).to.be.true;\n\n      let firstOffspringStats = await breeding.getHorseOffspringStats(1);\n      let secondOffspringStats = await breeding.getHorseOffspringStats(2);\n\n      expect(firstOffspringStats.toNumber()).to.equal(1);\n      expect(secondOffspringStats.toNumber()).to.equal(1);\n\n      // Ensure the owner is the owner of the female horse\n      expect(await core.ownerOf(3)).to.equal(owner.address);\n    });\n\n    it(\"should create a base value for the offspring\", async () => {\n      await doNormalMix();\n\n      let baseValue = await core.getBaseValue(3);\n      expect(baseValue.toNumber()).to.not.equal(0);\n\n      // The parents of the third horse are horses from the first Gen, they have high base value\n      // so offspring's base value should be at least 40.\n      // This is a bit tricky because those numbers are random so we need to make assumptions about the base value.\n      expect(baseValue.toNumber()).to.be.above(39);\n    });\n\n    it(\"should return the correct genotype for a given horse\", async () => {\n      await doNormalMix();\n\n      let horseData = await core.getHorseData(3);\n      expect(horseData[3].toNumber()).to.equal(8);\n    });\n\n    it(\"should send part of the reserve amount to the owner of the horse when mixing\", async () => {\n      let preBalance = await erc20.balanceOf(acc[2].address);\n\n      await core.mintCustomHorse(\n        acc[2].address,\n        4,\n        ethers.utils.formatBytes32String(\"Female\"),\n        ethers.utils.formatBytes32String(\"ThirdName\"),\n        ethers.utils.formatBytes32String(\"Black\")\n      );\n\n      await breeding.mix(\n        2,\n        3,\n        ethers.utils.formatBytes32String(\"colorNew\"),\n        amount,\n        acc[2].address\n      );\n\n      let currBalance = await erc20.balanceOf(acc[2].address);\n\n      expect(preBalance.gt(currBalance)).to.be.true;\n    });\n\n    it(\"should select the correct bloodline based in parents\", async () => {\n      await doNormalMix();\n\n      let data = await core.getHorseData(3); // Nakamoto + Nakamoto = Nakamoto\n\n      expect(ethers.utils.parseBytes32String(data[4])).to.equal(\"S\");\n\n      const cycles = 10;\n      for (let i = 3; i <= cycles; i++) {\n        await core.mintCustomHorse(\n          acc[5].address,\n          4,\n          ethers.utils.formatBytes32String(\"Female\"),\n          ethers.utils.formatBytes32String(`Trung${i}`),\n          ethers.utils.formatBytes32String(\"blue\")\n        );\n      }\n\n      const offspringId = await core.nextTokenId();\n      await breeding.mix(\n        2,\n        cycles,\n        ethers.utils.formatBytes32String(\"colorNew\"),\n        amount,\n        acc[5].address\n      );\n\n      data = await core.getHorseData(offspringId);\n\n      expect(ethers.utils.parseBytes32String(data[4])).to.equal(\"S\");\n    });\n\n    // BreedTypes test\n    it(\"should get breed type from parents\", async () => {\n      // Male horse\n      const maleId = await core.nextTokenId();\n      await core.mintCustomHorse(\n        owner.address,\n        4,\n        ethers.utils.formatBytes32String(\"Male\"),\n        ethers.utils.formatBytes32String(\"Trung1111\"),\n        ethers.utils.formatBytes32String(\"blue\")\n      );\n\n      // Female horse\n      const femaleId = await core.nextTokenId();\n      await core.mintCustomHorse(\n        owner.address,\n        4,\n        ethers.utils.formatBytes32String(\"Female\"),\n        ethers.utils.formatBytes32String(\"Truc2222\"),\n        ethers.utils.formatBytes32String(\"violet\")\n      );\n\n      // Put a male horse into stud\n      await studService.putInStud(maleId, amount, 1);\n\n      const offspringId = await core.nextTokenId();\n      await breeding.mix(\n        maleId,\n        femaleId,\n        ethers.utils.formatBytes32String(\"blueviolet\"),\n        amount,\n        owner.address\n      );\n\n      expect(await core.tokenExists(offspringId)).to.be.true;\n\n      // Parents are Genesis so we should have a Legendary\n      let breedType = await breedTypes.getBreedType(offspringId);\n\n      expect(ethers.utils.parseBytes32String(breedType)).to.equal(\"legendary\");\n    });\n\n    describe(\"reverts\", async () => {\n      it(\"should revert when mixing two offsprings from the same parents\", async () => {\n        let maleOffspring = await createOffspring(\n          2,\n          1,\n          \"blue\",\n          owner.address,\n          \"M\"\n        );\n        let femaleOffspring = await createOffspring(\n          2,\n          1,\n          \"yellow\",\n          owner.address,\n          \"F\"\n        );\n\n        await studService.putInStud(maleOffspring, amount, 1000);\n\n        await increaseTimeBySeconds();\n        await mineBlock();\n\n        expect(\n          breeding.mix(\n            maleOffspring,\n            femaleOffspring,\n            ethers.utils.formatBytes32String(\"colorNew\"),\n            amount,\n            owner.address\n          )\n        ).to.be.revertedWith(\"Breeding: horses are brothers\");\n      });\n\n      it(\"should revert when mixing an offspring with a parent\", async () => {\n        let femaleOffspring = await createOffspring(\n          2,\n          1,\n          \"colorFemale\",\n          owner.address,\n          \"F\"\n        );\n\n        await increaseTimeBySeconds();\n        await mineBlock();\n\n        expect(\n          breeding.mix(\n            2,\n            femaleOffspring,\n            ethers.utils.formatBytes32String(\"colorNew\"),\n            amount,\n            owner.address\n          )\n        ).to.be.revertedWith(\"Breeding: horses are directly related\");\n      });\n\n      it(\"should revert when first horse is not male\", async () => {\n        // Mixing the two horses from the same parents (5 and 6)\n        expect(\n          breeding.mix(\n            1,\n            1,\n            ethers.utils.formatBytes32String(\"colorNew\"),\n            amount,\n            owner.address\n          )\n        ).to.be.revertedWith(\n          \"Breeding: expected male horse but received female\"\n        );\n      });\n\n      it(\"should revert when the second parameter isn't a female horse\", async () => {\n        await core.mintCustomHorse(\n          blockchainBrain.address,\n          4,\n          ethers.utils.formatBytes32String(\"Male\"),\n          ethers.utils.formatBytes32String(\"Trung2\"),\n          ethers.utils.formatBytes32String(\"blue\")\n        );\n\n        // Mixing the two horses from the same parents (5 and 6)\n        expect(\n          breeding.mix(\n            2,\n            3,\n            ethers.utils.formatBytes32String(\"colorNew\"),\n            amount,\n            owner.address\n          )\n        ).to.be.revertedWith(\n          \"Breeding: expected female horse but received male\"\n        );\n      });\n\n      it(\"should revert when mixing with ancestors\", async () => {\n        // Ancestors have a limit until grandparents, that would be two ancestors lines.\n        // We'll go for Paternal grandparents\n        // We'll use new horses for this.\n\n        /*\n               G     -      G\n            |F - M   -   F - M|\n              ||     -    ||\n            S -- S   -  S -- S\n\n            Family tree... sort of, we want to reach S and mate one of S with a G\n        */\n\n        // * Grandparents are the ones we created in the setup (ID 1 and 2)\n\n        // Female horse 2\n        await core.mintCustomHorse(\n          owner.address,\n          4,\n          ethers.utils.formatBytes32String(\"Female\"),\n          ethers.utils.formatBytes32String(\"Truc22\"),\n          ethers.utils.formatBytes32String(\"violet\")\n        );\n\n        // Male horse 2\n        const male2Id = 4;\n        await core.mintCustomHorse(\n          owner.address,\n          4,\n          ethers.utils.formatBytes32String(\"Male\"),\n          ethers.utils.formatBytes32String(\"Trung2\"),\n          ethers.utils.formatBytes32String(\"blue\")\n        );\n\n        await increaseTimeBySeconds();\n        await mineBlock();\n\n        await studService.putInStud(male2Id, amount, 100);\n\n        let firstOffspringMale = await createOffspring(\n          2,\n          1,\n          \"offspring\",\n          owner.address,\n          \"M\"\n        );\n\n        await studService.putInStud(firstOffspringMale, amount, 100);\n\n        await core.mintCustomHorse(\n          owner.address,\n          4,\n          ethers.utils.formatBytes32String(\"Female\"),\n          ethers.utils.formatBytes32String(\"Trung3\"),\n          ethers.utils.formatBytes32String(\"blue\")\n        ); // firstOffspringMale + 1\n\n        await increaseTimeBySeconds();\n        await mineBlock();\n\n        // parents firstOffspringMale, firstOffspringMale + 1 / grandparents 2, 1.\n        let secondOffspringMale = await createOffspring(\n          firstOffspringMale,\n          Number(firstOffspringMale) + 1,\n          \"offspring\",\n          owner.address,\n          \"M\"\n        );\n\n        await studService.putInStud(secondOffspringMale, amount, 1);\n\n        await core.mintCustomHorse(\n          owner.address,\n          4,\n          ethers.utils.formatBytes32String(\"Male\"),\n          ethers.utils.formatBytes32String(\"Trung4\"),\n          ethers.utils.formatBytes32String(\"blue\")\n        ); // secondOffspringMale + 1\n\n        await core.mintCustomHorse(\n          owner.address,\n          4,\n          ethers.utils.formatBytes32String(\"Female\"),\n          ethers.utils.formatBytes32String(\"Trung5\"),\n          ethers.utils.formatBytes32String(\"blue\")\n        ); // secondOffspringMale + 2\n\n        await increaseTimeBySeconds();\n        await mineBlock();\n\n        // parents firstOffspringMale, secondOffspringMale - grandparents 2, 1.\n        await createOffspring(\n          firstOffspringMale,\n          Number(secondOffspringMale) + 2,\n          \"offspring\",\n          owner.address,\n          \"M\"\n        );\n\n        // Trying to mate 12 with 9 should revert.\n        expect(\n          breeding.mix(\n            secondOffspringMale,\n            1,\n            ethers.utils.formatBytes32String(\"color\"),\n            amount,\n            owner.address\n          )\n        ).to.be.revertedWith(\"Breeding: horse is grandchild\");\n      });\n\n      it(\"should revert if male is not old enough\", async () => {\n        let maleOffspring = await createOffspring(\n          2,\n          1,\n          \"yellow\",\n          owner.address,\n          \"M\"\n        );\n\n        await studService.putInStud(maleOffspring, amount, 1000);\n\n        expect(\n          breeding.mix(\n            maleOffspring,\n            1,\n            ethers.utils.formatBytes32String(\"Color\"),\n            amount,\n            owner.address\n          )\n        ).to.be.revertedWith(\"Breeding: male is not old enough\");\n      });\n\n      it(\"should revert if female is not old enough\", async () => {\n        let femaleOffspring = await createOffspring(\n          2,\n          1,\n          \"blue\",\n          owner.address,\n          \"F\"\n        );\n\n        expect(\n          breeding.mix(\n            2,\n            femaleOffspring,\n            ethers.utils.formatBytes32String(\"Color\"),\n            amount,\n            owner.address\n          )\n        ).to.be.revertedWith(\"Breeding: female is not old enough\");\n      });\n    });\n  });\n\n  describe(\"migrateData\", async () => {\n    it(\"should migrate well\", async () => {\n      const breedingData = { 0: [\"1\", \"2\"], 1: [], 2: \"0\" };\n      const parents = breedingData[0];\n\n      const offsprings = breedingData[1];\n      const offspringCounter = 0;\n\n      const fatherParents = [0, 1];\n      const motherParents = [10, 11];\n\n      const offspringBreedType = ethers.utils.formatBytes32String(\"type\");\n      const offspringId = 14;\n\n      await breeding.grantRole(\n        ethers.utils.formatBytes32String(\"breeding_owners\"),\n        blockchainBrain.address\n      );\n\n      await breeding\n        .connect(blockchainBrain)\n        .migrateData(\n          offspringId,\n          parents,\n          offsprings,\n          offspringCounter,\n          fatherParents,\n          motherParents,\n          offspringBreedType\n        );\n\n      expect(await breeding.isHorseAlreadyMigrated(offspringId)).to.be.true;\n\n      expect(\n        breeding\n          .connect(blockchainBrain)\n          .migrateData(\n            offspringId,\n            parents,\n            offsprings,\n            offspringCounter,\n            fatherParents,\n            motherParents,\n            offspringBreedType\n          )\n      ).to.be.revertedWith(\"Breeding: horse has been migrated already\");\n    });\n  });\n\n  describe(\"pausable\", async () => {\n    it(\"can only be paused by accounts with correct role\", async () => {\n      await breeding.pause();\n      await breeding.unpause();\n\n      expect(breeding.connect(acc[1]).pause()).to.be.revertedWith(\n        \"Breeding: unauthorized owner admin\"\n      );\n    });\n\n    it(\"should revert if contract is paused\", async () => {\n      await breeding.pause();\n\n      expect(\n        breeding.mix(\n          2,\n          1,\n          ethers.utils.formatBytes32String(\"blueviolet\"),\n          amount,\n          owner.address\n        )\n      ).to.be.revertedWith(\"Pausable: paused\");\n    });\n  });\n\n  describe(\"funds transfer\", async () => {\n    beforeEach(\"increase time by a month\", async () => {\n      await increaseTimeBySeconds();\n      await mineBlock();\n    });\n\n    describe(\"different owners\", async () => {\n      // Horse 2 is in stud for 1 day and belongs to acc[2]\n\n      it(\"sends correct amounts for 1 day in stud\", async () => {\n        expect(await doNormalMix())\n          .to.emit(breeding, \"BreedingFunds\")\n          .withArgs(\n            ethers.utils.parseUnits(\"0.08\"),\n            ethers.utils.parseUnits(\"0.09\"),\n            ethers.utils.parseUnits(\"0.03\")\n          );\n      });\n\n      it(\"sends correct amounts for 3 day in stud\", async () => {\n        await studService.removeFromStud(2);\n        await studService.putInStud(2, amount, 259200);\n\n        expect(await doNormalMix())\n          .to.emit(breeding, \"BreedingFunds\")\n          .withArgs(\n            ethers.utils.parseUnits(\"0.096\"),\n            ethers.utils.parseUnits(\"0.074\"),\n            ethers.utils.parseUnits(\"0.03\")\n          );\n      });\n\n      it(\"sends correct amounts for 7 day in stud\", async () => {\n        await studService.removeFromStud(2);\n        await studService.putInStud(2, amount, 604800);\n\n        expect(await doNormalMix())\n          .to.emit(breeding, \"BreedingFunds\")\n          .withArgs(\n            ethers.utils.parseUnits(\"0.112\"),\n            ethers.utils.parseUnits(\"0.058\"),\n            ethers.utils.parseUnits(\"0.03\")\n          );\n      });\n    });\n\n    describe(\"same owners\", async () => {\n      beforeEach(\"transfer token\", async () => {\n        await core\n          .connect(acc[2])\n          .transferFrom(acc[2].address, owner.address, 2);\n      });\n\n      // Horse 2 is in stud for 1 day and already belongs to 'owner'.\n\n      it(\"sends correct amounts for 1 day in stud\", async () => {\n        expect(await doNormalMix())\n          .to.emit(breeding, \"BreedingFunds\")\n          .withArgs(\n            \"0\",\n            ethers.utils.parseUnits(\"0.14\"),\n            ethers.utils.parseUnits(\"0.06\")\n          );\n      });\n\n      it(\"sends correct amounts for 3 day in stud\", async () => {\n        await studService.removeFromStud(2);\n        await studService.putInStud(2, amount, 259200);\n\n        expect(await doNormalMix())\n          .to.emit(breeding, \"BreedingFunds\")\n          .withArgs(\n            \"0\",\n            ethers.utils.parseUnits(\"0.14\"),\n            ethers.utils.parseUnits(\"0.06\")\n          );\n      });\n\n      it(\"sends correct amounts for 7 day in stud\", async () => {\n        await studService.removeFromStud(2);\n        await studService.putInStud(2, amount, 604800);\n\n        expect(await doNormalMix())\n          .to.emit(breeding, \"BreedingFunds\")\n          .withArgs(\n            \"0\",\n            ethers.utils.parseUnits(\"0.14\"),\n            ethers.utils.parseUnits(\"0.06\")\n          );\n      });\n    });\n  });\n\n  describe(\"meta-transactions\", async () => {\n    it(\"should create a horse\", async () => {\n      let functionSignature = breeding.interface.encodeFunctionData(\"mix\", [\n        2,\n        1,\n        ethers.utils.formatBytes32String(\"Azul\"),\n        amount,\n        owner.address,\n      ]);\n\n      expect(await core.tokenExists(3)).to.be.false;\n\n      let typedData = await getTypedData({\n        name: \"ZED Breeding\",\n        version: \"1\",\n        chainId: chainId,\n        verifyingContract: breeding.address,\n        nonce: await breeding.getNonce(owner.address),\n        from: owner.address,\n        functionSignature: functionSignature,\n      });\n\n      let signedData = await owner._signTypedData(\n        typedData.domain,\n        typedData.types,\n        typedData.message\n      );\n\n      let { r, s, v } = await getRsvFromSig(signedData);\n\n      await breeding.executeMetaTransaction(\n        owner.address,\n        functionSignature,\n        r,\n        s,\n        v\n      );\n\n      expect(await core.tokenExists(3)).to.be.true;\n      expect(await core.nextTokenId()).to.equal(4);\n    });\n\n    describe(\"reverts\", async () => {\n      it(\"should revert if male ID is not male\", async () => {\n        let functionSignature = breeding.interface.encodeFunctionData(\"mix\", [\n          1,\n          2,\n          ethers.utils.formatBytes32String(\"Azul\"),\n          amount,\n          owner.address,\n        ]);\n\n        let typedData = await getTypedData({\n          name: \"ZED Breeding\",\n          version: \"1\",\n          chainId: chainId,\n          verifyingContract: breeding.address,\n          nonce: await breeding.getNonce(owner.address),\n          from: owner.address,\n          functionSignature: functionSignature,\n        });\n\n        let signedData = await owner._signTypedData(\n          typedData.domain,\n          typedData.types,\n          typedData.message\n        );\n\n        let { r, s, v } = await getRsvFromSig(signedData);\n\n        expect(\n          breeding.executeMetaTransaction(\n            owner.address,\n            functionSignature,\n            r,\n            s,\n            v\n          )\n        ).to.be.revertedWith(\n          \"Breeding: expected male horse but received female\"\n        );\n      });\n    });\n  });\n\n  const doNormalMix = async (account = owner, sender = owner.address) => {\n    return await breeding\n      .connect(account)\n      .mix(2, 1, DEFAULT_COLOR, amount, sender);\n  };\n\n  let createOffspring = async (male, female, color, from, wantedGender) => {\n    let offspringId;\n\n    while (true) {\n      offspringId = await core.nextTokenId();\n      await breeding.mix(\n        male,\n        female,\n        ethers.utils.formatBytes32String(color),\n        amount,\n        from\n      );\n\n      let sex = await breeding.getHorseSex(offspringId);\n\n      if (ethers.utils.parseBytes32String(sex) === wantedGender) {\n        break;\n      }\n    }\n\n    return offspringId;\n  };\n});\n"
      ]
    },
    "mtime": 1627132525543
  },
  "{\"filename\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment/RacingTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../../utils",
            "imported": [
              "getTypedData",
              "getRsvFromSig",
              "chainId"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getTypedData",
                "local": "getTypedData"
              },
              {
                "kind": "named",
                "imported": "getRsvFromSig",
                "local": "getRsvFromSig"
              },
              {
                "kind": "named",
                "imported": "chainId",
                "local": "chainId"
              }
            ]
          },
          {
            "source": "chai",
            "imported": [
              "expect"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "expect",
                "local": "expect"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment/RacingTest.js",
      "filenameRelative": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment/RacingTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "RacingTest.js",
      "sourceFileName": "RacingTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "RacingTest"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nvar _utils = require(\"../../utils\");\n\nvar _chai = require(\"chai\");\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar raceId = ethers.utils.formatBytes32String(\"race_id\"),\n    MAX_WETH = ethers.utils.parseUnits(\"1000\"),\n    newTokenIds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n    DEFAULT_PAYOUTS = [60, 10, 30],\n    DEFAULT_ZED_FEE = 10,\n    DEFAULT_ENTRANCE_FEE = ethers.utils.parseUnits(\"0.05\"),\n    DEFAULT_PRIZE_POOL = ethers.utils.parseUnits(\"0.54\");\n\ndescribe(\"RacingArena\", function () {\n  var core = void 0,\n      horseData = void 0,\n      racingLogic = void 0,\n      racingLogicInstance = void 0,\n      racingProxy = void 0,\n      racingProxyAdmin = void 0,\n      racing = void 0,\n      erc20 = void 0;\n\n  var acc = void 0,\n      deployer = void 0,\n      owner = void 0,\n      blockchainBrain = void 0,\n      feeReceiver = void 0;\n\n  before(\"populate accs\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ethers.getSigners();\n\n          case 2:\n            acc = _context.sent;\n\n            deployer = acc[0];\n            owner = acc[1];\n            blockchainBrain = acc[2];\n            feeReceiver = acc[3];\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  beforeEach(\"get factories\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return ethers.getContractFactory(\"HorseData\");\n\n          case 2:\n            horseData = _context2.sent;\n            _context2.next = 5;\n            return ethers.getContractFactory(\"Core\");\n\n          case 5:\n            core = _context2.sent;\n            _context2.next = 8;\n            return ethers.getContractFactory(\"ERC20Test\");\n\n          case 8:\n            erc20 = _context2.sent;\n            _context2.next = 11;\n            return ethers.getContractFactory(\"RacingArena\");\n\n          case 11:\n            racingLogicInstance = _context2.sent;\n            _context2.next = 14;\n            return ethers.getContractFactory(\"ZedProxyAdmin\");\n\n          case 14:\n            racingProxyAdmin = _context2.sent;\n            _context2.next = 17;\n            return ethers.getContractFactory(\"RacingProxy\");\n\n          case 17:\n            racingProxy = _context2.sent;\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })));\n\n  beforeEach(\"deploy instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return horseData.deploy();\n\n          case 2:\n            horseData = _context3.sent;\n            _context3.next = 5;\n            return horseData.deployed();\n\n          case 5:\n            _context3.next = 7;\n            return core.deploy(horseData.address);\n\n          case 7:\n            core = _context3.sent;\n            _context3.next = 10;\n            return core.deployed();\n\n          case 10:\n            _context3.next = 12;\n            return erc20.deploy(ethers.utils.parseUnits(\"100\"));\n\n          case 12:\n            erc20 = _context3.sent;\n            _context3.next = 15;\n            return erc20.deployed();\n\n          case 15:\n            _context3.next = 17;\n            return racingLogicInstance.deploy();\n\n          case 17:\n            racingLogic = _context3.sent;\n            _context3.next = 20;\n            return racingLogic.deployed();\n\n          case 20:\n            _context3.next = 22;\n            return racingProxyAdmin.deploy();\n\n          case 22:\n            racingProxyAdmin = _context3.sent;\n            _context3.next = 25;\n            return racingProxyAdmin.deployed();\n\n          case 25:\n            _context3.next = 27;\n            return racingProxy.deploy(racingLogic.address, racingProxyAdmin.address);\n\n          case 27:\n            racingProxy = _context3.sent;\n            _context3.next = 30;\n            return racingProxy.deployed();\n\n          case 30:\n\n            // 4. Create instance of logic contract at proxy address\n            racing = new ethers.Contract(racingProxy.address, racingLogic.interface);\n            racing = racing.connect(deployer);\n\n          case 32:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  })));\n\n  beforeEach(\"setup initial state of instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return core.grantRole(ethers.utils.formatBytes32String(\"core_owners\"), deployer.address);\n\n          case 2:\n            _context4.next = 4;\n            return core.grantRole(ethers.utils.formatBytes32String(\"core_contracts\"), deployer.address);\n\n          case 4:\n            _context4.next = 6;\n            return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"FirstName\"), ethers.utils.formatBytes32String(\"Black\"));\n\n          case 6:\n            _context4.next = 8;\n            return racing.setDomainSeparator(\"ZED Racing\", \"1\", _utils.chainId);\n\n          case 8:\n            _context4.next = 10;\n            return racing.initialize(feeReceiver.address, erc20.address, core.address);\n\n          case 10:\n            _context4.next = 12;\n            return erc20.transfer(blockchainBrain.address, ethers.utils.parseUnits(\"1\"));\n\n          case 12:\n            _context4.next = 14;\n            return erc20.connect(blockchainBrain).approve(racing.address, MAX_WETH);\n\n          case 14:\n            _context4.next = 16;\n            return erc20.transfer(owner.address, ethers.utils.parseUnits(\"1\"));\n\n          case 16:\n            _context4.next = 18;\n            return erc20.connect(owner).approve(racing.address, MAX_WETH);\n\n          case 18:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined);\n  })));\n\n  describe(\"initial data validation\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            it(\"should set deployer as admin of racing owners\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n              return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.t0 = _chai.expect;\n                      _context5.next = 3;\n                      return racing.hasRole(ethers.utils.formatBytes32String(\"racing_owners_admin\"), deployer.address);\n\n                    case 3:\n                      _context5.t1 = _context5.sent;\n                      (0, _context5.t0)(_context5.t1).to.be.true;\n\n                    case 5:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, _callee5, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, undefined);\n  })));\n\n  describe(\"proxy\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            it(\"should set upgrade admin correctly\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n              return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      _context7.next = 2;\n                      return racingProxyAdmin.getProxyImplementation(racingProxy.address);\n\n                    case 2:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, _callee7, undefined);\n            })));\n\n            it(\"should upgrade to new implementation\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n              var newLogic;\n              return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                while (1) {\n                  switch (_context8.prev = _context8.next) {\n                    case 0:\n                      _context8.t0 = _chai.expect;\n                      _context8.next = 3;\n                      return racingProxyAdmin.getProxyImplementation(racingProxy.address);\n\n                    case 3:\n                      _context8.t1 = _context8.sent;\n                      _context8.t2 = racingLogic.address;\n                      (0, _context8.t0)(_context8.t1).to.equal(_context8.t2);\n                      _context8.next = 8;\n                      return racingLogicInstance.deploy();\n\n                    case 8:\n                      newLogic = _context8.sent;\n                      _context8.next = 11;\n                      return newLogic.deployed();\n\n                    case 11:\n                      _context8.next = 13;\n                      return racingProxyAdmin.upgrade(racingProxy.address, newLogic.address);\n\n                    case 13:\n                      _context8.t3 = _chai.expect;\n                      _context8.next = 16;\n                      return racingProxyAdmin.getProxyImplementation(racingProxy.address);\n\n                    case 16:\n                      _context8.t4 = _context8.sent;\n                      _context8.t5 = newLogic.address;\n                      (0, _context8.t3)(_context8.t4).to.equal(_context8.t5);\n\n                    case 19:\n                    case \"end\":\n                      return _context8.stop();\n                  }\n                }\n              }, _callee8, undefined);\n            })));\n\n            it(\"should hold state after upgrading\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n              var newLogic;\n              return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                while (1) {\n                  switch (_context9.prev = _context9.next) {\n                    case 0:\n                      _context9.t0 = _chai.expect;\n                      _context9.next = 3;\n                      return racing.hasRole(ethers.utils.formatBytes32String(\"racing_owners\"), blockchainBrain.address);\n\n                    case 3:\n                      _context9.t1 = _context9.sent;\n                      (0, _context9.t0)(_context9.t1).to.be.false;\n                      _context9.next = 7;\n                      return racing.grantRoleAdmin(ethers.utils.formatBytes32String(\"racing_owners\"), blockchainBrain.address);\n\n                    case 7:\n                      _context9.t2 = _chai.expect;\n                      _context9.next = 10;\n                      return racing.hasRole(ethers.utils.formatBytes32String(\"racing_owners\"), blockchainBrain.address);\n\n                    case 10:\n                      _context9.t3 = _context9.sent;\n                      (0, _context9.t2)(_context9.t3).to.be.true;\n                      _context9.next = 14;\n                      return racingLogicInstance.deploy();\n\n                    case 14:\n                      newLogic = _context9.sent;\n                      _context9.next = 17;\n                      return newLogic.deployed();\n\n                    case 17:\n                      _context9.next = 19;\n                      return racingProxyAdmin.upgrade(racingProxy.address, newLogic.address);\n\n                    case 19:\n                      _context9.t4 = _chai.expect;\n                      _context9.next = 22;\n                      return racing.hasRole(ethers.utils.formatBytes32String(\"racing_owners\"), blockchainBrain.address);\n\n                    case 22:\n                      _context9.t5 = _context9.sent;\n                      (0, _context9.t4)(_context9.t5).to.be.true;\n\n                    case 24:\n                    case \"end\":\n                      return _context9.stop();\n                  }\n                }\n              }, _callee9, undefined);\n            })));\n\n            it(\"should revert when calling initialize() after upgrading\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n              var newLogic;\n              return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                while (1) {\n                  switch (_context10.prev = _context10.next) {\n                    case 0:\n                      _context10.next = 2;\n                      return racingLogicInstance.deploy();\n\n                    case 2:\n                      newLogic = _context10.sent;\n                      _context10.next = 5;\n                      return newLogic.deployed();\n\n                    case 5:\n                      _context10.next = 7;\n                      return racingProxyAdmin.upgrade(racingProxy.address, newLogic.address);\n\n                    case 7:\n\n                      (0, _chai.expect)(racing.initialize(feeReceiver.address, erc20.address, core.address)).to.be.revertedWith(\"Initializable: contract is already initialized\");\n\n                    case 8:\n                    case \"end\":\n                      return _context10.stop();\n                  }\n                }\n              }, _callee10, undefined);\n            })));\n\n          case 4:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, undefined);\n  })));\n\n  describe(\"create race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n    return regeneratorRuntime.wrap(function _callee19$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            beforeEach(\"grant permissions\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n              return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                while (1) {\n                  switch (_context12.prev = _context12.next) {\n                    case 0:\n                      _context12.next = 2;\n                      return racing.grantRole(ethers.utils.formatBytes32String(\"racing_owners\"), blockchainBrain.address);\n\n                    case 2:\n                    case \"end\":\n                      return _context12.stop();\n                  }\n                }\n              }, _callee12, undefined);\n            })));\n\n            it(\"should create a new race with specified payouts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n              return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                while (1) {\n                  switch (_context13.prev = _context13.next) {\n                    case 0:\n                      _context13.next = 2;\n                      return createRace(raceId);\n\n                    case 2:\n                    case \"end\":\n                      return _context13.stop();\n                  }\n                }\n              }, _callee13, undefined);\n            })));\n\n            describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n              return regeneratorRuntime.wrap(function _callee18$(_context18) {\n                while (1) {\n                  switch (_context18.prev = _context18.next) {\n                    case 0:\n                      it(\"should revert if unauthorized address tries to create race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n                        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                          while (1) {\n                            switch (_context14.prev = _context14.next) {\n                              case 0:\n                                (0, _chai.expect)(racing.connect(acc[9]).createRace(raceId, 12, DEFAULT_ENTRANCE_FEE, 1200, DEFAULT_PRIZE_POOL, DEFAULT_ZED_FEE, DEFAULT_PAYOUTS)).to.be.revertedWith(\"Racing: unauthorized owner\");\n\n                              case 1:\n                              case \"end\":\n                                return _context14.stop();\n                            }\n                          }\n                        }, _callee14, undefined);\n                      })));\n\n                      it(\"should revert if number of payouts is larger than number of allowed horses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n                        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                          while (1) {\n                            switch (_context15.prev = _context15.next) {\n                              case 0:\n                                (0, _chai.expect)(createRace(raceId, 1)).to.be.revertedWith(\"Racing: payouts list longer than allowed horses\");\n\n                              case 1:\n                              case \"end\":\n                                return _context15.stop();\n                            }\n                          }\n                        }, _callee15, undefined);\n                      })));\n\n                      it(\"should revert if number of payouts is lower than 1\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n                        return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                          while (1) {\n                            switch (_context16.prev = _context16.next) {\n                              case 0:\n                                (0, _chai.expect)(racing.connect(blockchainBrain).createRace(raceId, 12, DEFAULT_ENTRANCE_FEE, 1000, DEFAULT_PRIZE_POOL, DEFAULT_ZED_FEE, [])).to.be.revertedWith(\"Racing: payouts list cannot be less than 1\");\n\n                              case 1:\n                              case \"end\":\n                                return _context16.stop();\n                            }\n                          }\n                        }, _callee16, undefined);\n                      })));\n\n                      it(\"should revert if list of payouts does not add up to 100\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n                        return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                          while (1) {\n                            switch (_context17.prev = _context17.next) {\n                              case 0:\n                                (0, _chai.expect)(racing.connect(blockchainBrain).createRace(raceId, 12, DEFAULT_ENTRANCE_FEE, 800, DEFAULT_PRIZE_POOL, DEFAULT_ZED_FEE, [10, 10, 10])).to.be.revertedWith(\"Racing: payouts percentages should add up to 100\");\n\n                              case 1:\n                              case \"end\":\n                                return _context17.stop();\n                            }\n                          }\n                        }, _callee17, undefined);\n                      })));\n\n                    case 4:\n                    case \"end\":\n                      return _context18.stop();\n                  }\n                }\n              }, _callee18, undefined);\n            })));\n\n          case 3:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee19, undefined);\n  })));\n\n  describe(\"registerHorse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee39() {\n    return regeneratorRuntime.wrap(function _callee39$(_context39) {\n      while (1) {\n        switch (_context39.prev = _context39.next) {\n          case 0:\n            beforeEach(\"create 12 horses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n              return regeneratorRuntime.wrap(function _callee21$(_context21) {\n                while (1) {\n                  switch (_context21.prev = _context21.next) {\n                    case 0:\n                      newTokenIds.forEach(function () {\n                        var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(tokenId) {\n                          return regeneratorRuntime.wrap(function _callee20$(_context20) {\n                            while (1) {\n                              switch (_context20.prev = _context20.next) {\n                                case 0:\n                                  _context20.next = 2;\n                                  return core.mintCustomHorse(owner.address, 1, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Name_\" + tokenId), ethers.utils.formatBytes32String(\"Color\"));\n\n                                case 2:\n                                case \"end\":\n                                  return _context20.stop();\n                              }\n                            }\n                          }, _callee20, undefined);\n                        }));\n\n                        return function (_x) {\n                          return _ref22.apply(this, arguments);\n                        };\n                      }());\n\n                    case 1:\n                    case \"end\":\n                      return _context21.stop();\n                  }\n                }\n              }, _callee21, undefined);\n            })));\n\n            beforeEach(\"create race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n              return regeneratorRuntime.wrap(function _callee22$(_context22) {\n                while (1) {\n                  switch (_context22.prev = _context22.next) {\n                    case 0:\n                      _context22.next = 2;\n                      return racing.grantRole(ethers.utils.formatBytes32String(\"racing_owners\"), blockchainBrain.address);\n\n                    case 2:\n                      _context22.next = 4;\n                      return createRace(raceId);\n\n                    case 4:\n                    case \"end\":\n                      return _context22.stop();\n                  }\n                }\n              }, _callee22, undefined);\n            })));\n\n            describe(\"valid nominations\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {\n              return regeneratorRuntime.wrap(function _callee25$(_context25) {\n                while (1) {\n                  switch (_context25.prev = _context25.next) {\n                    case 0:\n                      it(\"should register a horse to a race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n                        var tx;\n                        return regeneratorRuntime.wrap(function _callee23$(_context23) {\n                          while (1) {\n                            switch (_context23.prev = _context23.next) {\n                              case 0:\n                                _context23.next = 2;\n                                return racing.connect(owner).registerHorse(raceId, 1, 10);\n\n                              case 2:\n                                tx = _context23.sent;\n\n\n                                (0, _chai.expect)(tx).to.emit(racing, \"HorseRegistered\").withArgs(raceId, owner.address, 1, 10);\n\n                              case 4:\n                              case \"end\":\n                                return _context23.stop();\n                            }\n                          }\n                        }, _callee23, undefined);\n                      })));\n\n                      it(\"should allow approved address to register horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {\n                        var tx;\n                        return regeneratorRuntime.wrap(function _callee24$(_context24) {\n                          while (1) {\n                            switch (_context24.prev = _context24.next) {\n                              case 0:\n                                _context24.next = 2;\n                                return core.connect(owner).approve(blockchainBrain.address, 4);\n\n                              case 2:\n                                _context24.next = 4;\n                                return racing.connect(blockchainBrain).registerHorse(raceId, 4, 12);\n\n                              case 4:\n                                tx = _context24.sent;\n\n\n                                (0, _chai.expect)(tx).to.emit(racing, \"HorseRegistered\");\n\n                              case 6:\n                              case \"end\":\n                                return _context24.stop();\n                            }\n                          }\n                        }, _callee24, undefined);\n                      })));\n\n                    case 2:\n                    case \"end\":\n                      return _context25.stop();\n                  }\n                }\n              }, _callee25, undefined);\n            })));\n\n            describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee36() {\n              return regeneratorRuntime.wrap(function _callee36$(_context36) {\n                while (1) {\n                  switch (_context36.prev = _context36.next) {\n                    case 0:\n                      it(\"should revert if not the owner tries to register horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {\n                        return regeneratorRuntime.wrap(function _callee26$(_context26) {\n                          while (1) {\n                            switch (_context26.prev = _context26.next) {\n                              case 0:\n                                (0, _chai.expect)(racing.registerHorse(raceId, 1, 10)).to.be.revertedWith(\"Racing: not horse owner or approved\");\n\n                              case 1:\n                              case \"end\":\n                                return _context26.stop();\n                            }\n                          }\n                        }, _callee26, undefined);\n                      })));\n\n                      it(\"should revert if race is not in registration state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28() {\n                        return regeneratorRuntime.wrap(function _callee28$(_context28) {\n                          while (1) {\n                            switch (_context28.prev = _context28.next) {\n                              case 0:\n                                newTokenIds.forEach(function () {\n                                  var _ref30 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27(tokenId) {\n                                    return regeneratorRuntime.wrap(function _callee27$(_context27) {\n                                      while (1) {\n                                        switch (_context27.prev = _context27.next) {\n                                          case 0:\n                                            _context27.next = 2;\n                                            return racing.connect(owner).registerHorse(raceId, tokenId, tokenId);\n\n                                          case 2:\n                                          case \"end\":\n                                            return _context27.stop();\n                                        }\n                                      }\n                                    }, _callee27, undefined);\n                                  }));\n\n                                  return function (_x2) {\n                                    return _ref30.apply(this, arguments);\n                                  };\n                                }());\n\n                                // Easy way to change state of race\n                                _context28.next = 3;\n                                return racing.connect(blockchainBrain).cancelRace(raceId, \"I just felt like canceling this race\");\n\n                              case 3:\n\n                                (0, _chai.expect)(racing.connect(owner).registerHorse(raceId, 1, 1)).to.be.revertedWith(\"Racing: race not accepting registrations\");\n\n                              case 4:\n                              case \"end\":\n                                return _context28.stop();\n                            }\n                          }\n                        }, _callee28, undefined);\n                      })));\n\n                      it(\"should revert if maximum number of horses are registered\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee30() {\n                        return regeneratorRuntime.wrap(function _callee30$(_context30) {\n                          while (1) {\n                            switch (_context30.prev = _context30.next) {\n                              case 0:\n                                newTokenIds.forEach(function () {\n                                  var _ref32 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee29(tokenId) {\n                                    return regeneratorRuntime.wrap(function _callee29$(_context29) {\n                                      while (1) {\n                                        switch (_context29.prev = _context29.next) {\n                                          case 0:\n                                            _context29.next = 2;\n                                            return racing.connect(owner).registerHorse(raceId, tokenId, tokenId);\n\n                                          case 2:\n                                          case \"end\":\n                                            return _context29.stop();\n                                        }\n                                      }\n                                    }, _callee29, undefined);\n                                  }));\n\n                                  return function (_x3) {\n                                    return _ref32.apply(this, arguments);\n                                  };\n                                }());\n\n                                (0, _chai.expect)(racing.connect(owner).registerHorse(raceId, 1, 1)).to.be.revertedWith(\"Racing: max number of horses for race\");\n\n                              case 2:\n                              case \"end\":\n                                return _context30.stop();\n                            }\n                          }\n                        }, _callee30, undefined);\n                      })));\n\n                      it(\"should revert if gate is lower than 1\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee31() {\n                        return regeneratorRuntime.wrap(function _callee31$(_context31) {\n                          while (1) {\n                            switch (_context31.prev = _context31.next) {\n                              case 0:\n                                (0, _chai.expect)(racing.connect(owner).registerHorse(raceId, 1, 0)).to.be.revertedWith(\"Racing: gate number lower than 1\");\n\n                              case 1:\n                              case \"end\":\n                                return _context31.stop();\n                            }\n                          }\n                        }, _callee31, undefined);\n                      })));\n\n                      it(\"should revert if gate is greater than horses allowed\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee32() {\n                        return regeneratorRuntime.wrap(function _callee32$(_context32) {\n                          while (1) {\n                            switch (_context32.prev = _context32.next) {\n                              case 0:\n                                // The race in the setup allows 12 horses\n                                (0, _chai.expect)(racing.connect(owner).registerHorse(raceId, 1, 13)).to.be.revertedWith(\"Racing: gate number greater than horses allowed\");\n\n                              case 1:\n                              case \"end\":\n                                return _context32.stop();\n                            }\n                          }\n                        }, _callee32, undefined);\n                      })));\n\n                      it(\"should revert if the gate has already been taken\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee33() {\n                        return regeneratorRuntime.wrap(function _callee33$(_context33) {\n                          while (1) {\n                            switch (_context33.prev = _context33.next) {\n                              case 0:\n                                _context33.next = 2;\n                                return racing.connect(owner).registerHorse(raceId, 1, 2);\n\n                              case 2:\n\n                                // Different horse, same gate\n                                (0, _chai.expect)(racing.connect(owner).registerHorse(raceId, 4, 2)).to.be.revertedWith(\"Racing: gate number already taken\");\n\n                              case 3:\n                              case \"end\":\n                                return _context33.stop();\n                            }\n                          }\n                        }, _callee33, undefined);\n                      })));\n\n                      it(\"should revert if horse has reached active races limit\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee34() {\n                        var raceId2, raceId3, raceId4;\n                        return regeneratorRuntime.wrap(function _callee34$(_context34) {\n                          while (1) {\n                            switch (_context34.prev = _context34.next) {\n                              case 0:\n                                raceId2 = ethers.utils.formatBytes32String(\"race_id_2\");\n                                raceId3 = ethers.utils.formatBytes32String(\"race_id_3\");\n                                raceId4 = ethers.utils.formatBytes32String(\"race_id_4\");\n\n                                //* Right now the limit is 3 races\n\n                                _context34.next = 5;\n                                return createRace(raceId2);\n\n                              case 5:\n                                _context34.next = 7;\n                                return createRace(raceId3);\n\n                              case 7:\n                                _context34.next = 9;\n                                return createRace(raceId4);\n\n                              case 9:\n                                _context34.next = 11;\n                                return racing.connect(owner).registerHorse(raceId, 1, 12);\n\n                              case 11:\n                                _context34.next = 13;\n                                return racing.connect(owner).registerHorse(raceId2, 1, 3);\n\n                              case 13:\n                                _context34.next = 15;\n                                return racing.connect(owner).registerHorse(raceId3, 1, 5);\n\n                              case 15:\n\n                                (0, _chai.expect)(racing.connect(owner).registerHorse(raceId4, 1, 2)).to.be.revertedWith(\"Racing: horse currently active in 3 races\");\n\n                              case 16:\n                              case \"end\":\n                                return _context34.stop();\n                            }\n                          }\n                        }, _callee34, undefined);\n                      })));\n\n                      it(\"should revert if horse is already in race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee35() {\n                        return regeneratorRuntime.wrap(function _callee35$(_context35) {\n                          while (1) {\n                            switch (_context35.prev = _context35.next) {\n                              case 0:\n                                _context35.next = 2;\n                                return racing.connect(owner).registerHorse(raceId, 1, 12);\n\n                              case 2:\n\n                                // Different gate, same horse\n                                (0, _chai.expect)(racing.connect(owner).registerHorse(raceId, 1, 1)).to.be.revertedWith(\"Racing: horse already registered for this race\");\n\n                              case 3:\n                              case \"end\":\n                                return _context35.stop();\n                            }\n                          }\n                        }, _callee35, undefined);\n                      })));\n\n                    case 8:\n                    case \"end\":\n                      return _context36.stop();\n                  }\n                }\n              }, _callee36, undefined);\n            })));\n\n            describe(\"transfers\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee38() {\n              return regeneratorRuntime.wrap(function _callee38$(_context38) {\n                while (1) {\n                  switch (_context38.prev = _context38.next) {\n                    case 0:\n                      it(\"should transfer racing fee to racing contract\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee37() {\n                        var preBalance, currentBalance;\n                        return regeneratorRuntime.wrap(function _callee37$(_context37) {\n                          while (1) {\n                            switch (_context37.prev = _context37.next) {\n                              case 0:\n                                _context37.next = 2;\n                                return erc20.balanceOf(racing.address);\n\n                              case 2:\n                                preBalance = _context37.sent;\n                                _context37.next = 5;\n                                return racing.connect(owner).registerHorse(raceId, 1, 10);\n\n                              case 5:\n                                _context37.next = 7;\n                                return erc20.balanceOf(racing.address);\n\n                              case 7:\n                                currentBalance = _context37.sent;\n\n\n                                (0, _chai.expect)(currentBalance.gt(preBalance)).to.be.true;\n\n                              case 9:\n                              case \"end\":\n                                return _context37.stop();\n                            }\n                          }\n                        }, _callee37, undefined);\n                      })));\n\n                    case 1:\n                    case \"end\":\n                      return _context38.stop();\n                  }\n                }\n              }, _callee38, undefined);\n            })));\n\n          case 5:\n          case \"end\":\n            return _context39.stop();\n        }\n      }\n    }, _callee39, undefined);\n  })));\n\n  describe(\"deregisterHorseFromRace\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee49() {\n    return regeneratorRuntime.wrap(function _callee49$(_context49) {\n      while (1) {\n        switch (_context49.prev = _context49.next) {\n          case 0:\n            beforeEach(\"create 12 horses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee41() {\n              return regeneratorRuntime.wrap(function _callee41$(_context41) {\n                while (1) {\n                  switch (_context41.prev = _context41.next) {\n                    case 0:\n                      newTokenIds.forEach(function () {\n                        var _ref42 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee40(tokenId) {\n                          return regeneratorRuntime.wrap(function _callee40$(_context40) {\n                            while (1) {\n                              switch (_context40.prev = _context40.next) {\n                                case 0:\n                                  _context40.next = 2;\n                                  return core.mintCustomHorse(owner.address, 1, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Name_\" + tokenId), ethers.utils.formatBytes32String(\"Color\"));\n\n                                case 2:\n                                case \"end\":\n                                  return _context40.stop();\n                              }\n                            }\n                          }, _callee40, undefined);\n                        }));\n\n                        return function (_x4) {\n                          return _ref42.apply(this, arguments);\n                        };\n                      }());\n\n                    case 1:\n                    case \"end\":\n                      return _context41.stop();\n                  }\n                }\n              }, _callee41, undefined);\n            })));\n\n            beforeEach(\"create race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee42() {\n              return regeneratorRuntime.wrap(function _callee42$(_context42) {\n                while (1) {\n                  switch (_context42.prev = _context42.next) {\n                    case 0:\n                      _context42.next = 2;\n                      return racing.grantRole(ethers.utils.formatBytes32String(\"racing_owners\"), blockchainBrain.address);\n\n                    case 2:\n                      _context42.next = 4;\n                      return createRace(raceId);\n\n                    case 4:\n                    case \"end\":\n                      return _context42.stop();\n                  }\n                }\n              }, _callee42, undefined);\n            })));\n\n            beforeEach(\"register horse into race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee43() {\n              return regeneratorRuntime.wrap(function _callee43$(_context43) {\n                while (1) {\n                  switch (_context43.prev = _context43.next) {\n                    case 0:\n                      _context43.next = 2;\n                      return racing.connect(owner).registerHorse(raceId, 1, 10);\n\n                    case 2:\n                    case \"end\":\n                      return _context43.stop();\n                  }\n                }\n              }, _callee43, undefined);\n            })));\n\n            describe(\"valid removal\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee45() {\n              return regeneratorRuntime.wrap(function _callee45$(_context45) {\n                while (1) {\n                  switch (_context45.prev = _context45.next) {\n                    case 0:\n                      it(\"should remove horse from race and update state accordingly\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee44() {\n                        var preOwnerBalance, raceData, raceLineup, activeRaces, gateToId, currentOwnerBalance;\n                        return regeneratorRuntime.wrap(function _callee44$(_context44) {\n                          while (1) {\n                            switch (_context44.prev = _context44.next) {\n                              case 0:\n                                _context44.next = 2;\n                                return erc20.balanceOf(owner.address);\n\n                              case 2:\n                                preOwnerBalance = _context44.sent;\n                                _context44.next = 5;\n                                return racing.connect(owner).registerHorse(raceId, 2, 1);\n\n                              case 5:\n                                _context44.next = 7;\n                                return racing.races(raceId);\n\n                              case 7:\n                                raceData = _context44.sent;\n\n                                (0, _chai.expect)(raceData.horsesRegistered).to.equal(2);\n\n                                _context44.next = 11;\n                                return racing.connect(blockchainBrain).deregisterHorseFromRace(raceId, 2);\n\n                              case 11:\n                                _context44.next = 13;\n                                return racing.races(raceId);\n\n                              case 13:\n                                raceData = _context44.sent;\n\n                                (0, _chai.expect)(raceData.horsesRegistered).to.equal(1);\n\n                                _context44.next = 17;\n                                return racing.raceLineup(raceId, 2);\n\n                              case 17:\n                                raceLineup = _context44.sent;\n\n                                (0, _chai.expect)(raceLineup.gateNumber).to.equal(0);\n                                (0, _chai.expect)(raceLineup.finalPosition).to.equal(0);\n                                (0, _chai.expect)(raceLineup.nominator, ethers.constants.AddressZero);\n\n                                _context44.next = 23;\n                                return racing.horseActiveRaces(2);\n\n                              case 23:\n                                activeRaces = _context44.sent;\n\n                                (0, _chai.expect)(activeRaces).to.equal(0);\n\n                                _context44.next = 27;\n                                return racing.raceGateToId(raceId, 1);\n\n                              case 27:\n                                gateToId = _context44.sent;\n\n                                (0, _chai.expect)(gateToId).to.equal(0);\n\n                                _context44.t0 = _chai.expect;\n                                _context44.next = 32;\n                                return racing.isRaceGateTaken(raceId, 1);\n\n                              case 32:\n                                _context44.t1 = _context44.sent;\n                                (0, _context44.t0)(_context44.t1).to.be.false;\n                                _context44.next = 36;\n                                return erc20.balanceOf(owner.address);\n\n                              case 36:\n                                currentOwnerBalance = _context44.sent;\n\n                                (0, _chai.expect)(currentOwnerBalance).to.equal(preOwnerBalance);\n\n                              case 38:\n                              case \"end\":\n                                return _context44.stop();\n                            }\n                          }\n                        }, _callee44, undefined);\n                      })));\n\n                    case 1:\n                    case \"end\":\n                      return _context45.stop();\n                  }\n                }\n              }, _callee45, undefined);\n            })));\n\n            describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee48() {\n              return regeneratorRuntime.wrap(function _callee48$(_context48) {\n                while (1) {\n                  switch (_context48.prev = _context48.next) {\n                    case 0:\n                      it(\"should revert if horse is not registered in race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee46() {\n                        return regeneratorRuntime.wrap(function _callee46$(_context46) {\n                          while (1) {\n                            switch (_context46.prev = _context46.next) {\n                              case 0:\n                                (0, _chai.expect)(racing.connect(blockchainBrain).deregisterHorseFromRace(raceId, 2)).to.be.revertedWith(\"Racing: horse is not registered for this race\");\n\n                              case 1:\n                              case \"end\":\n                                return _context46.stop();\n                            }\n                          }\n                        }, _callee46, undefined);\n                      })));\n\n                      it(\"should revert if race is not in registration state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee47() {\n                        return regeneratorRuntime.wrap(function _callee47$(_context47) {\n                          while (1) {\n                            switch (_context47.prev = _context47.next) {\n                              case 0:\n                                _context47.next = 2;\n                                return racing.connect(blockchainBrain).cancelRace(raceId, \"NO REASON! >:)\");\n\n                              case 2:\n\n                                (0, _chai.expect)(racing.connect(blockchainBrain).deregisterHorseFromRace(raceId, 2)).to.be.revertedWith(\"Racing: race is not in registration state\");\n\n                              case 3:\n                              case \"end\":\n                                return _context47.stop();\n                            }\n                          }\n                        }, _callee47, undefined);\n                      })));\n\n                    case 2:\n                    case \"end\":\n                      return _context48.stop();\n                  }\n                }\n              }, _callee48, undefined);\n            })));\n\n          case 5:\n          case \"end\":\n            return _context49.stop();\n        }\n      }\n    }, _callee49, undefined);\n  })));\n\n  describe(\"postResults\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee61() {\n    return regeneratorRuntime.wrap(function _callee61$(_context61) {\n      while (1) {\n        switch (_context61.prev = _context61.next) {\n          case 0:\n            beforeEach(\"create 12 horses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee51() {\n              return regeneratorRuntime.wrap(function _callee51$(_context51) {\n                while (1) {\n                  switch (_context51.prev = _context51.next) {\n                    case 0:\n                      newTokenIds.forEach(function () {\n                        var _ref52 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee50(tokenId) {\n                          return regeneratorRuntime.wrap(function _callee50$(_context50) {\n                            while (1) {\n                              switch (_context50.prev = _context50.next) {\n                                case 0:\n                                  _context50.next = 2;\n                                  return core.mintCustomHorse(owner.address, 1, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Name_\" + tokenId), ethers.utils.formatBytes32String(\"Color\"));\n\n                                case 2:\n                                case \"end\":\n                                  return _context50.stop();\n                              }\n                            }\n                          }, _callee50, undefined);\n                        }));\n\n                        return function (_x5) {\n                          return _ref52.apply(this, arguments);\n                        };\n                      }());\n\n                    case 1:\n                    case \"end\":\n                      return _context51.stop();\n                  }\n                }\n              }, _callee51, undefined);\n            })));\n\n            beforeEach(\"create race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee52() {\n              return regeneratorRuntime.wrap(function _callee52$(_context52) {\n                while (1) {\n                  switch (_context52.prev = _context52.next) {\n                    case 0:\n                      _context52.next = 2;\n                      return racing.grantRole(ethers.utils.formatBytes32String(\"racing_owners\"), blockchainBrain.address);\n\n                    case 2:\n                      _context52.next = 4;\n                      return racing.connect(blockchainBrain).createRace(raceId, 12, DEFAULT_ENTRANCE_FEE, 1200, DEFAULT_PRIZE_POOL, DEFAULT_ZED_FEE, [60, 20, 10, 10]);\n\n                    case 4:\n                    case \"end\":\n                      return _context52.stop();\n                  }\n                }\n              }, _callee52, undefined);\n            })));\n\n            describe(\"valid results posting\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee57() {\n              return regeneratorRuntime.wrap(function _callee57$(_context57) {\n                while (1) {\n                  switch (_context57.prev = _context57.next) {\n                    case 0:\n                      beforeEach(\"register all horses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee54() {\n                        return regeneratorRuntime.wrap(function _callee54$(_context54) {\n                          while (1) {\n                            switch (_context54.prev = _context54.next) {\n                              case 0:\n                                newTokenIds.forEach(function () {\n                                  var _ref56 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee53(tokenId) {\n                                    return regeneratorRuntime.wrap(function _callee53$(_context53) {\n                                      while (1) {\n                                        switch (_context53.prev = _context53.next) {\n                                          case 0:\n                                            _context53.next = 2;\n                                            return racing.connect(owner).registerHorse(raceId, tokenId, tokenId);\n\n                                          case 2:\n                                          case \"end\":\n                                            return _context53.stop();\n                                        }\n                                      }\n                                    }, _callee53, undefined);\n                                  }));\n\n                                  return function (_x6) {\n                                    return _ref56.apply(this, arguments);\n                                  };\n                                }());\n\n                              case 1:\n                              case \"end\":\n                                return _context54.stop();\n                            }\n                          }\n                        }, _callee54, undefined);\n                      })));\n\n                      it(\"should reduce active races of all horses involved\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee55() {\n                        var i, activeRaces, _i, _activeRaces;\n\n                        return regeneratorRuntime.wrap(function _callee55$(_context55) {\n                          while (1) {\n                            switch (_context55.prev = _context55.next) {\n                              case 0:\n                                i = 0;\n\n                              case 1:\n                                if (!(i < newTokenIds.length)) {\n                                  _context55.next = 9;\n                                  break;\n                                }\n\n                                _context55.next = 4;\n                                return racing.horseActiveRaces(newTokenIds[i]);\n\n                              case 4:\n                                activeRaces = _context55.sent;\n\n                                (0, _chai.expect)(activeRaces).to.equal(1);\n\n                              case 6:\n                                i++;\n                                _context55.next = 1;\n                                break;\n\n                              case 9:\n                                _context55.next = 11;\n                                return racing.connect(blockchainBrain).postResults(raceId, newTokenIds);\n\n                              case 11:\n                                _i = 0;\n\n                              case 12:\n                                if (!(_i < newTokenIds.length)) {\n                                  _context55.next = 20;\n                                  break;\n                                }\n\n                                _context55.next = 15;\n                                return racing.horseActiveRaces(newTokenIds[_i]);\n\n                              case 15:\n                                _activeRaces = _context55.sent;\n\n                                (0, _chai.expect)(_activeRaces).to.equal(0);\n\n                              case 17:\n                                _i++;\n                                _context55.next = 12;\n                                break;\n\n                              case 20:\n                              case \"end\":\n                                return _context55.stop();\n                            }\n                          }\n                        }, _callee55, undefined);\n                      })));\n\n                      it(\"should send correct payouts based on race configuration\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee56() {\n                        var tx, claims, payments, i;\n                        return regeneratorRuntime.wrap(function _callee56$(_context56) {\n                          while (1) {\n                            switch (_context56.prev = _context56.next) {\n                              case 0:\n                                _context56.next = 2;\n                                return racing.connect(blockchainBrain).postResults(raceId, newTokenIds);\n\n                              case 2:\n                                tx = _context56.sent;\n                                _context56.next = 5;\n                                return tx.wait();\n\n                              case 5:\n                                tx = _context56.sent;\n                                claims = tx.events.filter(function (x) {\n                                  return x.event == \"PrizeClaimed\";\n                                });\n                                payments = [ethers.utils.parseUnits(\"0.324\"), ethers.utils.parseUnits(\"0.108\"), ethers.utils.parseUnits(\"0.054\"), ethers.utils.parseUnits(\"0.054\")];\n\n\n                                for (i = 0; i < claims.length; i++) {\n                                  (0, _chai.expect)(claims[i].args._claimAmount).to.equal(payments[i]);\n                                }\n\n                              case 9:\n                              case \"end\":\n                                return _context56.stop();\n                            }\n                          }\n                        }, _callee56, undefined);\n                      })));\n\n                    case 3:\n                    case \"end\":\n                      return _context57.stop();\n                  }\n                }\n              }, _callee57, undefined);\n            })));\n\n            describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee60() {\n              return regeneratorRuntime.wrap(function _callee60$(_context60) {\n                while (1) {\n                  switch (_context60.prev = _context60.next) {\n                    case 0:\n                      it(\"should revert if number of horses sent does not match number of horses allowed\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee58() {\n                        return regeneratorRuntime.wrap(function _callee58$(_context58) {\n                          while (1) {\n                            switch (_context58.prev = _context58.next) {\n                              case 0:\n                                // Race in setup allows 12 horses\n                                (0, _chai.expect)(racing.connect(blockchainBrain).postResults(raceId, [1, 2, 3])).to.be.revertedWith(\"Racing: number of horses sent does not match allowed horses\");\n\n                              case 1:\n                              case \"end\":\n                                return _context58.stop();\n                            }\n                          }\n                        }, _callee58, undefined);\n                      })));\n\n                      it(\"should revert if race is not in registration state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee59() {\n                        return regeneratorRuntime.wrap(function _callee59$(_context59) {\n                          while (1) {\n                            switch (_context59.prev = _context59.next) {\n                              case 0:\n                                _context59.next = 2;\n                                return racing.connect(blockchainBrain).cancelRace(raceId, \"Post results test\");\n\n                              case 2:\n\n                                (0, _chai.expect)(racing.connect(blockchainBrain).postResults(raceId, [1, 2, 3])).to.be.revertedWith(\"Racing: race is not in registration state\");\n\n                              case 3:\n                              case \"end\":\n                                return _context59.stop();\n                            }\n                          }\n                        }, _callee59, undefined);\n                      })));\n\n                    case 2:\n                    case \"end\":\n                      return _context60.stop();\n                  }\n                }\n              }, _callee60, undefined);\n            })));\n\n          case 4:\n          case \"end\":\n            return _context61.stop();\n        }\n      }\n    }, _callee61, undefined);\n  })));\n\n  describe(\"cancelRace\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee71() {\n    return regeneratorRuntime.wrap(function _callee71$(_context71) {\n      while (1) {\n        switch (_context71.prev = _context71.next) {\n          case 0:\n            beforeEach(\"create 12 horses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee63() {\n              return regeneratorRuntime.wrap(function _callee63$(_context63) {\n                while (1) {\n                  switch (_context63.prev = _context63.next) {\n                    case 0:\n                      newTokenIds.forEach(function () {\n                        var _ref64 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee62(tokenId) {\n                          return regeneratorRuntime.wrap(function _callee62$(_context62) {\n                            while (1) {\n                              switch (_context62.prev = _context62.next) {\n                                case 0:\n                                  _context62.next = 2;\n                                  return core.mintCustomHorse(owner.address, 1, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Name_\" + tokenId), ethers.utils.formatBytes32String(\"Color\"));\n\n                                case 2:\n                                case \"end\":\n                                  return _context62.stop();\n                              }\n                            }\n                          }, _callee62, undefined);\n                        }));\n\n                        return function (_x7) {\n                          return _ref64.apply(this, arguments);\n                        };\n                      }());\n\n                    case 1:\n                    case \"end\":\n                      return _context63.stop();\n                  }\n                }\n              }, _callee63, undefined);\n            })));\n\n            beforeEach(\"create race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee64() {\n              return regeneratorRuntime.wrap(function _callee64$(_context64) {\n                while (1) {\n                  switch (_context64.prev = _context64.next) {\n                    case 0:\n                      _context64.next = 2;\n                      return racing.grantRole(ethers.utils.formatBytes32String(\"racing_owners\"), blockchainBrain.address);\n\n                    case 2:\n                      _context64.next = 4;\n                      return createRace(raceId);\n\n                    case 4:\n                    case \"end\":\n                      return _context64.stop();\n                  }\n                }\n              }, _callee64, undefined);\n            })));\n\n            describe(\"valid cancelation\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee68() {\n              return regeneratorRuntime.wrap(function _callee68$(_context68) {\n                while (1) {\n                  switch (_context68.prev = _context68.next) {\n                    case 0:\n                      it(\"should cancel a race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee65() {\n                        var tx, race;\n                        return regeneratorRuntime.wrap(function _callee65$(_context65) {\n                          while (1) {\n                            switch (_context65.prev = _context65.next) {\n                              case 0:\n                                _context65.next = 2;\n                                return racing.connect(blockchainBrain).cancelRace(raceId, \"Just cancel\");\n\n                              case 2:\n                                tx = _context65.sent;\n\n\n                                (0, _chai.expect)(tx).to.emit(racing, \"RaceCanceled\").withArgs(raceId, \"Just cancel\", blockchainBrain.address);\n\n                                _context65.next = 6;\n                                return racing.races(raceId);\n\n                              case 6:\n                                race = _context65.sent;\n\n                                (0, _chai.expect)(race.raceState).to.equal(3);\n\n                              case 8:\n                              case \"end\":\n                                return _context65.stop();\n                            }\n                          }\n                        }, _callee65, undefined);\n                      })));\n\n                      it(\"should decrease active races of horses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee66() {\n                        var i, tokenId, activeRaces, _i2, _activeRaces2;\n\n                        return regeneratorRuntime.wrap(function _callee66$(_context66) {\n                          while (1) {\n                            switch (_context66.prev = _context66.next) {\n                              case 0:\n                                i = 0;\n\n                              case 1:\n                                if (!(i < newTokenIds.length)) {\n                                  _context66.next = 12;\n                                  break;\n                                }\n\n                                tokenId = newTokenIds[i];\n\n                                // The token ID can be used as the gate number here as well\n\n                                _context66.next = 5;\n                                return racing.connect(owner).registerHorse(raceId, tokenId, i + 1);\n\n                              case 5:\n                                _context66.next = 7;\n                                return racing.horseActiveRaces(tokenId);\n\n                              case 7:\n                                activeRaces = _context66.sent;\n\n                                (0, _chai.expect)(activeRaces).to.equal(1);\n\n                              case 9:\n                                i++;\n                                _context66.next = 1;\n                                break;\n\n                              case 12:\n                                _context66.next = 14;\n                                return racing.connect(blockchainBrain).cancelRace(raceId, \"Cancel\");\n\n                              case 14:\n                                _i2 = 0;\n\n                              case 15:\n                                if (!(_i2 < newTokenIds.length)) {\n                                  _context66.next = 23;\n                                  break;\n                                }\n\n                                _context66.next = 18;\n                                return racing.horseActiveRaces(newTokenIds[_i2]);\n\n                              case 18:\n                                _activeRaces2 = _context66.sent;\n\n                                (0, _chai.expect)(_activeRaces2).to.equal(0);\n\n                              case 20:\n                                _i2++;\n                                _context66.next = 15;\n                                break;\n\n                              case 23:\n                              case \"end\":\n                                return _context66.stop();\n                            }\n                          }\n                        }, _callee66, undefined);\n                      })));\n\n                      it(\"should transfer fee to all nominators\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee67() {\n                        var ownerBalance, bbBalance, currentOwnerBalance, currentBBBalance;\n                        return regeneratorRuntime.wrap(function _callee67$(_context67) {\n                          while (1) {\n                            switch (_context67.prev = _context67.next) {\n                              case 0:\n                                _context67.next = 2;\n                                return core.connect(owner).transferFrom(owner.address, blockchainBrain.address, 2);\n\n                              case 2:\n                                _context67.next = 4;\n                                return erc20.balanceOf(owner.address);\n\n                              case 4:\n                                ownerBalance = _context67.sent;\n                                _context67.next = 7;\n                                return erc20.balanceOf(blockchainBrain.address);\n\n                              case 7:\n                                bbBalance = _context67.sent;\n                                _context67.next = 10;\n                                return racing.connect(owner).registerHorse(raceId, 1, 4);\n\n                              case 10:\n                                _context67.next = 12;\n                                return racing.connect(blockchainBrain).registerHorse(raceId, 2, 5);\n\n                              case 12:\n                                _context67.next = 14;\n                                return racing.connect(blockchainBrain).cancelRace(raceId, \"Cancel\");\n\n                              case 14:\n                                _context67.next = 16;\n                                return erc20.balanceOf(owner.address);\n\n                              case 16:\n                                currentOwnerBalance = _context67.sent;\n                                _context67.next = 19;\n                                return erc20.balanceOf(blockchainBrain.address);\n\n                              case 19:\n                                currentBBBalance = _context67.sent;\n\n\n                                (0, _chai.expect)(ownerBalance).to.equal(currentOwnerBalance);\n                                (0, _chai.expect)(bbBalance).to.equal(currentBBBalance);\n\n                              case 22:\n                              case \"end\":\n                                return _context67.stop();\n                            }\n                          }\n                        }, _callee67, undefined);\n                      })));\n\n                    case 3:\n                    case \"end\":\n                      return _context68.stop();\n                  }\n                }\n              }, _callee68, undefined);\n            })));\n\n            describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee70() {\n              return regeneratorRuntime.wrap(function _callee70$(_context70) {\n                while (1) {\n                  switch (_context70.prev = _context70.next) {\n                    case 0:\n                      it(\"should revert if race is not in registration state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee69() {\n                        return regeneratorRuntime.wrap(function _callee69$(_context69) {\n                          while (1) {\n                            switch (_context69.prev = _context69.next) {\n                              case 0:\n                                _context69.next = 2;\n                                return racing.connect(blockchainBrain).cancelRace(raceId, \"Cancel\");\n\n                              case 2:\n\n                                (0, _chai.expect)(racing.connect(blockchainBrain).cancelRace(raceId, \"take 2\")).to.be.revertedWith(\"Racing: race is not in registration state\");\n\n                              case 3:\n                              case \"end\":\n                                return _context69.stop();\n                            }\n                          }\n                        }, _callee69, undefined);\n                      })));\n\n                    case 1:\n                    case \"end\":\n                      return _context70.stop();\n                  }\n                }\n              }, _callee70, undefined);\n            })));\n\n          case 4:\n          case \"end\":\n            return _context71.stop();\n        }\n      }\n    }, _callee71, undefined);\n  })));\n\n  describe(\"adminRegisterHorse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee86() {\n    return regeneratorRuntime.wrap(function _callee86$(_context86) {\n      while (1) {\n        switch (_context86.prev = _context86.next) {\n          case 0:\n            beforeEach(\"create 12 horses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee73() {\n              return regeneratorRuntime.wrap(function _callee73$(_context73) {\n                while (1) {\n                  switch (_context73.prev = _context73.next) {\n                    case 0:\n                      newTokenIds.forEach(function () {\n                        var _ref74 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee72(tokenId) {\n                          return regeneratorRuntime.wrap(function _callee72$(_context72) {\n                            while (1) {\n                              switch (_context72.prev = _context72.next) {\n                                case 0:\n                                  _context72.next = 2;\n                                  return core.mintCustomHorse(owner.address, 1, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Name_\" + tokenId), ethers.utils.formatBytes32String(\"Color\"));\n\n                                case 2:\n                                case \"end\":\n                                  return _context72.stop();\n                              }\n                            }\n                          }, _callee72, undefined);\n                        }));\n\n                        return function (_x8) {\n                          return _ref74.apply(this, arguments);\n                        };\n                      }());\n\n                    case 1:\n                    case \"end\":\n                      return _context73.stop();\n                  }\n                }\n              }, _callee73, undefined);\n            })));\n\n            beforeEach(\"create race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee74() {\n              return regeneratorRuntime.wrap(function _callee74$(_context74) {\n                while (1) {\n                  switch (_context74.prev = _context74.next) {\n                    case 0:\n                      _context74.next = 2;\n                      return racing.grantRole(ethers.utils.formatBytes32String(\"racing_owners\"), blockchainBrain.address);\n\n                    case 2:\n                      _context74.next = 4;\n                      return createRace(raceId);\n\n                    case 4:\n                    case \"end\":\n                      return _context74.stop();\n                  }\n                }\n              }, _callee74, undefined);\n            })));\n\n            describe(\"valid nomination\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee77() {\n              return regeneratorRuntime.wrap(function _callee77$(_context77) {\n                while (1) {\n                  switch (_context77.prev = _context77.next) {\n                    case 0:\n                      it(\"should nominate a horse without paying anything\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee75() {\n                        var nominator, balanceBefore, tx, currentBalance;\n                        return regeneratorRuntime.wrap(function _callee75$(_context75) {\n                          while (1) {\n                            switch (_context75.prev = _context75.next) {\n                              case 0:\n                                nominator = acc[9].address;\n                                _context75.next = 3;\n                                return erc20.balanceOf(nominator);\n\n                              case 3:\n                                balanceBefore = _context75.sent;\n                                _context75.next = 6;\n                                return racing.grantRole(ethers.utils.formatBytes32String(\"racing_owners\"), nominator);\n\n                              case 6:\n                                _context75.next = 8;\n                                return racing.connect(acc[9]).adminRegisterHorse(raceId, 1, 2);\n\n                              case 8:\n                                tx = _context75.sent;\n                                _context75.next = 11;\n                                return erc20.balanceOf(nominator);\n\n                              case 11:\n                                currentBalance = _context75.sent;\n\n\n                                (0, _chai.expect)(currentBalance).to.equal(balanceBefore);\n\n                                // The nominator remains the owner of the horse nonetheless\n                                (0, _chai.expect)(tx).to.emit(racing, \"HorseRegistered\").withArgs(raceId, owner.address, 1, 2);\n\n                              case 14:\n                              case \"end\":\n                                return _context75.stop();\n                            }\n                          }\n                        }, _callee75, undefined);\n                      })));\n\n                      it(\"should not consider active races limit\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee76() {\n                        var raceId2, raceId3, raceId4;\n                        return regeneratorRuntime.wrap(function _callee76$(_context76) {\n                          while (1) {\n                            switch (_context76.prev = _context76.next) {\n                              case 0:\n                                raceId2 = ethers.utils.formatBytes32String(\"race_id_2\");\n                                raceId3 = ethers.utils.formatBytes32String(\"race_id_3\");\n                                raceId4 = ethers.utils.formatBytes32String(\"race_id_4\");\n                                _context76.next = 5;\n                                return createRace(raceId2);\n\n                              case 5:\n                                _context76.next = 7;\n                                return createRace(raceId3);\n\n                              case 7:\n                                _context76.next = 9;\n                                return createRace(raceId4);\n\n                              case 9:\n                                _context76.next = 11;\n                                return racing.connect(blockchainBrain).adminRegisterHorse(raceId, 4, 12);\n\n                              case 11:\n                                _context76.next = 13;\n                                return racing.connect(blockchainBrain).adminRegisterHorse(raceId2, 4, 3);\n\n                              case 13:\n                                _context76.next = 15;\n                                return racing.connect(blockchainBrain).adminRegisterHorse(raceId3, 4, 5);\n\n                              case 15:\n                                _context76.next = 17;\n                                return racing.connect(blockchainBrain).adminRegisterHorse(raceId4, 4, 2);\n\n                              case 17:\n                                _context76.t0 = _chai.expect;\n                                _context76.next = 20;\n                                return racing.horseActiveRaces(4);\n\n                              case 20:\n                                _context76.t1 = _context76.sent;\n                                (0, _context76.t0)(_context76.t1).to.equal(4);\n\n                              case 22:\n                              case \"end\":\n                                return _context76.stop();\n                            }\n                          }\n                        }, _callee76, undefined);\n                      })));\n\n                    case 2:\n                    case \"end\":\n                      return _context77.stop();\n                  }\n                }\n              }, _callee77, undefined);\n            })));\n\n            describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee85() {\n              return regeneratorRuntime.wrap(function _callee85$(_context85) {\n                while (1) {\n                  switch (_context85.prev = _context85.next) {\n                    case 0:\n                      it(\"should revert if race is not on registration state\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee78() {\n                        return regeneratorRuntime.wrap(function _callee78$(_context78) {\n                          while (1) {\n                            switch (_context78.prev = _context78.next) {\n                              case 0:\n                                _context78.next = 2;\n                                return racing.connect(blockchainBrain).cancelRace(raceId, \"reason\");\n\n                              case 2:\n\n                                (0, _chai.expect)(racing.connect(blockchainBrain).adminRegisterHorse(raceId, 1, 1)).to.be.revertedWith(\"Racing: race not accepting registrations\");\n\n                              case 3:\n                              case \"end\":\n                                return _context78.stop();\n                            }\n                          }\n                        }, _callee78, undefined);\n                      })));\n\n                      it(\"should revert if all horses are registered\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee80() {\n                        return regeneratorRuntime.wrap(function _callee80$(_context80) {\n                          while (1) {\n                            switch (_context80.prev = _context80.next) {\n                              case 0:\n                                newTokenIds.forEach(function () {\n                                  var _ref82 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee79(tokenId) {\n                                    return regeneratorRuntime.wrap(function _callee79$(_context79) {\n                                      while (1) {\n                                        switch (_context79.prev = _context79.next) {\n                                          case 0:\n                                            _context79.next = 2;\n                                            return racing.connect(owner).registerHorse(raceId, tokenId, tokenId);\n\n                                          case 2:\n                                          case \"end\":\n                                            return _context79.stop();\n                                        }\n                                      }\n                                    }, _callee79, undefined);\n                                  }));\n\n                                  return function (_x9) {\n                                    return _ref82.apply(this, arguments);\n                                  };\n                                }());\n\n                                (0, _chai.expect)(racing.connect(blockchainBrain).adminRegisterHorse(raceId, 1, 1)).to.be.revertedWith(\"Racing: max number of horses for race\");\n\n                              case 2:\n                              case \"end\":\n                                return _context80.stop();\n                            }\n                          }\n                        }, _callee80, undefined);\n                      })));\n\n                      it(\"should revert if gate is lower than 0\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee81() {\n                        return regeneratorRuntime.wrap(function _callee81$(_context81) {\n                          while (1) {\n                            switch (_context81.prev = _context81.next) {\n                              case 0:\n                                (0, _chai.expect)(racing.connect(blockchainBrain).adminRegisterHorse(raceId, 1, 0)).to.be.revertedWith(\"Racing: gate number lower than 1\");\n\n                              case 1:\n                              case \"end\":\n                                return _context81.stop();\n                            }\n                          }\n                        }, _callee81, undefined);\n                      })));\n\n                      it(\"should revert if gate is greater than horses allowed\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee82() {\n                        return regeneratorRuntime.wrap(function _callee82$(_context82) {\n                          while (1) {\n                            switch (_context82.prev = _context82.next) {\n                              case 0:\n                                (0, _chai.expect)(racing.connect(blockchainBrain).adminRegisterHorse(raceId, 1, 13)).to.be.revertedWith(\"Racing: gate number greater than horses allowed\");\n\n                              case 1:\n                              case \"end\":\n                                return _context82.stop();\n                            }\n                          }\n                        }, _callee82, undefined);\n                      })));\n\n                      it(\"should revert if gate is already taken\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee83() {\n                        return regeneratorRuntime.wrap(function _callee83$(_context83) {\n                          while (1) {\n                            switch (_context83.prev = _context83.next) {\n                              case 0:\n                                _context83.next = 2;\n                                return racing.connect(blockchainBrain).adminRegisterHorse(raceId, 1, 2);\n\n                              case 2:\n\n                                (0, _chai.expect)(racing.connect(blockchainBrain).adminRegisterHorse(raceId, 4, 2)).to.be.revertedWith(\"Racing: gate number already taken\");\n\n                              case 3:\n                              case \"end\":\n                                return _context83.stop();\n                            }\n                          }\n                        }, _callee83, undefined);\n                      })));\n\n                      it(\"should revert if horse is already registered for race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee84() {\n                        return regeneratorRuntime.wrap(function _callee84$(_context84) {\n                          while (1) {\n                            switch (_context84.prev = _context84.next) {\n                              case 0:\n                                _context84.next = 2;\n                                return racing.connect(blockchainBrain).adminRegisterHorse(raceId, 4, 1);\n\n                              case 2:\n\n                                (0, _chai.expect)(racing.connect(blockchainBrain).adminRegisterHorse(raceId, 4, 5)).to.be.revertedWith(\"Racing: horse already registered for this race\");\n\n                              case 3:\n                              case \"end\":\n                                return _context84.stop();\n                            }\n                          }\n                        }, _callee84, undefined);\n                      })));\n\n                    case 6:\n                    case \"end\":\n                      return _context85.stop();\n                  }\n                }\n              }, _callee85, undefined);\n            })));\n\n          case 4:\n          case \"end\":\n            return _context86.stop();\n        }\n      }\n    }, _callee86, undefined);\n  })));\n\n  describe(\"meta-transactions\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee92() {\n    return regeneratorRuntime.wrap(function _callee92$(_context92) {\n      while (1) {\n        switch (_context92.prev = _context92.next) {\n          case 0:\n            beforeEach(\"create 2 horses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee88() {\n              return regeneratorRuntime.wrap(function _callee88$(_context88) {\n                while (1) {\n                  switch (_context88.prev = _context88.next) {\n                    case 0:\n                      [1, 2].forEach(function () {\n                        var _ref89 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee87(tokenId) {\n                          return regeneratorRuntime.wrap(function _callee87$(_context87) {\n                            while (1) {\n                              switch (_context87.prev = _context87.next) {\n                                case 0:\n                                  _context87.next = 2;\n                                  return core.mintCustomHorse(owner.address, 1, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Name_\" + tokenId), ethers.utils.formatBytes32String(\"Color\"));\n\n                                case 2:\n                                case \"end\":\n                                  return _context87.stop();\n                              }\n                            }\n                          }, _callee87, undefined);\n                        }));\n\n                        return function (_x10) {\n                          return _ref89.apply(this, arguments);\n                        };\n                      }());\n\n                    case 1:\n                    case \"end\":\n                      return _context88.stop();\n                  }\n                }\n              }, _callee88, undefined);\n            })));\n\n            beforeEach(\"create a race\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee89() {\n              return regeneratorRuntime.wrap(function _callee89$(_context89) {\n                while (1) {\n                  switch (_context89.prev = _context89.next) {\n                    case 0:\n                      _context89.next = 2;\n                      return racing.grantRole(ethers.utils.formatBytes32String(\"racing_owners\"), blockchainBrain.address);\n\n                    case 2:\n                      _context89.next = 4;\n                      return createRace(raceId);\n\n                    case 4:\n                    case \"end\":\n                      return _context89.stop();\n                  }\n                }\n              }, _callee89, undefined);\n            })));\n\n            describe(\"registerHorse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee91() {\n              return regeneratorRuntime.wrap(function _callee91$(_context91) {\n                while (1) {\n                  switch (_context91.prev = _context91.next) {\n                    case 0:\n                      it(\"should register a horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee90() {\n                        var functionSignature, typedData, signedData, _ref93, r, s, v, tx;\n\n                        return regeneratorRuntime.wrap(function _callee90$(_context90) {\n                          while (1) {\n                            switch (_context90.prev = _context90.next) {\n                              case 0:\n                                functionSignature = racing.interface.encodeFunctionData(\"registerHorse\", [raceId, 1, 10]);\n                                _context90.t0 = _utils.getTypedData;\n                                _context90.t1 = _utils.chainId;\n                                _context90.t2 = racing.address;\n                                _context90.next = 6;\n                                return racing.getNonce(owner.address);\n\n                              case 6:\n                                _context90.t3 = _context90.sent;\n                                _context90.t4 = owner.address;\n                                _context90.t5 = functionSignature;\n                                _context90.t6 = {\n                                  name: \"ZED Racing\",\n                                  version: \"1\",\n                                  chainId: _context90.t1,\n                                  verifyingContract: _context90.t2,\n                                  nonce: _context90.t3,\n                                  from: _context90.t4,\n                                  functionSignature: _context90.t5\n                                };\n                                _context90.next = 12;\n                                return (0, _context90.t0)(_context90.t6);\n\n                              case 12:\n                                typedData = _context90.sent;\n                                _context90.next = 15;\n                                return owner._signTypedData(typedData.domain, typedData.types, typedData.message);\n\n                              case 15:\n                                signedData = _context90.sent;\n                                _context90.next = 18;\n                                return (0, _utils.getRsvFromSig)(signedData);\n\n                              case 18:\n                                _ref93 = _context90.sent;\n                                r = _ref93.r;\n                                s = _ref93.s;\n                                v = _ref93.v;\n                                _context90.next = 24;\n                                return racing.executeMetaTransaction(owner.address, functionSignature, r, s, v);\n\n                              case 24:\n                                tx = _context90.sent;\n\n\n                                (0, _chai.expect)(tx).to.emit(racing, \"HorseRegistered\").withArgs(raceId, owner.address, 1, 10);\n\n                              case 26:\n                              case \"end\":\n                                return _context90.stop();\n                            }\n                          }\n                        }, _callee90, undefined);\n                      })));\n\n                    case 1:\n                    case \"end\":\n                      return _context91.stop();\n                  }\n                }\n              }, _callee91, undefined);\n            })));\n\n          case 3:\n          case \"end\":\n            return _context92.stop();\n        }\n      }\n    }, _callee92, undefined);\n  })));\n\n  describe(\"pausing\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee99() {\n    return regeneratorRuntime.wrap(function _callee99$(_context99) {\n      while (1) {\n        switch (_context99.prev = _context99.next) {\n          case 0:\n            beforeEach(\"grant role\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee93() {\n              return regeneratorRuntime.wrap(function _callee93$(_context93) {\n                while (1) {\n                  switch (_context93.prev = _context93.next) {\n                    case 0:\n                      _context93.next = 2;\n                      return racing.grantRoleAdmin(ethers.utils.formatBytes32String(\"racing_owners\"), blockchainBrain.address);\n\n                    case 2:\n                    case \"end\":\n                      return _context93.stop();\n                  }\n                }\n              }, _callee93, undefined);\n            })));\n\n            it(\"should pause the contract\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee94() {\n              return regeneratorRuntime.wrap(function _callee94$(_context94) {\n                while (1) {\n                  switch (_context94.prev = _context94.next) {\n                    case 0:\n                      _context94.next = 2;\n                      return racing.connect(blockchainBrain).pause();\n\n                    case 2:\n                    case \"end\":\n                      return _context94.stop();\n                  }\n                }\n              }, _callee94, undefined);\n            })));\n\n            describe(\"nomination\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee98() {\n              return regeneratorRuntime.wrap(function _callee98$(_context98) {\n                while (1) {\n                  switch (_context98.prev = _context98.next) {\n                    case 0:\n                      beforeEach(\"create 1 horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee95() {\n                        return regeneratorRuntime.wrap(function _callee95$(_context95) {\n                          while (1) {\n                            switch (_context95.prev = _context95.next) {\n                              case 0:\n                                _context95.next = 2;\n                                return core.mintCustomHorse(owner.address, 1, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Fixed name\"), ethers.utils.formatBytes32String(\"Color\"));\n\n                              case 2:\n                              case \"end\":\n                                return _context95.stop();\n                            }\n                          }\n                        }, _callee95, undefined);\n                      })));\n\n                      beforeEach(\"pause contract\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee96() {\n                        return regeneratorRuntime.wrap(function _callee96$(_context96) {\n                          while (1) {\n                            switch (_context96.prev = _context96.next) {\n                              case 0:\n                                _context96.next = 2;\n                                return racing.connect(blockchainBrain).pause();\n\n                              case 2:\n                              case \"end\":\n                                return _context96.stop();\n                            }\n                          }\n                        }, _callee96, undefined);\n                      })));\n\n                      it(\"should revert if contract is paused\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee97() {\n                        return regeneratorRuntime.wrap(function _callee97$(_context97) {\n                          while (1) {\n                            switch (_context97.prev = _context97.next) {\n                              case 0:\n                                (0, _chai.expect)(racing.connect(owner).registerHorse(raceId, 1, 10)).to.be.revertedWith(\"Pausable: paused\");\n\n                              case 1:\n                              case \"end\":\n                                return _context97.stop();\n                            }\n                          }\n                        }, _callee97, undefined);\n                      })));\n\n                    case 3:\n                    case \"end\":\n                      return _context98.stop();\n                  }\n                }\n              }, _callee98, undefined);\n            })));\n\n          case 3:\n          case \"end\":\n            return _context99.stop();\n        }\n      }\n    }, _callee99, undefined);\n  })));\n\n  describe(\"unpausing\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee102() {\n    return regeneratorRuntime.wrap(function _callee102$(_context102) {\n      while (1) {\n        switch (_context102.prev = _context102.next) {\n          case 0:\n            beforeEach(\"grant role\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee100() {\n              return regeneratorRuntime.wrap(function _callee100$(_context100) {\n                while (1) {\n                  switch (_context100.prev = _context100.next) {\n                    case 0:\n                      _context100.next = 2;\n                      return racing.grantRoleAdmin(ethers.utils.formatBytes32String(\"racing_owners\"), blockchainBrain.address);\n\n                    case 2:\n                    case \"end\":\n                      return _context100.stop();\n                  }\n                }\n              }, _callee100, undefined);\n            })));\n\n            it(\"should unpause the contract\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee101() {\n              return regeneratorRuntime.wrap(function _callee101$(_context101) {\n                while (1) {\n                  switch (_context101.prev = _context101.next) {\n                    case 0:\n                      _context101.next = 2;\n                      return racing.connect(blockchainBrain).pause();\n\n                    case 2:\n                      _context101.next = 4;\n                      return racing.connect(blockchainBrain).unpause();\n\n                    case 4:\n                    case \"end\":\n                      return _context101.stop();\n                  }\n                }\n              }, _callee101, undefined);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context102.stop();\n        }\n      }\n    }, _callee102, undefined);\n  })));\n\n  describe(\"change fee receiver\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee105() {\n    return regeneratorRuntime.wrap(function _callee105$(_context105) {\n      while (1) {\n        switch (_context105.prev = _context105.next) {\n          case 0:\n            beforeEach(\"grant role\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee103() {\n              return regeneratorRuntime.wrap(function _callee103$(_context103) {\n                while (1) {\n                  switch (_context103.prev = _context103.next) {\n                    case 0:\n                      _context103.next = 2;\n                      return racing.grantRoleAdmin(ethers.utils.formatBytes32String(\"racing_owners\"), blockchainBrain.address);\n\n                    case 2:\n                    case \"end\":\n                      return _context103.stop();\n                  }\n                }\n              }, _callee103, undefined);\n            })));\n\n            it(\"should change the fee receiver\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee104() {\n              return regeneratorRuntime.wrap(function _callee104$(_context104) {\n                while (1) {\n                  switch (_context104.prev = _context104.next) {\n                    case 0:\n                      _context104.t0 = _chai.expect;\n                      _context104.next = 3;\n                      return racing.feeReceiver();\n\n                    case 3:\n                      _context104.t1 = _context104.sent;\n                      _context104.t2 = feeReceiver.address;\n                      (0, _context104.t0)(_context104.t1).to.equal(_context104.t2);\n                      _context104.next = 8;\n                      return racing.connect(blockchainBrain).changeFeeReceiver(acc[4].address);\n\n                    case 8:\n                      _context104.t3 = _chai.expect;\n                      _context104.next = 11;\n                      return racing.feeReceiver();\n\n                    case 11:\n                      _context104.t4 = _context104.sent;\n                      _context104.t5 = acc[4].address;\n                      (0, _context104.t3)(_context104.t4).to.equal(_context104.t5);\n\n                    case 14:\n                    case \"end\":\n                      return _context104.stop();\n                  }\n                }\n              }, _callee104, undefined);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context105.stop();\n        }\n      }\n    }, _callee105, undefined);\n  })));\n\n  var createRace = function () {\n    var _ref107 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee106(raceId) {\n      var numberOfHorses = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n      var distance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1200;\n      var account = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : blockchainBrain;\n      return regeneratorRuntime.wrap(function _callee106$(_context106) {\n        while (1) {\n          switch (_context106.prev = _context106.next) {\n            case 0:\n              _context106.next = 2;\n              return racing.connect(account).createRace(raceId, numberOfHorses, DEFAULT_ENTRANCE_FEE, distance, DEFAULT_PRIZE_POOL, DEFAULT_ZED_FEE, DEFAULT_PAYOUTS);\n\n            case 2:\n            case \"end\":\n              return _context106.stop();\n          }\n        }\n      }, _callee106, undefined);\n    }));\n\n    return function createRace(_x14) {\n      return _ref107.apply(this, arguments);\n    };\n  }();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "RacingTest.js"
      ],
      "names": [
        "raceId",
        "ethers",
        "utils",
        "formatBytes32String",
        "MAX_WETH",
        "parseUnits",
        "newTokenIds",
        "DEFAULT_PAYOUTS",
        "DEFAULT_ZED_FEE",
        "DEFAULT_ENTRANCE_FEE",
        "DEFAULT_PRIZE_POOL",
        "describe",
        "core",
        "horseData",
        "racingLogic",
        "racingLogicInstance",
        "racingProxy",
        "racingProxyAdmin",
        "racing",
        "erc20",
        "acc",
        "deployer",
        "owner",
        "blockchainBrain",
        "feeReceiver",
        "before",
        "getSigners",
        "beforeEach",
        "getContractFactory",
        "deploy",
        "deployed",
        "address",
        "Contract",
        "interface",
        "connect",
        "grantRole",
        "mintCustomHorse",
        "setDomainSeparator",
        "chainId",
        "initialize",
        "transfer",
        "approve",
        "it",
        "expect",
        "hasRole",
        "to",
        "be",
        "true",
        "getProxyImplementation",
        "equal",
        "newLogic",
        "upgrade",
        "false",
        "grantRoleAdmin",
        "revertedWith",
        "createRace",
        "forEach",
        "tokenId",
        "registerHorse",
        "tx",
        "emit",
        "withArgs",
        "cancelRace",
        "raceId2",
        "raceId3",
        "raceId4",
        "balanceOf",
        "preBalance",
        "currentBalance",
        "gt",
        "preOwnerBalance",
        "races",
        "raceData",
        "horsesRegistered",
        "deregisterHorseFromRace",
        "raceLineup",
        "gateNumber",
        "finalPosition",
        "nominator",
        "constants",
        "AddressZero",
        "horseActiveRaces",
        "activeRaces",
        "raceGateToId",
        "gateToId",
        "isRaceGateTaken",
        "currentOwnerBalance",
        "i",
        "length",
        "postResults",
        "wait",
        "claims",
        "events",
        "filter",
        "x",
        "event",
        "payments",
        "args",
        "_claimAmount",
        "race",
        "raceState",
        "transferFrom",
        "ownerBalance",
        "bbBalance",
        "currentBBBalance",
        "balanceBefore",
        "adminRegisterHorse",
        "functionSignature",
        "encodeFunctionData",
        "getTypedData",
        "getNonce",
        "name",
        "version",
        "verifyingContract",
        "nonce",
        "from",
        "typedData",
        "_signTypedData",
        "domain",
        "types",
        "message",
        "signedData",
        "r",
        "s",
        "v",
        "executeMetaTransaction",
        "pause",
        "unpause",
        "changeFeeReceiver",
        "numberOfHorses",
        "distance",
        "account"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,IAAMA,SAASC,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,SAAjC,CAAf;AAAA,IACEC,WAAWH,OAAOC,KAAP,CAAaG,UAAb,CAAwB,MAAxB,CADb;AAAA,IAEEC,cAAc,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,CAFhB;AAAA,IAGEC,kBAAkB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAHpB;AAAA,IAIEC,kBAAkB,EAJpB;AAAA,IAKEC,uBAAuBR,OAAOC,KAAP,CAAaG,UAAb,CAAwB,MAAxB,CALzB;AAAA,IAMEK,qBAAqBT,OAAOC,KAAP,CAAaG,UAAb,CAAwB,MAAxB,CANvB;;AAQAM,SAAS,aAAT,EAAwB,YAAM;AAC5B,MAAIC,aAAJ;AAAA,MACEC,kBADF;AAAA,MAEEC,oBAFF;AAAA,MAGEC,4BAHF;AAAA,MAIEC,oBAJF;AAAA,MAKEC,yBALF;AAAA,MAMEC,eANF;AAAA,MAOEC,cAPF;;AASA,MAAIC,YAAJ;AAAA,MAASC,iBAAT;AAAA,MAAmBC,cAAnB;AAAA,MAA0BC,wBAA1B;AAAA,MAA2CC,oBAA3C;;AAEAC,SAAO,eAAP,0DAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACVxB,OAAOyB,UAAP,EADU;;AAAA;AACtBN,eADsB;;AAEtBC,uBAAWD,IAAI,CAAJ,CAAX;AACAE,oBAAQF,IAAI,CAAJ,CAAR;AACAG,8BAAkBH,IAAI,CAAJ,CAAlB;AACAI,0BAAcJ,IAAI,CAAJ,CAAd;;AALsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAQAO,aAAW,eAAX,0DAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACR1B,OAAO2B,kBAAP,CAA0B,WAA1B,CADQ;;AAAA;AAC1Bf,qBAD0B;AAAA;AAAA,mBAEbZ,OAAO2B,kBAAP,CAA0B,MAA1B,CAFa;;AAAA;AAE1BhB,gBAF0B;AAAA;AAAA,mBAGZX,OAAO2B,kBAAP,CAA0B,WAA1B,CAHY;;AAAA;AAG1BT,iBAH0B;AAAA;AAAA,mBAIElB,OAAO2B,kBAAP,CAA0B,aAA1B,CAJF;;AAAA;AAI1Bb,+BAJ0B;AAAA;AAAA,mBAKDd,OAAO2B,kBAAP,CAA0B,eAA1B,CALC;;AAAA;AAK1BX,4BAL0B;AAAA;AAAA,mBAMNhB,OAAO2B,kBAAP,CAA0B,aAA1B,CANM;;AAAA;AAM1BZ,uBAN0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AASAW,aAAW,kBAAX,0DAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEXd,UAAUgB,MAAV,EAFW;;AAAA;AAE7BhB,qBAF6B;AAAA;AAAA,mBAGvBA,UAAUiB,QAAV,EAHuB;;AAAA;AAAA;AAAA,mBAKhBlB,KAAKiB,MAAL,CAAYhB,UAAUkB,OAAtB,CALgB;;AAAA;AAK7BnB,gBAL6B;AAAA;AAAA,mBAMvBA,KAAKkB,QAAL,EANuB;;AAAA;AAAA;AAAA,mBASfX,MAAMU,MAAN,CAAa5B,OAAOC,KAAP,CAAaG,UAAb,CAAwB,KAAxB,CAAb,CATe;;AAAA;AAS7Bc,iBAT6B;AAAA;AAAA,mBAUvBA,MAAMW,QAAN,EAVuB;;AAAA;AAAA;AAAA,mBAcTf,oBAAoBc,MAApB,EAdS;;AAAA;AAc7Bf,uBAd6B;AAAA;AAAA,mBAevBA,YAAYgB,QAAZ,EAfuB;;AAAA;AAAA;AAAA,mBAkBJb,iBAAiBY,MAAjB,EAlBI;;AAAA;AAkB7BZ,4BAlB6B;AAAA;AAAA,mBAmBvBA,iBAAiBa,QAAjB,EAnBuB;;AAAA;AAAA;AAAA,mBAsBTd,YAAYa,MAAZ,CAClBf,YAAYiB,OADM,EAElBd,iBAAiBc,OAFC,CAtBS;;AAAA;AAsB7Bf,uBAtB6B;AAAA;AAAA,mBA0BvBA,YAAYc,QAAZ,EA1BuB;;AAAA;;AA4B7B;AACAZ,qBAAS,IAAIjB,OAAO+B,QAAX,CAAoBhB,YAAYe,OAAhC,EAAyCjB,YAAYmB,SAArD,CAAT;AACAf,qBAASA,OAAOgB,OAAP,CAAeb,QAAf,CAAT;;AA9B6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAiCAM,aAAW,kCAAX,0DAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGvCf,KAAKuB,SAAL,CACJlC,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,aAAjC,CADI,EAEJkB,SAASU,OAFL,CAHuC;;AAAA;AAAA;AAAA,mBAOvCnB,KAAKuB,SAAL,CACJlC,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,gBAAjC,CADI,EAEJkB,SAASU,OAFL,CAPuC;;AAAA;AAAA;AAAA,mBAavCnB,KAAKwB,eAAL,CACJd,MAAMS,OADF,EAEJ,CAFI,EAGJ9B,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,MAAjC,CAHI,EAIJF,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,WAAjC,CAJI,EAKJF,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,OAAjC,CALI,CAbuC;;AAAA;AAAA;AAAA,mBAqBvCe,OAAOmB,kBAAP,CAA0B,YAA1B,EAAwC,GAAxC,EAA6CC,cAA7C,CArBuC;;AAAA;AAAA;AAAA,mBAwBvCpB,OAAOqB,UAAP,CAAkBf,YAAYO,OAA9B,EAAuCZ,MAAMY,OAA7C,EAAsDnB,KAAKmB,OAA3D,CAxBuC;;AAAA;AAAA;AAAA,mBA2BvCZ,MAAMqB,QAAN,CAAejB,gBAAgBQ,OAA/B,EAAwC9B,OAAOC,KAAP,CAAaG,UAAb,CAAwB,GAAxB,CAAxC,CA3BuC;;AAAA;AAAA;AAAA,mBA4BvCc,MAAMe,OAAN,CAAcX,eAAd,EAA+BkB,OAA/B,CAAuCvB,OAAOa,OAA9C,EAAuD3B,QAAvD,CA5BuC;;AAAA;AAAA;AAAA,mBA8BvCe,MAAMqB,QAAN,CAAelB,MAAMS,OAArB,EAA8B9B,OAAOC,KAAP,CAAaG,UAAb,CAAwB,GAAxB,CAA9B,CA9BuC;;AAAA;AAAA;AAAA,mBA+BvCc,MAAMe,OAAN,CAAcZ,KAAd,EAAqBmB,OAArB,CAA6BvB,OAAOa,OAApC,EAA6C3B,QAA7C,CA/BuC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/C;;AAkCAO,WAAS,yBAAT,0DAAoC;AAAA;AAAA;AAAA;AAAA;AAClC+B,eAAG,+CAAH,0DAAoD;AAAA;AAAA;AAAA;AAAA;AAAA,qCAClDC,YADkD;AAAA;AAAA,6BAE1CzB,OAAO0B,OAAP,CACJ3C,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,qBAAjC,CADI,EAEJkB,SAASU,OAFL,CAF0C;;AAAA;AAAA;AAAA,sDAMhDc,EANgD,CAM7CC,EAN6C,CAM1CC,IAN0C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApD;;AADkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAWApC,WAAS,OAAT,0DAAkB;AAAA;AAAA;AAAA;AAAA;AAChB+B,eAAG,oCAAH,0DAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEjCzB,iBAAiB+B,sBAAjB,CAAwChC,YAAYe,OAApD,CAFiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAzC;;AAKAW,eAAG,sCAAH,0DAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACzCC,YADyC;AAAA;AAAA,6BAEjC1B,iBAAiB+B,sBAAjB,CAAwChC,YAAYe,OAApD,CAFiC;;AAAA;AAAA;AAAA,qCAG9BjB,YAAYiB,OAHkB;AAAA,sDAGvCc,EAHuC,CAGpCI,KAHoC;AAAA;AAAA,6BAKlBlC,oBAAoBc,MAApB,EALkB;;AAAA;AAKnCqB,8BALmC;AAAA;AAAA,6BAMnCA,SAASpB,QAAT,EANmC;;AAAA;AAAA;AAAA,6BAQnCb,iBAAiBkC,OAAjB,CAAyBnC,YAAYe,OAArC,EAA8CmB,SAASnB,OAAvD,CARmC;;AAAA;AAAA,qCAUzCY,YAVyC;AAAA;AAAA,6BAWjC1B,iBAAiB+B,sBAAjB,CAAwChC,YAAYe,OAApD,CAXiC;;AAAA;AAAA;AAAA,qCAY9BmB,SAASnB,OAZqB;AAAA,sDAYvCc,EAZuC,CAYpCI,KAZoC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA3C;;AAeAP,eAAG,mCAAH,0DAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACtCC,YADsC;AAAA;AAAA,6BAE9BzB,OAAO0B,OAAP,CACJ3C,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,eAAjC,CADI,EAEJoB,gBAAgBQ,OAFZ,CAF8B;;AAAA;AAAA;AAAA,sDAMpCc,EANoC,CAMjCC,EANiC,CAM9BM,KAN8B;AAAA;AAAA,6BAQhClC,OAAOmC,cAAP,CACJpD,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,eAAjC,CADI,EAEJoB,gBAAgBQ,OAFZ,CARgC;;AAAA;AAAA,qCAatCY,YAbsC;AAAA;AAAA,6BAc9BzB,OAAO0B,OAAP,CACJ3C,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,eAAjC,CADI,EAEJoB,gBAAgBQ,OAFZ,CAd8B;;AAAA;AAAA;AAAA,sDAkBpCc,EAlBoC,CAkBjCC,EAlBiC,CAkB9BC,IAlB8B;AAAA;AAAA,6BAoBfhC,oBAAoBc,MAApB,EApBe;;AAAA;AAoBhCqB,8BApBgC;AAAA;AAAA,6BAqBhCA,SAASpB,QAAT,EArBgC;;AAAA;AAAA;AAAA,6BAuBhCb,iBAAiBkC,OAAjB,CAAyBnC,YAAYe,OAArC,EAA8CmB,SAASnB,OAAvD,CAvBgC;;AAAA;AAAA,qCAyBtCY,YAzBsC;AAAA;AAAA,6BA0B9BzB,OAAO0B,OAAP,CACJ3C,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,eAAjC,CADI,EAEJoB,gBAAgBQ,OAFZ,CA1B8B;;AAAA;AAAA;AAAA,sDA8BpCc,EA9BoC,CA8BjCC,EA9BiC,CA8B9BC,IA9B8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAxC;;AAiCAL,eAAG,yDAAH,0DAA8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACrC3B,oBAAoBc,MAApB,EADqC;;AAAA;AACtDqB,8BADsD;AAAA;AAAA,6BAEtDA,SAASpB,QAAT,EAFsD;;AAAA;AAAA;AAAA,6BAItDb,iBAAiBkC,OAAjB,CAAyBnC,YAAYe,OAArC,EAA8CmB,SAASnB,OAAvD,CAJsD;;AAAA;;AAM5D,wCACEb,OAAOqB,UAAP,CAAkBf,YAAYO,OAA9B,EAAuCZ,MAAMY,OAA7C,EAAsDnB,KAAKmB,OAA3D,CADF,EAEEc,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,gDAFrB;;AAN4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA9D;;AAtDgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAkEA3C,WAAS,aAAT,0DAAwB;AAAA;AAAA;AAAA;AAAA;AACtBgB,uBAAW,mBAAX,0DAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACxBT,OAAOiB,SAAP,CACJlC,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,eAAjC,CADI,EAEJoB,gBAAgBQ,OAFZ,CADwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC;;AAOAW,eAAG,iDAAH,0DAAsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAC9Ca,WAAWvD,MAAX,CAD8C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAtD;;AAIAW,qBAAS,SAAT,0DAAoB;AAAA;AAAA;AAAA;AAAA;AAClB+B,yBAAG,4DAAH,0DAAiE;AAAA;AAAA;AAAA;AAAA;AAC/D,kDACExB,OACGgB,OADH,CACWd,IAAI,CAAJ,CADX,EAEGmC,UAFH,CAGIvD,MAHJ,EAII,EAJJ,EAKIS,oBALJ,EAMI,IANJ,EAOIC,kBAPJ,EAQIF,eARJ,EASID,eATJ,CADF,EAYEsC,EAZF,CAYKC,EAZL,CAYQQ,YAZR,CAYqB,4BAZrB;;AAD+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAjE;;AAgBAZ,yBAAG,4EAAH,0DAAiF;AAAA;AAAA;AAAA;AAAA;AAC/E,kDAAOa,WAAWvD,MAAX,EAAmB,CAAnB,CAAP,EAA8B6C,EAA9B,CAAiCC,EAAjC,CAAoCQ,YAApC,CACE,iDADF;;AAD+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAjF;;AAMAZ,yBAAG,oDAAH,0DAAyD;AAAA;AAAA;AAAA;AAAA;AACvD,kDACExB,OACGgB,OADH,CACWX,eADX,EAEGgC,UAFH,CAGIvD,MAHJ,EAII,EAJJ,EAKIS,oBALJ,EAMI,IANJ,EAOIC,kBAPJ,EAQIF,eARJ,EASI,EATJ,CADF,EAYEqC,EAZF,CAYKC,EAZL,CAYQQ,YAZR,CAYqB,4CAZrB;;AADuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAzD;;AAgBAZ,yBAAG,yDAAH,0DAA8D;AAAA;AAAA;AAAA;AAAA;AAC5D,kDACExB,OACGgB,OADH,CACWX,eADX,EAEGgC,UAFH,CAGIvD,MAHJ,EAII,EAJJ,EAKIS,oBALJ,EAMI,GANJ,EAOIC,kBAPJ,EAQIF,eARJ,EASI,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CATJ,CADF,EAYEqC,EAZF,CAYKC,EAZL,CAYQQ,YAZR,CAaE,kDAbF;;AAD4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA9D;;AAvCkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApB;;AAZsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAuEA3C,WAAS,eAAT,0DAA0B;AAAA;AAAA;AAAA;AAAA;AACxBgB,uBAAW,kBAAX,0DAA+B;AAAA;AAAA;AAAA;AAAA;AAC7BrB,kCAAYkD,OAAZ;AAAA,6FAAoB,mBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACZ7C,KAAKwB,eAAL,CACJd,MAAMS,OADF,EAEJ,CAFI,EAGJ9B,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,MAAjC,CAHI,EAIJF,OAAOC,KAAP,CAAaC,mBAAb,WAAyCsD,OAAzC,CAJI,EAKJxD,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,OAAjC,CALI,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAApB;;AAAA;AAAA;AAAA;AAAA;;AAD6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA/B;;AAYAwB,uBAAW,aAAX,0DAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAClBT,OAAOiB,SAAP,CACJlC,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,eAAjC,CADI,EAEJoB,gBAAgBQ,OAFZ,CADkB;;AAAA;AAAA;AAAA,6BAMlBwB,WAAWvD,MAAX,CANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA1B;;AASAW,qBAAS,mBAAT,0DAA8B;AAAA;AAAA;AAAA;AAAA;AAC5B+B,yBAAG,mCAAH,0DAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACvBxB,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4C,CAA5C,EAA+C,EAA/C,CADuB;;AAAA;AAClC2D,kCADkC;;;AAGtC,kDAAOA,EAAP,EACGd,EADH,CACMe,IADN,CACW1C,MADX,EACmB,iBADnB,EAEG2C,QAFH,CAEY7D,MAFZ,EAEoBsB,MAAMS,OAF1B,EAEmC,CAFnC,EAEsC,EAFtC;;AAHsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAxC;;AAQAW,yBAAG,iDAAH,0DAAsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAC9C9B,KAAKsB,OAAL,CAAaZ,KAAb,EAAoBmB,OAApB,CAA4BlB,gBAAgBQ,OAA5C,EAAqD,CAArD,CAD8C;;AAAA;AAAA;AAAA,uCAGrCb,OACZgB,OADY,CACJX,eADI,EAEZmC,aAFY,CAEE1D,MAFF,EAEU,CAFV,EAEa,EAFb,CAHqC;;AAAA;AAGhD2D,kCAHgD;;;AAOpD,kDAAOA,EAAP,EAAWd,EAAX,CAAce,IAAd,CAAmB1C,MAAnB,EAA2B,iBAA3B;;AAPoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAtD;;AAT4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA9B;;AAoBAP,qBAAS,SAAT,0DAAoB;AAAA;AAAA;AAAA;AAAA;AAClB+B,yBAAG,wDAAH,0DAA6D;AAAA;AAAA;AAAA;AAAA;AAC3D,kDAAOxB,OAAOwC,aAAP,CAAqB1D,MAArB,EAA6B,CAA7B,EAAgC,EAAhC,CAAP,EAA4C6C,EAA5C,CAA+CC,EAA/C,CAAkDQ,YAAlD,CACE,qCADF;;AAD2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA7D;;AAMAZ,yBAAG,oDAAH,0DAAyD;AAAA;AAAA;AAAA;AAAA;AACvDpC,4CAAYkD,OAAZ;AAAA,uGAAoB,mBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAEZvC,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4CyD,OAA5C,EAAqDA,OAArD,CAFY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAApB;;AAAA;AAAA;AAAA;AAAA;;AAKA;AANuD;AAAA,uCAOjDvC,OACHgB,OADG,CACKX,eADL,EAEHuC,UAFG,CAEQ9D,MAFR,EAEgB,sCAFhB,CAPiD;;AAAA;;AAWvD,kDACEkB,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4C,CAA5C,EAA+C,CAA/C,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,0CAFrB;;AAXuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAzD;;AAgBAZ,yBAAG,0DAAH,0DAA+D;AAAA;AAAA;AAAA;AAAA;AAC7DpC,4CAAYkD,OAAZ;AAAA,uGAAoB,mBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAEZvC,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4CyD,OAA5C,EAAqDA,OAArD,CAFY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAApB;;AAAA;AAAA;AAAA;AAAA;;AAKA,kDACEvC,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4C,CAA5C,EAA+C,CAA/C,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,uCAFrB;;AAN6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA/D;;AAWAZ,yBAAG,uCAAH,0DAA4C;AAAA;AAAA;AAAA;AAAA;AAC1C,kDACExB,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4C,CAA5C,EAA+C,CAA/C,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,kCAFrB;;AAD0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA5C;;AAMAZ,yBAAG,sDAAH,0DAA2D;AAAA;AAAA;AAAA;AAAA;AACzD;AACA,kDACExB,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4C,CAA5C,EAA+C,EAA/C,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,iDAFrB;;AAFyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA3D;;AAOAZ,yBAAG,kDAAH,0DAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAC/CxB,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4C,CAA5C,EAA+C,CAA/C,CAD+C;;AAAA;;AAGrD;AACA,kDACEkB,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4C,CAA5C,EAA+C,CAA/C,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,mCAFrB;;AAJqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAvD;;AASAZ,yBAAG,uDAAH,0DAA4D;AAAA;AAAA;AAAA;AAAA;AAAA;AACpDqB,uCADoD,GAC1C9D,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,WAAjC,CAD0C;AAEpD6D,uCAFoD,GAE1C/D,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,WAAjC,CAF0C;AAGpD8D,uCAHoD,GAG1ChE,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,WAAjC,CAH0C;;AAK1D;;AAL0D;AAAA,uCAMpDoD,WAAWQ,OAAX,CANoD;;AAAA;AAAA;AAAA,uCAOpDR,WAAWS,OAAX,CAPoD;;AAAA;AAAA;AAAA,uCAQpDT,WAAWU,OAAX,CARoD;;AAAA;AAAA;AAAA,uCAUpD/C,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4C,CAA5C,EAA+C,EAA/C,CAVoD;;AAAA;AAAA;AAAA,uCAWpDkB,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoCK,OAApC,EAA6C,CAA7C,EAAgD,CAAhD,CAXoD;;AAAA;AAAA;AAAA,uCAYpD7C,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoCM,OAApC,EAA6C,CAA7C,EAAgD,CAAhD,CAZoD;;AAAA;;AAc1D,kDACE9C,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoCO,OAApC,EAA6C,CAA7C,EAAgD,CAAhD,CADF,EAEEpB,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,2CAFrB;;AAd0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA5D;;AAmBAZ,yBAAG,2CAAH,0DAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACxCxB,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4C,CAA5C,EAA+C,EAA/C,CADwC;;AAAA;;AAG9C;AACA,kDACEkB,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4C,CAA5C,EAA+C,CAA/C,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,gDAFrB;;AAJ8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAhD;;AA3EkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApB;;AAqFA3C,qBAAS,WAAT,0DAAsB;AAAA;AAAA;AAAA;AAAA;AACpB+B,yBAAG,+CAAH,0DAAoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACzBvB,MAAM+C,SAAN,CAAgBhD,OAAOa,OAAvB,CADyB;;AAAA;AAC5CoC,0CAD4C;AAAA;AAAA,uCAG5CjD,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4C,CAA5C,EAA+C,EAA/C,CAH4C;;AAAA;AAAA;AAAA,uCAKrBmB,MAAM+C,SAAN,CAAgBhD,OAAOa,OAAvB,CALqB;;AAAA;AAK5CqC,8CAL4C;;;AAOlD,kDAAOA,eAAeC,EAAf,CAAkBF,UAAlB,CAAP,EAAsCtB,EAAtC,CAAyCC,EAAzC,CAA4CC,IAA5C;;AAPkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAApD;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAtB;;AA/HwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AA4IApC,WAAS,yBAAT,0DAAoC;AAAA;AAAA;AAAA;AAAA;AAClCgB,uBAAW,kBAAX,0DAA+B;AAAA;AAAA;AAAA;AAAA;AAC7BrB,kCAAYkD,OAAZ;AAAA,6FAAoB,mBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACZ7C,KAAKwB,eAAL,CACJd,MAAMS,OADF,EAEJ,CAFI,EAGJ9B,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,MAAjC,CAHI,EAIJF,OAAOC,KAAP,CAAaC,mBAAb,WAAyCsD,OAAzC,CAJI,EAKJxD,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,OAAjC,CALI,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAApB;;AAAA;AAAA;AAAA;AAAA;;AAD6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA/B;;AAYAwB,uBAAW,aAAX,0DAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAClBT,OAAOiB,SAAP,CACJlC,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,eAAjC,CADI,EAEJoB,gBAAgBQ,OAFZ,CADkB;;AAAA;AAAA;AAAA,6BAMlBwB,WAAWvD,MAAX,CANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA1B;;AASA2B,uBAAW,0BAAX,0DAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAC/BT,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4C,CAA5C,EAA+C,EAA/C,CAD+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAvC;;AAIAW,qBAAS,eAAT,0DAA0B;AAAA;AAAA;AAAA;AAAA;AACxB+B,yBAAG,4DAAH,0DAAiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACnCvB,MAAM+C,SAAN,CAAgB5C,MAAMS,OAAtB,CADmC;;AAAA;AAC3DuC,+CAD2D;AAAA;AAAA,uCAGzDpD,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4C,CAA5C,EAA+C,CAA/C,CAHyD;;AAAA;AAAA;AAAA,uCAK1CkB,OAAOqD,KAAP,CAAavE,MAAb,CAL0C;;AAAA;AAK3DwE,wCAL2D;;AAM/D,kDAAOA,SAASC,gBAAhB,EAAkC5B,EAAlC,CAAqCI,KAArC,CAA2C,CAA3C;;AAN+D;AAAA,uCAQzD/B,OACHgB,OADG,CACKX,eADL,EAEHmD,uBAFG,CAEqB1E,MAFrB,EAE6B,CAF7B,CARyD;;AAAA;AAAA;AAAA,uCAY9CkB,OAAOqD,KAAP,CAAavE,MAAb,CAZ8C;;AAAA;AAY/DwE,wCAZ+D;;AAa/D,kDAAOA,SAASC,gBAAhB,EAAkC5B,EAAlC,CAAqCI,KAArC,CAA2C,CAA3C;;AAb+D;AAAA,uCAexC/B,OAAOyD,UAAP,CAAkB3E,MAAlB,EAA0B,CAA1B,CAfwC;;AAAA;AAe3D2E,0CAf2D;;AAgB/D,kDAAOA,WAAWC,UAAlB,EAA8B/B,EAA9B,CAAiCI,KAAjC,CAAuC,CAAvC;AACA,kDAAO0B,WAAWE,aAAlB,EAAiChC,EAAjC,CAAoCI,KAApC,CAA0C,CAA1C;AACA,kDAAO0B,WAAWG,SAAlB,EAA6B7E,OAAO8E,SAAP,CAAiBC,WAA9C;;AAlB+D;AAAA,uCAoBvC9D,OAAO+D,gBAAP,CAAwB,CAAxB,CApBuC;;AAAA;AAoB3DC,2CApB2D;;AAqB/D,kDAAOA,WAAP,EAAoBrC,EAApB,CAAuBI,KAAvB,CAA6B,CAA7B;;AArB+D;AAAA,uCAuB1C/B,OAAOiE,YAAP,CAAoBnF,MAApB,EAA4B,CAA5B,CAvB0C;;AAAA;AAuB3DoF,wCAvB2D;;AAwB/D,kDAAOA,QAAP,EAAiBvC,EAAjB,CAAoBI,KAApB,CAA0B,CAA1B;;AAxB+D,gDA0B/DN,YA1B+D;AAAA;AAAA,uCA0BlDzB,OAAOmE,eAAP,CAAuBrF,MAAvB,EAA+B,CAA/B,CA1BkD;;AAAA;AAAA;AAAA,kEA0Bf6C,EA1Be,CA0BZC,EA1BY,CA0BTM,KA1BS;AAAA;AAAA,uCA4B/BjC,MAAM+C,SAAN,CAAgB5C,MAAMS,OAAtB,CA5B+B;;AAAA;AA4B3DuD,mDA5B2D;;AA6B/D,kDAAOA,mBAAP,EAA4BzC,EAA5B,CAA+BI,KAA/B,CAAqCqB,eAArC;;AA7B+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAjE;;AADwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA1B;;AAkCA3D,qBAAS,SAAT,0DAAoB;AAAA;AAAA;AAAA;AAAA;AAClB+B,yBAAG,kDAAH,0DAAuD;AAAA;AAAA;AAAA;AAAA;AACrD,kDACExB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCmD,uBAAhC,CAAwD1E,MAAxD,EAAgE,CAAhE,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,+CAFrB;;AADqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAvD;;AAMAZ,yBAAG,oDAAH,0DAAyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACjDxB,OACHgB,OADG,CACKX,eADL,EAEHuC,UAFG,CAEQ9D,MAFR,EAEgB,gBAFhB,CADiD;;AAAA;;AAKvD,kDACEkB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCmD,uBAAhC,CAAwD1E,MAAxD,EAAgE,CAAhE,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,2CAFrB;;AALuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAzD;;AAPkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApB;;AA5DkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AA+EA3C,WAAS,aAAT,0DAAwB;AAAA;AAAA;AAAA;AAAA;AACtBgB,uBAAW,kBAAX,0DAA+B;AAAA;AAAA;AAAA;AAAA;AAC7BrB,kCAAYkD,OAAZ;AAAA,6FAAoB,mBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACZ7C,KAAKwB,eAAL,CACJd,MAAMS,OADF,EAEJ,CAFI,EAGJ9B,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,MAAjC,CAHI,EAIJF,OAAOC,KAAP,CAAaC,mBAAb,WAAyCsD,OAAzC,CAJI,EAKJxD,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,OAAjC,CALI,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAApB;;AAAA;AAAA;AAAA;AAAA;;AAD6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA/B;;AAYAwB,uBAAW,aAAX,0DAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAClBT,OAAOiB,SAAP,CACJlC,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,eAAjC,CADI,EAEJoB,gBAAgBQ,OAFZ,CADkB;;AAAA;AAAA;AAAA,6BAMlBb,OACHgB,OADG,CACKX,eADL,EAEHgC,UAFG,CAGFvD,MAHE,EAIF,EAJE,EAKFS,oBALE,EAMF,IANE,EAOFC,kBAPE,EAQFF,eARE,EASF,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CATE,CANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA1B;;AAmBAG,qBAAS,uBAAT,0DAAkC;AAAA;AAAA;AAAA;AAAA;AAChCgB,iCAAW,qBAAX,0DAAkC;AAAA;AAAA;AAAA;AAAA;AAChCrB,4CAAYkD,OAAZ;AAAA,uGAAoB,mBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAEZvC,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4CyD,OAA5C,EAAqDA,OAArD,CAFY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAApB;;AAAA;AAAA;AAAA;AAAA;;AADgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAlC;;AAOAf,yBAAG,mDAAH,0DAAwD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAE7C6C,iCAF6C,GAEzC,CAFyC;;AAAA;AAAA,sCAEtCA,IAAIjF,YAAYkF,MAFsB;AAAA;AAAA;AAAA;;AAAA;AAAA,uCAG5BtE,OAAO+D,gBAAP,CAAwB3E,YAAYiF,CAAZ,CAAxB,CAH4B;;AAAA;AAGhDL,2CAHgD;;AAIpD,kDAAOA,WAAP,EAAoBrC,EAApB,CAAuBI,KAAvB,CAA6B,CAA7B;;AAJoD;AAEdsC,mCAFc;AAAA;AAAA;;AAAA;AAAA;AAAA,uCAOhDrE,OAAOgB,OAAP,CAAeX,eAAf,EAAgCkE,WAAhC,CAA4CzF,MAA5C,EAAoDM,WAApD,CAPgD;;AAAA;AAS7CiF,kCAT6C,GASzC,CATyC;;AAAA;AAAA,sCAStCA,KAAIjF,YAAYkF,MATsB;AAAA;AAAA;AAAA;;AAAA;AAAA,uCAU5BtE,OAAO+D,gBAAP,CAAwB3E,YAAYiF,EAAZ,CAAxB,CAV4B;;AAAA;AAUhDL,4CAVgD;;AAWpD,kDAAOA,YAAP,EAAoBrC,EAApB,CAAuBI,KAAvB,CAA6B,CAA7B;;AAXoD;AASdsC,oCATc;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAxD;;AAeA7C,yBAAG,yDAAH,0DAA8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAQ7CxB,OACZgB,OADY,CACJX,eADI,EAEZkE,WAFY,CAEAzF,MAFA,EAEQM,WAFR,CAR6C;;AAAA;AAQxDqD,kCARwD;AAAA;AAAA,uCAYjDA,GAAG+B,IAAH,EAZiD;;AAAA;AAY5D/B,kCAZ4D;AAcxDgC,sCAdwD,GAc/ChC,GAAGiC,MAAH,CAAUC,MAAV,CAAiB,UAACC,CAAD,EAAO;AACnC,yCAAOA,EAAEC,KAAF,IAAW,cAAlB;AACD,iCAFY,CAd+C;AAkBxDC,wCAlBwD,GAkB7C,CACb/F,OAAOC,KAAP,CAAaG,UAAb,CAAwB,OAAxB,CADa,EAEbJ,OAAOC,KAAP,CAAaG,UAAb,CAAwB,OAAxB,CAFa,EAGbJ,OAAOC,KAAP,CAAaG,UAAb,CAAwB,OAAxB,CAHa,EAIbJ,OAAOC,KAAP,CAAaG,UAAb,CAAwB,OAAxB,CAJa,CAlB6C;;;AAyB5D,qCAASkF,CAAT,GAAa,CAAb,EAAgBA,IAAII,OAAOH,MAA3B,EAAmCD,GAAnC,EAAwC;AACtC,oDAAOI,OAAOJ,CAAP,EAAUU,IAAV,CAAeC,YAAtB,EAAoCrD,EAApC,CAAuCI,KAAvC,CAA6C+C,SAAST,CAAT,CAA7C;AACD;;AA3B2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA9D;;AAvBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAlC;;AAsDA5E,qBAAS,SAAT,0DAAoB;AAAA;AAAA;AAAA;AAAA;AAClB+B,yBAAG,gFAAH,0DAAqF;AAAA;AAAA;AAAA;AAAA;AACnF;AACA,kDACExB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCkE,WAAhC,CAA4CzF,MAA5C,EAAoD,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAApD,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAGE,6DAHF;;AAFmF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAArF;;AASAZ,yBAAG,oDAAH,0DAAyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAEjDxB,OACHgB,OADG,CACKX,eADL,EAEHuC,UAFG,CAEQ9D,MAFR,EAEgB,mBAFhB,CAFiD;;AAAA;;AAMvD,kDACEkB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCkE,WAAhC,CAA4CzF,MAA5C,EAAoD,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAApD,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,2CAFrB;;AANuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAzD;;AAVkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApB;;AAtFsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AA6GA3C,WAAS,YAAT,0DAAuB;AAAA;AAAA;AAAA;AAAA;AACrBgB,uBAAW,kBAAX,0DAA+B;AAAA;AAAA;AAAA;AAAA;AAC7BrB,kCAAYkD,OAAZ;AAAA,6FAAoB,mBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACZ7C,KAAKwB,eAAL,CACJd,MAAMS,OADF,EAEJ,CAFI,EAGJ9B,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,MAAjC,CAHI,EAIJF,OAAOC,KAAP,CAAaC,mBAAb,WAAyCsD,OAAzC,CAJI,EAKJxD,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,OAAjC,CALI,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAApB;;AAAA;AAAA;AAAA;AAAA;;AAD6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA/B;;AAYAwB,uBAAW,aAAX,0DAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAClBT,OAAOiB,SAAP,CACJlC,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,eAAjC,CADI,EAEJoB,gBAAgBQ,OAFZ,CADkB;;AAAA;AAAA;AAAA,6BAMlBwB,WAAWvD,MAAX,CANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA1B;;AASAW,qBAAS,mBAAT,0DAA8B;AAAA;AAAA;AAAA;AAAA;AAC5B+B,yBAAG,sBAAH,0DAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACVxB,OACZgB,OADY,CACJX,eADI,EAEZuC,UAFY,CAED9D,MAFC,EAEO,aAFP,CADU;;AAAA;AACrB2D,kCADqB;;;AAKzB,kDAAOA,EAAP,EACGd,EADH,CACMe,IADN,CACW1C,MADX,EACmB,cADnB,EAEG2C,QAFH,CAEY7D,MAFZ,EAEoB,aAFpB,EAEmCuB,gBAAgBQ,OAFnD;;AALyB;AAAA,uCASRb,OAAOqD,KAAP,CAAavE,MAAb,CATQ;;AAAA;AASrBmG,oCATqB;;AAUzB,kDAAOA,KAAKC,SAAZ,EAAuBvD,EAAvB,CAA0BI,KAA1B,CAAgC,CAAhC;;AAVyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA3B;;AAaAP,yBAAG,wCAAH,0DAA6C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAClC6C,iCADkC,GAC9B,CAD8B;;AAAA;AAAA,sCAC3BA,IAAIjF,YAAYkF,MADW;AAAA;AAAA;AAAA;;AAErC/B,uCAFqC,GAE3BnD,YAAYiF,CAAZ,CAF2B;;AAIzC;;AAJyC;AAAA,uCAKnCrE,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4CyD,OAA5C,EAAqD8B,IAAI,CAAzD,CALmC;;AAAA;AAAA;AAAA,uCAOjBrE,OAAO+D,gBAAP,CAAwBxB,OAAxB,CAPiB;;AAAA;AAOrCyB,2CAPqC;;AAQzC,kDAAOA,WAAP,EAAoBrC,EAApB,CAAuBI,KAAvB,CAA6B,CAA7B;;AARyC;AACHsC,mCADG;AAAA;AAAA;;AAAA;AAAA;AAAA,uCAWrCrE,OAAOgB,OAAP,CAAeX,eAAf,EAAgCuC,UAAhC,CAA2C9D,MAA3C,EAAmD,QAAnD,CAXqC;;AAAA;AAalCuF,mCAbkC,GAa9B,CAb8B;;AAAA;AAAA,sCAa3BA,MAAIjF,YAAYkF,MAbW;AAAA;AAAA;AAAA;;AAAA;AAAA,uCAcjBtE,OAAO+D,gBAAP,CAAwB3E,YAAYiF,GAAZ,CAAxB,CAdiB;;AAAA;AAcrCL,6CAdqC;;AAezC,kDAAOA,aAAP,EAAoBrC,EAApB,CAAuBI,KAAvB,CAA6B,CAA7B;;AAfyC;AAaHsC,qCAbG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA7C;;AAmBA7C,yBAAG,uCAAH,0DAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACpC9B,KACHsB,OADG,CACKZ,KADL,EAEH+E,YAFG,CAEU/E,MAAMS,OAFhB,EAEyBR,gBAAgBQ,OAFzC,EAEkD,CAFlD,CADoC;;AAAA;AAAA;AAAA,uCAKjBZ,MAAM+C,SAAN,CAAgB5C,MAAMS,OAAtB,CALiB;;AAAA;AAKtCuE,4CALsC;AAAA;AAAA,uCAMpBnF,MAAM+C,SAAN,CAAgB3C,gBAAgBQ,OAAhC,CANoB;;AAAA;AAMtCwE,yCANsC;AAAA;AAAA,uCAQpCrF,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4C,CAA5C,EAA+C,CAA/C,CARoC;;AAAA;AAAA;AAAA,uCASpCkB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCmC,aAAhC,CAA8C1D,MAA9C,EAAsD,CAAtD,EAAyD,CAAzD,CAToC;;AAAA;AAAA;AAAA,uCAWpCkB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCuC,UAAhC,CAA2C9D,MAA3C,EAAmD,QAAnD,CAXoC;;AAAA;AAAA;AAAA,uCAcVmB,MAAM+C,SAAN,CAAgB5C,MAAMS,OAAtB,CAdU;;AAAA;AActCuD,mDAdsC;AAAA;AAAA,uCAebnE,MAAM+C,SAAN,CAAgB3C,gBAAgBQ,OAAhC,CAfa;;AAAA;AAetCyE,gDAfsC;;;AAiB1C,kDAAOF,YAAP,EAAqBzD,EAArB,CAAwBI,KAAxB,CAA8BqC,mBAA9B;AACA,kDAAOiB,SAAP,EAAkB1D,EAAlB,CAAqBI,KAArB,CAA2BuD,gBAA3B;;AAlB0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA5C;;AAjC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA9B;;AAuDA7F,qBAAS,SAAT,0DAAoB;AAAA;AAAA;AAAA;AAAA;AAClB+B,yBAAG,oDAAH,0DAAyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACjDxB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCuC,UAAhC,CAA2C9D,MAA3C,EAAmD,QAAnD,CADiD;;AAAA;;AAGvD,kDACEkB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCuC,UAAhC,CAA2C9D,MAA3C,EAAmD,QAAnD,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,2CAFrB;;AAHuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAzD;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApB;;AA7EqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAwFA3C,WAAS,oBAAT,0DAA+B;AAAA;AAAA;AAAA;AAAA;AAC7BgB,uBAAW,kBAAX,0DAA+B;AAAA;AAAA;AAAA;AAAA;AAC7BrB,kCAAYkD,OAAZ;AAAA,6FAAoB,mBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACZ7C,KAAKwB,eAAL,CACJd,MAAMS,OADF,EAEJ,CAFI,EAGJ9B,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,MAAjC,CAHI,EAIJF,OAAOC,KAAP,CAAaC,mBAAb,WAAyCsD,OAAzC,CAJI,EAKJxD,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,OAAjC,CALI,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAApB;;AAAA;AAAA;AAAA;AAAA;;AAD6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA/B;;AAYAwB,uBAAW,aAAX,0DAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAClBT,OAAOiB,SAAP,CACJlC,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,eAAjC,CADI,EAEJoB,gBAAgBQ,OAFZ,CADkB;;AAAA;AAAA;AAAA,6BAMlBwB,WAAWvD,MAAX,CANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA1B;;AASAW,qBAAS,kBAAT,0DAA6B;AAAA;AAAA;AAAA;AAAA;AAC3B+B,yBAAG,iDAAH,0DAAsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9CoC,yCAD8C,GAClC1D,IAAI,CAAJ,EAAOW,OAD2B;AAAA;AAAA,uCAExBZ,MAAM+C,SAAN,CAAgBY,SAAhB,CAFwB;;AAAA;AAE9C2B,6CAF8C;AAAA;AAAA,uCAI9CvF,OAAOiB,SAAP,CACJlC,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,eAAjC,CADI,EAEJ2E,SAFI,CAJ8C;;AAAA;AAAA;AAAA,uCAQrC5D,OAAOgB,OAAP,CAAed,IAAI,CAAJ,CAAf,EAAuBsF,kBAAvB,CAA0C1G,MAA1C,EAAkD,CAAlD,EAAqD,CAArD,CARqC;;AAAA;AAQhD2D,kCARgD;AAAA;AAAA,uCAUvBxC,MAAM+C,SAAN,CAAgBY,SAAhB,CAVuB;;AAAA;AAU9CV,8CAV8C;;;AAYpD,kDAAOA,cAAP,EAAuBvB,EAAvB,CAA0BI,KAA1B,CAAgCwD,aAAhC;;AAEA;AACA,kDAAO9C,EAAP,EACGd,EADH,CACMe,IADN,CACW1C,MADX,EACmB,iBADnB,EAEG2C,QAFH,CAEY7D,MAFZ,EAEoBsB,MAAMS,OAF1B,EAEmC,CAFnC,EAEsC,CAFtC;;AAfoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAtD;;AAoBAW,yBAAG,wCAAH,0DAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AACrCqB,uCADqC,GAC3B9D,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,WAAjC,CAD2B;AAErC6D,uCAFqC,GAE3B/D,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,WAAjC,CAF2B;AAGrC8D,uCAHqC,GAG3BhE,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,WAAjC,CAH2B;AAAA;AAAA,uCAKrCoD,WAAWQ,OAAX,CALqC;;AAAA;AAAA;AAAA,uCAMrCR,WAAWS,OAAX,CANqC;;AAAA;AAAA;AAAA,uCAOrCT,WAAWU,OAAX,CAPqC;;AAAA;AAAA;AAAA,uCASrC/C,OAAOgB,OAAP,CAAeX,eAAf,EAAgCmF,kBAAhC,CAAmD1G,MAAnD,EAA2D,CAA3D,EAA8D,EAA9D,CATqC;;AAAA;AAAA;AAAA,uCAUrCkB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCmF,kBAAhC,CAAmD3C,OAAnD,EAA4D,CAA5D,EAA+D,CAA/D,CAVqC;;AAAA;AAAA;AAAA,uCAWrC7C,OAAOgB,OAAP,CAAeX,eAAf,EAAgCmF,kBAAhC,CAAmD1C,OAAnD,EAA4D,CAA5D,EAA+D,CAA/D,CAXqC;;AAAA;AAAA;AAAA,uCAcrC9C,OAAOgB,OAAP,CAAeX,eAAf,EAAgCmF,kBAAhC,CAAmDzC,OAAnD,EAA4D,CAA5D,EAA+D,CAA/D,CAdqC;;AAAA;AAAA,gDAgB3CtB,YAhB2C;AAAA;AAAA,uCAgB9BzB,OAAO+D,gBAAP,CAAwB,CAAxB,CAhB8B;;AAAA;AAAA;AAAA,kEAgBFpC,EAhBE,CAgBCI,KAhBD,CAgBO,CAhBP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA7C;;AArB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA7B;;AAyCAtC,qBAAS,SAAT,0DAAoB;AAAA;AAAA;AAAA;AAAA;AAClB+B,yBAAG,oDAAH,0DAAyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACjDxB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCuC,UAAhC,CAA2C9D,MAA3C,EAAmD,QAAnD,CADiD;;AAAA;;AAGvD,kDACEkB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCmF,kBAAhC,CAAmD1G,MAAnD,EAA2D,CAA3D,EAA8D,CAA9D,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,0CAFrB;;AAHuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAzD;;AAQAZ,yBAAG,4CAAH,0DAAiD;AAAA;AAAA;AAAA;AAAA;AAC/CpC,4CAAYkD,OAAZ;AAAA,uGAAoB,mBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAEZvC,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4CyD,OAA5C,EAAqDA,OAArD,CAFY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAApB;;AAAA;AAAA;AAAA;AAAA;;AAKA,kDACEvC,OAAOgB,OAAP,CAAeX,eAAf,EAAgCmF,kBAAhC,CAAmD1G,MAAnD,EAA2D,CAA3D,EAA8D,CAA9D,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,uCAFrB;;AAN+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAjD;;AAWAZ,yBAAG,uCAAH,0DAA4C;AAAA;AAAA;AAAA;AAAA;AAC1C,kDACExB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCmF,kBAAhC,CAAmD1G,MAAnD,EAA2D,CAA3D,EAA8D,CAA9D,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,kCAFrB;;AAD0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA5C;;AAMAZ,yBAAG,sDAAH,0DAA2D;AAAA;AAAA;AAAA;AAAA;AACzD,kDACExB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCmF,kBAAhC,CAAmD1G,MAAnD,EAA2D,CAA3D,EAA8D,EAA9D,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,iDAFrB;;AADyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA3D;;AAMAZ,yBAAG,wCAAH,0DAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACrCxB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCmF,kBAAhC,CAAmD1G,MAAnD,EAA2D,CAA3D,EAA8D,CAA9D,CADqC;;AAAA;;AAG3C,kDACEkB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCmF,kBAAhC,CAAmD1G,MAAnD,EAA2D,CAA3D,EAA8D,CAA9D,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,mCAFrB;;AAH2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA7C;;AAQAZ,yBAAG,uDAAH,0DAA4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACpDxB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCmF,kBAAhC,CAAmD1G,MAAnD,EAA2D,CAA3D,EAA8D,CAA9D,CADoD;;AAAA;;AAG1D,kDACEkB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCmF,kBAAhC,CAAmD1G,MAAnD,EAA2D,CAA3D,EAA8D,CAA9D,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,gDAFrB;;AAH0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA5D;;AAxCkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApB;;AA/D6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAiHA3C,WAAS,mBAAT,0DAA8B;AAAA;AAAA;AAAA;AAAA;AAC5BgB,uBAAW,iBAAX,0DAA8B;AAAA;AAAA;AAAA;AAAA;AAC5B,uBAAC,CAAD,EAAI,CAAJ,EAAO6B,OAAP;AAAA,6FAAe,mBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACP7C,KAAKwB,eAAL,CACJd,MAAMS,OADF,EAEJ,CAFI,EAGJ9B,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,MAAjC,CAHI,EAIJF,OAAOC,KAAP,CAAaC,mBAAb,WAAyCsD,OAAzC,CAJI,EAKJxD,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,OAAjC,CALI,CADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAf;;AAAA;AAAA;AAAA;AAAA;;AAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA9B;;AAYAwB,uBAAW,eAAX,0DAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACpBT,OAAOiB,SAAP,CACJlC,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,eAAjC,CADI,EAEJoB,gBAAgBQ,OAFZ,CADoB;;AAAA;AAAA;AAAA,6BAMpBwB,WAAWvD,MAAX,CANoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA5B;;AASAW,qBAAS,eAAT,0DAA0B;AAAA;AAAA;AAAA;AAAA;AACxB+B,yBAAG,yBAAH,0DAA8B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACxBiE,iDADwB,GACJzF,OAAOe,SAAP,CAAiB2E,kBAAjB,CACtB,eADsB,EAEtB,CAAC5G,MAAD,EAAS,CAAT,EAAY,EAAZ,CAFsB,CADI;AAAA,gDAMN6G,mBANM;AAAA,gDASjBvE,cATiB;AAAA,gDAUPpB,OAAOa,OAVA;AAAA;AAAA,uCAWbb,OAAO4F,QAAP,CAAgBxF,MAAMS,OAAtB,CAXa;;AAAA;AAAA;AAAA,gDAYpBT,MAAMS,OAZc;AAAA,gDAaP4E,iBAbO;AAAA;AAO1BI,sCAP0B,EAOpB,YAPoB;AAQ1BC,yCAR0B,EAQjB,GARiB;AAS1B1E,yCAT0B;AAU1B2E,mDAV0B;AAW1BC,uCAX0B;AAY1BC,sCAZ0B;AAa1BR,mDAb0B;AAAA;AAAA;AAAA;;AAAA;AAMxBS,yCANwB;AAAA;AAAA,uCAgBL9F,MAAM+F,cAAN,CACrBD,UAAUE,MADW,EAErBF,UAAUG,KAFW,EAGrBH,UAAUI,OAHW,CAhBK;;AAAA;AAgBxBC,0CAhBwB;AAAA;AAAA,uCAqBJ,0BAAcA,UAAd,CArBI;;AAAA;AAAA;AAqBtBC,iCArBsB,UAqBtBA,CArBsB;AAqBnBC,iCArBmB,UAqBnBA,CArBmB;AAqBhBC,iCArBgB,UAqBhBA,CArBgB;AAAA;AAAA,uCAuBb1G,OAAO2G,sBAAP,CACbvG,MAAMS,OADO,EAEb4E,iBAFa,EAGbe,CAHa,EAIbC,CAJa,EAKbC,CALa,CAvBa;;AAAA;AAuBxBjE,kCAvBwB;;;AA+B5B,kDAAOA,EAAP,EACGd,EADH,CACMe,IADN,CACW1C,MADX,EACmB,iBADnB,EAEG2C,QAFH,CAEY7D,MAFZ,EAEoBsB,MAAMS,OAF1B,EAEmC,CAFnC,EAEsC,EAFtC;;AA/B4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA9B;;AADwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA1B;;AAtB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AA6DApB,WAAS,SAAT,0DAAoB;AAAA;AAAA;AAAA;AAAA;AAClBgB,uBAAW,YAAX,0DAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACjBT,OAAOmC,cAAP,CACJpD,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,eAAjC,CADI,EAEJoB,gBAAgBQ,OAFZ,CADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAzB;;AAOAW,eAAG,2BAAH,0DAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACxBxB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCuG,KAAhC,EADwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC;;AAIAnH,qBAAS,YAAT,0DAAuB;AAAA;AAAA;AAAA;AAAA;AACrBgB,iCAAW,gBAAX,0DAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAErBf,KAAKwB,eAAL,CACJd,MAAMS,OADF,EAEJ,CAFI,EAGJ9B,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,MAAjC,CAHI,EAIJF,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,YAAjC,CAJI,EAKJF,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,OAAjC,CALI,CAFqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA7B;;AAWAwB,iCAAW,gBAAX,0DAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACrBT,OAAOgB,OAAP,CAAeX,eAAf,EAAgCuG,KAAhC,EADqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA7B;;AAIApF,yBAAG,qCAAH,0DAA0C;AAAA;AAAA;AAAA;AAAA;AACxC,kDACExB,OAAOgB,OAAP,CAAeZ,KAAf,EAAsBoC,aAAtB,CAAoC1D,MAApC,EAA4C,CAA5C,EAA+C,EAA/C,CADF,EAEE6C,EAFF,CAEKC,EAFL,CAEQQ,YAFR,CAEqB,kBAFrB;;AADwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA1C;;AAhBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAvB;;AAZkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAoCA3C,WAAS,WAAT,0DAAsB;AAAA;AAAA;AAAA;AAAA;AACpBgB,uBAAW,YAAX,0DAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACjBT,OAAOmC,cAAP,CACJpD,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,eAAjC,CADI,EAEJoB,gBAAgBQ,OAFZ,CADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAzB;;AAOAW,eAAG,6BAAH,0DAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAC1BxB,OAAOgB,OAAP,CAAeX,eAAf,EAAgCuG,KAAhC,EAD0B;;AAAA;AAAA;AAAA,6BAE1B5G,OAAOgB,OAAP,CAAeX,eAAf,EAAgCwG,OAAhC,EAF0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAlC;;AARoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAcApH,WAAS,qBAAT,0DAAgC;AAAA;AAAA;AAAA;AAAA;AAC9BgB,uBAAW,YAAX,0DAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACjBT,OAAOmC,cAAP,CACJpD,OAAOC,KAAP,CAAaC,mBAAb,CAAiC,eAAjC,CADI,EAEJoB,gBAAgBQ,OAFZ,CADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAzB;;AAOAW,eAAG,gCAAH,0DAAqC;AAAA;AAAA;AAAA;AAAA;AAAA,uCACnCC,YADmC;AAAA;AAAA,6BACtBzB,OAAOM,WAAP,EADsB;;AAAA;AAAA;AAAA,uCACSA,YAAYO,OADrB;AAAA,0DACAc,EADA,CACGI,KADH;AAAA;AAAA,6BAG7B/B,OAAOgB,OAAP,CAAeX,eAAf,EAAgCyG,iBAAhC,CAAkD5G,IAAI,CAAJ,EAAOW,OAAzD,CAH6B;;AAAA;AAAA,uCAKnCY,YALmC;AAAA;AAAA,6BAKtBzB,OAAOM,WAAP,EALsB;;AAAA;AAAA;AAAA,uCAKSJ,IAAI,CAAJ,EAAOW,OALhB;AAAA,0DAKAc,EALA,CAKGI,KALH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAArC;;AAR8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAiBA,MAAMM;AAAA,0EAAa,oBACjBvD,MADiB;AAAA,UAEjBiI,cAFiB,uEAEA,EAFA;AAAA,UAGjBC,QAHiB,uEAGN,IAHM;AAAA,UAIjBC,OAJiB,uEAIP5G,eAJO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAMXL,OACHgB,OADG,CACKiG,OADL,EAEH5E,UAFG,CAGFvD,MAHE,EAIFiI,cAJE,EAKFxH,oBALE,EAMFyH,QANE,EAOFxH,kBAPE,EAQFF,eARE,EASFD,eATE,CANW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA,KAAN;AAkBD,CAv5BD",
      "file": "RacingTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment",
      "sourcesContent": [
        "import { getTypedData, getRsvFromSig, chainId } from \"../../utils\";\nimport { expect } from \"chai\";\n\nconst raceId = ethers.utils.formatBytes32String(\"race_id\"),\n  MAX_WETH = ethers.utils.parseUnits(\"1000\"),\n  newTokenIds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n  DEFAULT_PAYOUTS = [60, 10, 30],\n  DEFAULT_ZED_FEE = 10,\n  DEFAULT_ENTRANCE_FEE = ethers.utils.parseUnits(\"0.05\"),\n  DEFAULT_PRIZE_POOL = ethers.utils.parseUnits(\"0.54\");\n\ndescribe(\"RacingArena\", () => {\n  let core,\n    horseData,\n    racingLogic,\n    racingLogicInstance,\n    racingProxy,\n    racingProxyAdmin,\n    racing,\n    erc20;\n\n  let acc, deployer, owner, blockchainBrain, feeReceiver;\n\n  before(\"populate accs\", async () => {\n    acc = await ethers.getSigners();\n    deployer = acc[0];\n    owner = acc[1];\n    blockchainBrain = acc[2];\n    feeReceiver = acc[3];\n  });\n\n  beforeEach(\"get factories\", async () => {\n    horseData = await ethers.getContractFactory(\"HorseData\");\n    core = await ethers.getContractFactory(\"Core\");\n    erc20 = await ethers.getContractFactory(\"ERC20Test\");\n    racingLogicInstance = await ethers.getContractFactory(\"RacingArena\");\n    racingProxyAdmin = await ethers.getContractFactory(\"ZedProxyAdmin\");\n    racingProxy = await ethers.getContractFactory(\"RacingProxy\");\n  });\n\n  beforeEach(\"deploy instances\", async () => {\n    // Core\n    horseData = await horseData.deploy();\n    await horseData.deployed();\n\n    core = await core.deploy(horseData.address);\n    await core.deployed();\n\n    // WETH\n    erc20 = await erc20.deploy(ethers.utils.parseUnits(\"100\"));\n    await erc20.deployed();\n\n    // Racing\n    // 1. Deploy logic contract\n    racingLogic = await racingLogicInstance.deploy();\n    await racingLogic.deployed();\n\n    // 2. Deploy Racing admin to be used as admin of RacingProxy\n    racingProxyAdmin = await racingProxyAdmin.deploy();\n    await racingProxyAdmin.deployed();\n\n    // 3. Deploy proxy contract\n    racingProxy = await racingProxy.deploy(\n      racingLogic.address,\n      racingProxyAdmin.address\n    );\n    await racingProxy.deployed();\n\n    // 4. Create instance of logic contract at proxy address\n    racing = new ethers.Contract(racingProxy.address, racingLogic.interface);\n    racing = racing.connect(deployer);\n  });\n\n  beforeEach(\"setup initial state of instances\", async () => {\n    // Grants permissions to deployer\n    // Core\n    await core.grantRole(\n      ethers.utils.formatBytes32String(\"core_owners\"),\n      deployer.address\n    );\n    await core.grantRole(\n      ethers.utils.formatBytes32String(\"core_contracts\"),\n      deployer.address\n    );\n\n    // Cannot interact with ID 0 horse\n    await core.mintCustomHorse(\n      owner.address,\n      4,\n      ethers.utils.formatBytes32String(\"Male\"),\n      ethers.utils.formatBytes32String(\"FirstName\"),\n      ethers.utils.formatBytes32String(\"Black\")\n    );\n\n    await racing.setDomainSeparator(\"ZED Racing\", \"1\", chainId);\n\n    // initializes racing\n    await racing.initialize(feeReceiver.address, erc20.address, core.address);\n\n    // Transfer and approve ERC20s\n    await erc20.transfer(blockchainBrain.address, ethers.utils.parseUnits(\"1\"));\n    await erc20.connect(blockchainBrain).approve(racing.address, MAX_WETH);\n\n    await erc20.transfer(owner.address, ethers.utils.parseUnits(\"1\"));\n    await erc20.connect(owner).approve(racing.address, MAX_WETH);\n  });\n\n  describe(\"initial data validation\", async () => {\n    it(\"should set deployer as admin of racing owners\", async () => {\n      expect(\n        await racing.hasRole(\n          ethers.utils.formatBytes32String(\"racing_owners_admin\"),\n          deployer.address\n        )\n      ).to.be.true;\n    });\n  });\n\n  describe(\"proxy\", async () => {\n    it(\"should set upgrade admin correctly\", async () => {\n      // only admin can call this function so if it goes through it's ok\n      await racingProxyAdmin.getProxyImplementation(racingProxy.address);\n    });\n\n    it(\"should upgrade to new implementation\", async () => {\n      expect(\n        await racingProxyAdmin.getProxyImplementation(racingProxy.address)\n      ).to.equal(racingLogic.address);\n\n      const newLogic = await racingLogicInstance.deploy();\n      await newLogic.deployed();\n\n      await racingProxyAdmin.upgrade(racingProxy.address, newLogic.address);\n\n      expect(\n        await racingProxyAdmin.getProxyImplementation(racingProxy.address)\n      ).to.equal(newLogic.address);\n    });\n\n    it(\"should hold state after upgrading\", async () => {\n      expect(\n        await racing.hasRole(\n          ethers.utils.formatBytes32String(\"racing_owners\"),\n          blockchainBrain.address\n        )\n      ).to.be.false;\n\n      await racing.grantRoleAdmin(\n        ethers.utils.formatBytes32String(\"racing_owners\"),\n        blockchainBrain.address\n      );\n\n      expect(\n        await racing.hasRole(\n          ethers.utils.formatBytes32String(\"racing_owners\"),\n          blockchainBrain.address\n        )\n      ).to.be.true;\n\n      const newLogic = await racingLogicInstance.deploy();\n      await newLogic.deployed();\n\n      await racingProxyAdmin.upgrade(racingProxy.address, newLogic.address);\n\n      expect(\n        await racing.hasRole(\n          ethers.utils.formatBytes32String(\"racing_owners\"),\n          blockchainBrain.address\n        )\n      ).to.be.true;\n    });\n\n    it(\"should revert when calling initialize() after upgrading\", async () => {\n      const newLogic = await racingLogicInstance.deploy();\n      await newLogic.deployed();\n\n      await racingProxyAdmin.upgrade(racingProxy.address, newLogic.address);\n\n      expect(\n        racing.initialize(feeReceiver.address, erc20.address, core.address)\n      ).to.be.revertedWith(\"Initializable: contract is already initialized\");\n    });\n  });\n\n  describe(\"create race\", async () => {\n    beforeEach(\"grant permissions\", async () => {\n      await racing.grantRole(\n        ethers.utils.formatBytes32String(\"racing_owners\"),\n        blockchainBrain.address\n      );\n    });\n\n    it(\"should create a new race with specified payouts\", async () => {\n      await createRace(raceId);\n    });\n\n    describe(\"reverts\", async () => {\n      it(\"should revert if unauthorized address tries to create race\", async () => {\n        expect(\n          racing\n            .connect(acc[9])\n            .createRace(\n              raceId,\n              12,\n              DEFAULT_ENTRANCE_FEE,\n              1200,\n              DEFAULT_PRIZE_POOL,\n              DEFAULT_ZED_FEE,\n              DEFAULT_PAYOUTS\n            )\n        ).to.be.revertedWith(\"Racing: unauthorized owner\");\n      });\n\n      it(\"should revert if number of payouts is larger than number of allowed horses\", async () => {\n        expect(createRace(raceId, 1)).to.be.revertedWith(\n          \"Racing: payouts list longer than allowed horses\"\n        );\n      });\n\n      it(\"should revert if number of payouts is lower than 1\", async () => {\n        expect(\n          racing\n            .connect(blockchainBrain)\n            .createRace(\n              raceId,\n              12,\n              DEFAULT_ENTRANCE_FEE,\n              1000,\n              DEFAULT_PRIZE_POOL,\n              DEFAULT_ZED_FEE,\n              []\n            )\n        ).to.be.revertedWith(\"Racing: payouts list cannot be less than 1\");\n      });\n\n      it(\"should revert if list of payouts does not add up to 100\", async () => {\n        expect(\n          racing\n            .connect(blockchainBrain)\n            .createRace(\n              raceId,\n              12,\n              DEFAULT_ENTRANCE_FEE,\n              800,\n              DEFAULT_PRIZE_POOL,\n              DEFAULT_ZED_FEE,\n              [10, 10, 10]\n            )\n        ).to.be.revertedWith(\n          \"Racing: payouts percentages should add up to 100\"\n        );\n      });\n    });\n  });\n\n  describe(\"registerHorse\", async () => {\n    beforeEach(\"create 12 horses\", async () => {\n      newTokenIds.forEach(async (tokenId) => {\n        await core.mintCustomHorse(\n          owner.address,\n          1,\n          ethers.utils.formatBytes32String(\"Male\"),\n          ethers.utils.formatBytes32String(`Name_${tokenId}`),\n          ethers.utils.formatBytes32String(\"Color\")\n        );\n      });\n    });\n\n    beforeEach(\"create race\", async () => {\n      await racing.grantRole(\n        ethers.utils.formatBytes32String(\"racing_owners\"),\n        blockchainBrain.address\n      );\n\n      await createRace(raceId);\n    });\n\n    describe(\"valid nominations\", async () => {\n      it(\"should register a horse to a race\", async () => {\n        let tx = await racing.connect(owner).registerHorse(raceId, 1, 10);\n\n        expect(tx)\n          .to.emit(racing, \"HorseRegistered\")\n          .withArgs(raceId, owner.address, 1, 10);\n      });\n\n      it(\"should allow approved address to register horse\", async () => {\n        await core.connect(owner).approve(blockchainBrain.address, 4);\n\n        let tx = await racing\n          .connect(blockchainBrain)\n          .registerHorse(raceId, 4, 12);\n\n        expect(tx).to.emit(racing, \"HorseRegistered\");\n      });\n    });\n\n    describe(\"reverts\", async () => {\n      it(\"should revert if not the owner tries to register horse\", async () => {\n        expect(racing.registerHorse(raceId, 1, 10)).to.be.revertedWith(\n          \"Racing: not horse owner or approved\"\n        );\n      });\n\n      it(\"should revert if race is not in registration state\", async () => {\n        newTokenIds.forEach(async (tokenId) => {\n          // The token ID can be used as the gate number here as well\n          await racing.connect(owner).registerHorse(raceId, tokenId, tokenId);\n        });\n\n        // Easy way to change state of race\n        await racing\n          .connect(blockchainBrain)\n          .cancelRace(raceId, \"I just felt like canceling this race\");\n\n        expect(\n          racing.connect(owner).registerHorse(raceId, 1, 1)\n        ).to.be.revertedWith(\"Racing: race not accepting registrations\");\n      });\n\n      it(\"should revert if maximum number of horses are registered\", async () => {\n        newTokenIds.forEach(async (tokenId) => {\n          // The token ID can be used as the gate number here as well\n          await racing.connect(owner).registerHorse(raceId, tokenId, tokenId);\n        });\n\n        expect(\n          racing.connect(owner).registerHorse(raceId, 1, 1)\n        ).to.be.revertedWith(\"Racing: max number of horses for race\");\n      });\n\n      it(\"should revert if gate is lower than 1\", async () => {\n        expect(\n          racing.connect(owner).registerHorse(raceId, 1, 0)\n        ).to.be.revertedWith(\"Racing: gate number lower than 1\");\n      });\n\n      it(\"should revert if gate is greater than horses allowed\", async () => {\n        // The race in the setup allows 12 horses\n        expect(\n          racing.connect(owner).registerHorse(raceId, 1, 13)\n        ).to.be.revertedWith(\"Racing: gate number greater than horses allowed\");\n      });\n\n      it(\"should revert if the gate has already been taken\", async () => {\n        await racing.connect(owner).registerHorse(raceId, 1, 2);\n\n        // Different horse, same gate\n        expect(\n          racing.connect(owner).registerHorse(raceId, 4, 2)\n        ).to.be.revertedWith(\"Racing: gate number already taken\");\n      });\n\n      it(\"should revert if horse has reached active races limit\", async () => {\n        const raceId2 = ethers.utils.formatBytes32String(\"race_id_2\");\n        const raceId3 = ethers.utils.formatBytes32String(\"race_id_3\");\n        const raceId4 = ethers.utils.formatBytes32String(\"race_id_4\");\n\n        //* Right now the limit is 3 races\n        await createRace(raceId2);\n        await createRace(raceId3);\n        await createRace(raceId4);\n\n        await racing.connect(owner).registerHorse(raceId, 1, 12);\n        await racing.connect(owner).registerHorse(raceId2, 1, 3);\n        await racing.connect(owner).registerHorse(raceId3, 1, 5);\n\n        expect(\n          racing.connect(owner).registerHorse(raceId4, 1, 2)\n        ).to.be.revertedWith(\"Racing: horse currently active in 3 races\");\n      });\n\n      it(\"should revert if horse is already in race\", async () => {\n        await racing.connect(owner).registerHorse(raceId, 1, 12);\n\n        // Different gate, same horse\n        expect(\n          racing.connect(owner).registerHorse(raceId, 1, 1)\n        ).to.be.revertedWith(\"Racing: horse already registered for this race\");\n      });\n    });\n\n    describe(\"transfers\", async () => {\n      it(\"should transfer racing fee to racing contract\", async () => {\n        const preBalance = await erc20.balanceOf(racing.address);\n\n        await racing.connect(owner).registerHorse(raceId, 1, 10);\n\n        const currentBalance = await erc20.balanceOf(racing.address);\n\n        expect(currentBalance.gt(preBalance)).to.be.true;\n      });\n    });\n  });\n\n  describe(\"deregisterHorseFromRace\", async () => {\n    beforeEach(\"create 12 horses\", async () => {\n      newTokenIds.forEach(async (tokenId) => {\n        await core.mintCustomHorse(\n          owner.address,\n          1,\n          ethers.utils.formatBytes32String(\"Male\"),\n          ethers.utils.formatBytes32String(`Name_${tokenId}`),\n          ethers.utils.formatBytes32String(\"Color\")\n        );\n      });\n    });\n\n    beforeEach(\"create race\", async () => {\n      await racing.grantRole(\n        ethers.utils.formatBytes32String(\"racing_owners\"),\n        blockchainBrain.address\n      );\n\n      await createRace(raceId);\n    });\n\n    beforeEach(\"register horse into race\", async () => {\n      await racing.connect(owner).registerHorse(raceId, 1, 10);\n    });\n\n    describe(\"valid removal\", async () => {\n      it(\"should remove horse from race and update state accordingly\", async () => {\n        let preOwnerBalance = await erc20.balanceOf(owner.address);\n\n        await racing.connect(owner).registerHorse(raceId, 2, 1);\n\n        let raceData = await racing.races(raceId);\n        expect(raceData.horsesRegistered).to.equal(2);\n\n        await racing\n          .connect(blockchainBrain)\n          .deregisterHorseFromRace(raceId, 2);\n\n        raceData = await racing.races(raceId);\n        expect(raceData.horsesRegistered).to.equal(1);\n\n        let raceLineup = await racing.raceLineup(raceId, 2);\n        expect(raceLineup.gateNumber).to.equal(0);\n        expect(raceLineup.finalPosition).to.equal(0);\n        expect(raceLineup.nominator, ethers.constants.AddressZero);\n\n        let activeRaces = await racing.horseActiveRaces(2);\n        expect(activeRaces).to.equal(0);\n\n        let gateToId = await racing.raceGateToId(raceId, 1);\n        expect(gateToId).to.equal(0);\n\n        expect(await racing.isRaceGateTaken(raceId, 1)).to.be.false;\n\n        let currentOwnerBalance = await erc20.balanceOf(owner.address);\n        expect(currentOwnerBalance).to.equal(preOwnerBalance);\n      });\n    });\n\n    describe(\"reverts\", async () => {\n      it(\"should revert if horse is not registered in race\", async () => {\n        expect(\n          racing.connect(blockchainBrain).deregisterHorseFromRace(raceId, 2)\n        ).to.be.revertedWith(\"Racing: horse is not registered for this race\");\n      });\n\n      it(\"should revert if race is not in registration state\", async () => {\n        await racing\n          .connect(blockchainBrain)\n          .cancelRace(raceId, \"NO REASON! >:)\");\n\n        expect(\n          racing.connect(blockchainBrain).deregisterHorseFromRace(raceId, 2)\n        ).to.be.revertedWith(\"Racing: race is not in registration state\");\n      });\n    });\n  });\n\n  describe(\"postResults\", async () => {\n    beforeEach(\"create 12 horses\", async () => {\n      newTokenIds.forEach(async (tokenId) => {\n        await core.mintCustomHorse(\n          owner.address,\n          1,\n          ethers.utils.formatBytes32String(\"Male\"),\n          ethers.utils.formatBytes32String(`Name_${tokenId}`),\n          ethers.utils.formatBytes32String(\"Color\")\n        );\n      });\n    });\n\n    beforeEach(\"create race\", async () => {\n      await racing.grantRole(\n        ethers.utils.formatBytes32String(\"racing_owners\"),\n        blockchainBrain.address\n      );\n\n      await racing\n        .connect(blockchainBrain)\n        .createRace(\n          raceId,\n          12,\n          DEFAULT_ENTRANCE_FEE,\n          1200,\n          DEFAULT_PRIZE_POOL,\n          DEFAULT_ZED_FEE,\n          [60, 20, 10, 10]\n        );\n    });\n\n    describe(\"valid results posting\", async () => {\n      beforeEach(\"register all horses\", async () => {\n        newTokenIds.forEach(async (tokenId) => {\n          // The token ID can be used as the gate number here as well\n          await racing.connect(owner).registerHorse(raceId, tokenId, tokenId);\n        });\n      });\n\n      it(\"should reduce active races of all horses involved\", async () => {\n        // All horses should have 1 active race by now.\n        for (let i = 0; i < newTokenIds.length; i++) {\n          let activeRaces = await racing.horseActiveRaces(newTokenIds[i]);\n          expect(activeRaces).to.equal(1);\n        }\n\n        await racing.connect(blockchainBrain).postResults(raceId, newTokenIds);\n\n        for (let i = 0; i < newTokenIds.length; i++) {\n          let activeRaces = await racing.horseActiveRaces(newTokenIds[i]);\n          expect(activeRaces).to.equal(0);\n        }\n      });\n\n      it(\"should send correct payouts based on race configuration\", async () => {\n        /*\n        This race from the setup has the following config\n        1st => 60%\n        2nd => 20%\n        3rd => 10%\n        4th => 10%\n        */\n        let tx = await racing\n          .connect(blockchainBrain)\n          .postResults(raceId, newTokenIds);\n\n        tx = await tx.wait();\n\n        let claims = tx.events.filter((x) => {\n          return x.event == \"PrizeClaimed\";\n        });\n\n        let payments = [\n          ethers.utils.parseUnits(\"0.324\"),\n          ethers.utils.parseUnits(\"0.108\"),\n          ethers.utils.parseUnits(\"0.054\"),\n          ethers.utils.parseUnits(\"0.054\"),\n        ];\n\n        for (let i = 0; i < claims.length; i++) {\n          expect(claims[i].args._claimAmount).to.equal(payments[i]);\n        }\n      });\n    });\n\n    describe(\"reverts\", async () => {\n      it(\"should revert if number of horses sent does not match number of horses allowed\", async () => {\n        // Race in setup allows 12 horses\n        expect(\n          racing.connect(blockchainBrain).postResults(raceId, [1, 2, 3])\n        ).to.be.revertedWith(\n          \"Racing: number of horses sent does not match allowed horses\"\n        );\n      });\n\n      it(\"should revert if race is not in registration state\", async () => {\n        // We're going to cancel the race because it's easier. To post results we need registrations in place\n        await racing\n          .connect(blockchainBrain)\n          .cancelRace(raceId, \"Post results test\");\n\n        expect(\n          racing.connect(blockchainBrain).postResults(raceId, [1, 2, 3])\n        ).to.be.revertedWith(\"Racing: race is not in registration state\");\n      });\n    });\n  });\n\n  describe(\"cancelRace\", async () => {\n    beforeEach(\"create 12 horses\", async () => {\n      newTokenIds.forEach(async (tokenId) => {\n        await core.mintCustomHorse(\n          owner.address,\n          1,\n          ethers.utils.formatBytes32String(\"Male\"),\n          ethers.utils.formatBytes32String(`Name_${tokenId}`),\n          ethers.utils.formatBytes32String(\"Color\")\n        );\n      });\n    });\n\n    beforeEach(\"create race\", async () => {\n      await racing.grantRole(\n        ethers.utils.formatBytes32String(\"racing_owners\"),\n        blockchainBrain.address\n      );\n\n      await createRace(raceId);\n    });\n\n    describe(\"valid cancelation\", async () => {\n      it(\"should cancel a race\", async () => {\n        let tx = await racing\n          .connect(blockchainBrain)\n          .cancelRace(raceId, \"Just cancel\");\n\n        expect(tx)\n          .to.emit(racing, \"RaceCanceled\")\n          .withArgs(raceId, \"Just cancel\", blockchainBrain.address);\n\n        let race = await racing.races(raceId);\n        expect(race.raceState).to.equal(3);\n      });\n\n      it(\"should decrease active races of horses\", async () => {\n        for (let i = 0; i < newTokenIds.length; i++) {\n          let tokenId = newTokenIds[i];\n\n          // The token ID can be used as the gate number here as well\n          await racing.connect(owner).registerHorse(raceId, tokenId, i + 1);\n\n          let activeRaces = await racing.horseActiveRaces(tokenId);\n          expect(activeRaces).to.equal(1);\n        }\n\n        await racing.connect(blockchainBrain).cancelRace(raceId, \"Cancel\");\n\n        for (let i = 0; i < newTokenIds.length; i++) {\n          let activeRaces = await racing.horseActiveRaces(newTokenIds[i]);\n          expect(activeRaces).to.equal(0);\n        }\n      });\n\n      it(\"should transfer fee to all nominators\", async () => {\n        await core\n          .connect(owner)\n          .transferFrom(owner.address, blockchainBrain.address, 2);\n\n        let ownerBalance = await erc20.balanceOf(owner.address);\n        let bbBalance = await erc20.balanceOf(blockchainBrain.address);\n\n        await racing.connect(owner).registerHorse(raceId, 1, 4);\n        await racing.connect(blockchainBrain).registerHorse(raceId, 2, 5);\n\n        await racing.connect(blockchainBrain).cancelRace(raceId, \"Cancel\");\n\n        // balances should be the same\n        let currentOwnerBalance = await erc20.balanceOf(owner.address);\n        let currentBBBalance = await erc20.balanceOf(blockchainBrain.address);\n\n        expect(ownerBalance).to.equal(currentOwnerBalance);\n        expect(bbBalance).to.equal(currentBBBalance);\n      });\n    });\n\n    describe(\"reverts\", async () => {\n      it(\"should revert if race is not in registration state\", async () => {\n        await racing.connect(blockchainBrain).cancelRace(raceId, \"Cancel\");\n\n        expect(\n          racing.connect(blockchainBrain).cancelRace(raceId, \"take 2\")\n        ).to.be.revertedWith(\"Racing: race is not in registration state\");\n      });\n    });\n  });\n\n  describe(\"adminRegisterHorse\", async () => {\n    beforeEach(\"create 12 horses\", async () => {\n      newTokenIds.forEach(async (tokenId) => {\n        await core.mintCustomHorse(\n          owner.address,\n          1,\n          ethers.utils.formatBytes32String(\"Male\"),\n          ethers.utils.formatBytes32String(`Name_${tokenId}`),\n          ethers.utils.formatBytes32String(\"Color\")\n        );\n      });\n    });\n\n    beforeEach(\"create race\", async () => {\n      await racing.grantRole(\n        ethers.utils.formatBytes32String(\"racing_owners\"),\n        blockchainBrain.address\n      );\n\n      await createRace(raceId);\n    });\n\n    describe(\"valid nomination\", async () => {\n      it(\"should nominate a horse without paying anything\", async () => {\n        const nominator = acc[9].address;\n        const balanceBefore = await erc20.balanceOf(nominator);\n\n        await racing.grantRole(\n          ethers.utils.formatBytes32String(\"racing_owners\"),\n          nominator\n        );\n        let tx = await racing.connect(acc[9]).adminRegisterHorse(raceId, 1, 2);\n\n        const currentBalance = await erc20.balanceOf(nominator);\n\n        expect(currentBalance).to.equal(balanceBefore);\n\n        // The nominator remains the owner of the horse nonetheless\n        expect(tx)\n          .to.emit(racing, \"HorseRegistered\")\n          .withArgs(raceId, owner.address, 1, 2);\n      });\n\n      it(\"should not consider active races limit\", async () => {\n        const raceId2 = ethers.utils.formatBytes32String(\"race_id_2\");\n        const raceId3 = ethers.utils.formatBytes32String(\"race_id_3\");\n        const raceId4 = ethers.utils.formatBytes32String(\"race_id_4\");\n\n        await createRace(raceId2);\n        await createRace(raceId3);\n        await createRace(raceId4);\n\n        await racing.connect(blockchainBrain).adminRegisterHorse(raceId, 4, 12);\n        await racing.connect(blockchainBrain).adminRegisterHorse(raceId2, 4, 3);\n        await racing.connect(blockchainBrain).adminRegisterHorse(raceId3, 4, 5);\n\n        // No trouble registering for a 4th race\n        await racing.connect(blockchainBrain).adminRegisterHorse(raceId4, 4, 2);\n\n        expect(await racing.horseActiveRaces(4)).to.equal(4);\n      });\n    });\n\n    describe(\"reverts\", async () => {\n      it(\"should revert if race is not on registration state\", async () => {\n        await racing.connect(blockchainBrain).cancelRace(raceId, \"reason\");\n\n        expect(\n          racing.connect(blockchainBrain).adminRegisterHorse(raceId, 1, 1)\n        ).to.be.revertedWith(\"Racing: race not accepting registrations\");\n      });\n\n      it(\"should revert if all horses are registered\", async () => {\n        newTokenIds.forEach(async (tokenId) => {\n          // The token ID can be used as the gate number here as well\n          await racing.connect(owner).registerHorse(raceId, tokenId, tokenId);\n        });\n\n        expect(\n          racing.connect(blockchainBrain).adminRegisterHorse(raceId, 1, 1)\n        ).to.be.revertedWith(\"Racing: max number of horses for race\");\n      });\n\n      it(\"should revert if gate is lower than 0\", async () => {\n        expect(\n          racing.connect(blockchainBrain).adminRegisterHorse(raceId, 1, 0)\n        ).to.be.revertedWith(\"Racing: gate number lower than 1\");\n      });\n\n      it(\"should revert if gate is greater than horses allowed\", async () => {\n        expect(\n          racing.connect(blockchainBrain).adminRegisterHorse(raceId, 1, 13)\n        ).to.be.revertedWith(\"Racing: gate number greater than horses allowed\");\n      });\n\n      it(\"should revert if gate is already taken\", async () => {\n        await racing.connect(blockchainBrain).adminRegisterHorse(raceId, 1, 2);\n\n        expect(\n          racing.connect(blockchainBrain).adminRegisterHorse(raceId, 4, 2)\n        ).to.be.revertedWith(\"Racing: gate number already taken\");\n      });\n\n      it(\"should revert if horse is already registered for race\", async () => {\n        await racing.connect(blockchainBrain).adminRegisterHorse(raceId, 4, 1);\n\n        expect(\n          racing.connect(blockchainBrain).adminRegisterHorse(raceId, 4, 5)\n        ).to.be.revertedWith(\"Racing: horse already registered for this race\");\n      });\n    });\n  });\n\n  describe(\"meta-transactions\", async () => {\n    beforeEach(\"create 2 horses\", async () => {\n      [1, 2].forEach(async (tokenId) => {\n        await core.mintCustomHorse(\n          owner.address,\n          1,\n          ethers.utils.formatBytes32String(\"Male\"),\n          ethers.utils.formatBytes32String(`Name_${tokenId}`),\n          ethers.utils.formatBytes32String(\"Color\")\n        );\n      });\n    });\n\n    beforeEach(\"create a race\", async () => {\n      await racing.grantRole(\n        ethers.utils.formatBytes32String(\"racing_owners\"),\n        blockchainBrain.address\n      );\n\n      await createRace(raceId);\n    });\n\n    describe(\"registerHorse\", async () => {\n      it(\"should register a horse\", async () => {\n        let functionSignature = racing.interface.encodeFunctionData(\n          \"registerHorse\",\n          [raceId, 1, 10]\n        );\n\n        let typedData = await getTypedData({\n          name: \"ZED Racing\",\n          version: \"1\",\n          chainId: chainId,\n          verifyingContract: racing.address,\n          nonce: await racing.getNonce(owner.address),\n          from: owner.address,\n          functionSignature: functionSignature,\n        });\n\n        let signedData = await owner._signTypedData(\n          typedData.domain,\n          typedData.types,\n          typedData.message\n        );\n        let { r, s, v } = await getRsvFromSig(signedData);\n\n        let tx = await racing.executeMetaTransaction(\n          owner.address,\n          functionSignature,\n          r,\n          s,\n          v\n        );\n\n        expect(tx)\n          .to.emit(racing, \"HorseRegistered\")\n          .withArgs(raceId, owner.address, 1, 10);\n      });\n    });\n  });\n\n  describe(\"pausing\", async () => {\n    beforeEach(\"grant role\", async () => {\n      await racing.grantRoleAdmin(\n        ethers.utils.formatBytes32String(\"racing_owners\"),\n        blockchainBrain.address\n      );\n    });\n\n    it(\"should pause the contract\", async () => {\n      await racing.connect(blockchainBrain).pause();\n    });\n\n    describe(\"nomination\", async () => {\n      beforeEach(\"create 1 horse\", async () => {\n        // ID 1\n        await core.mintCustomHorse(\n          owner.address,\n          1,\n          ethers.utils.formatBytes32String(\"Male\"),\n          ethers.utils.formatBytes32String(\"Fixed name\"),\n          ethers.utils.formatBytes32String(\"Color\")\n        );\n      });\n\n      beforeEach(\"pause contract\", async () => {\n        await racing.connect(blockchainBrain).pause();\n      });\n\n      it(\"should revert if contract is paused\", async () => {\n        expect(\n          racing.connect(owner).registerHorse(raceId, 1, 10)\n        ).to.be.revertedWith(\"Pausable: paused\");\n      });\n    });\n  });\n\n  describe(\"unpausing\", async () => {\n    beforeEach(\"grant role\", async () => {\n      await racing.grantRoleAdmin(\n        ethers.utils.formatBytes32String(\"racing_owners\"),\n        blockchainBrain.address\n      );\n    });\n\n    it(\"should unpause the contract\", async () => {\n      await racing.connect(blockchainBrain).pause();\n      await racing.connect(blockchainBrain).unpause();\n    });\n  });\n\n  describe(\"change fee receiver\", async () => {\n    beforeEach(\"grant role\", async () => {\n      await racing.grantRoleAdmin(\n        ethers.utils.formatBytes32String(\"racing_owners\"),\n        blockchainBrain.address\n      );\n    });\n\n    it(\"should change the fee receiver\", async () => {\n      expect(await racing.feeReceiver()).to.equal(feeReceiver.address);\n\n      await racing.connect(blockchainBrain).changeFeeReceiver(acc[4].address);\n\n      expect(await racing.feeReceiver()).to.equal(acc[4].address);\n    });\n  });\n\n  const createRace = async (\n    raceId,\n    numberOfHorses = 12,\n    distance = 1200,\n    account = blockchainBrain\n  ) => {\n    await racing\n      .connect(account)\n      .createRace(\n        raceId,\n        numberOfHorses,\n        DEFAULT_ENTRANCE_FEE,\n        distance,\n        DEFAULT_PRIZE_POOL,\n        DEFAULT_ZED_FEE,\n        DEFAULT_PAYOUTS\n      );\n  };\n});\n"
      ]
    },
    "mtime": 1627083128661
  },
  "{\"filename\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/WinningsWatcherTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/WinningsWatcherTest.js",
      "filenameRelative": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/WinningsWatcherTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "WinningsWatcherTest.js",
      "sourceFileName": "WinningsWatcherTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "WinningsWatcherTest"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar _require = require(\"chai\"),\n    expect = _require.expect;\n\ndescribe(\"WinningsWatcher\", function () {\n  var MAX_WETH = ethers.utils.parseUnits(\"10\");\n  var RACE_ID = ethers.utils.formatBytes32String(\"race_id\");\n  var HORSE_ID = 123;\n\n  var transferAmount = ethers.utils.parseUnits(\"0.005\");\n  var winningsWatcher = void 0,\n      erc20 = void 0,\n      acc = void 0;\n\n  before(\"setup accs\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ethers.getSigners();\n\n          case 2:\n            acc = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  beforeEach(\"setup instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return ethers.getContractFactory(\"ERC20Test\");\n\n          case 2:\n            erc20 = _context2.sent;\n            _context2.next = 5;\n            return erc20.deploy(MAX_WETH);\n\n          case 5:\n            erc20 = _context2.sent;\n            _context2.next = 8;\n            return ethers.getContractFactory(\"WinningsWatcher\");\n\n          case 8:\n            winningsWatcher = _context2.sent;\n            _context2.next = 11;\n            return winningsWatcher.deploy(erc20.address);\n\n          case 11:\n            winningsWatcher = _context2.sent;\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })));\n\n  describe(\"sendWinnings\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            describe(\"valid transfer\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n              return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      beforeEach(\"approve weth\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                          while (1) {\n                            switch (_context3.prev = _context3.next) {\n                              case 0:\n                                _context3.next = 2;\n                                return erc20.approve(winningsWatcher.address, MAX_WETH);\n\n                              case 2:\n                              case \"end\":\n                                return _context3.stop();\n                            }\n                          }\n                        }, _callee3, undefined);\n                      })));\n\n                      it(\"should transfer WETH to user\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                        var preBalance, currentBalance;\n                        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                          while (1) {\n                            switch (_context4.prev = _context4.next) {\n                              case 0:\n                                _context4.next = 2;\n                                return erc20.balanceOf(acc[0].address);\n\n                              case 2:\n                                preBalance = _context4.sent;\n                                _context4.next = 5;\n                                return winningsWatcher.sendWinnings(RACE_ID, acc[1].address, HORSE_ID, transferAmount);\n\n                              case 5:\n                                _context4.next = 7;\n                                return erc20.balanceOf(acc[0].address);\n\n                              case 7:\n                                currentBalance = _context4.sent;\n\n                                expect(Number(currentBalance) < Number(preBalance)).to.be.true;\n\n                              case 9:\n                              case \"end\":\n                                return _context4.stop();\n                            }\n                          }\n                        }, _callee4, undefined);\n                      })));\n\n                      it(\"should be able to make transfers to same user with different horse ID\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                        var preBalance, currentBalance;\n                        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                          while (1) {\n                            switch (_context5.prev = _context5.next) {\n                              case 0:\n                                _context5.next = 2;\n                                return erc20.balanceOf(acc[0].address);\n\n                              case 2:\n                                preBalance = _context5.sent;\n                                _context5.next = 5;\n                                return winningsWatcher.sendWinnings(RACE_ID, acc[1].address, HORSE_ID, transferAmount);\n\n                              case 5:\n                                _context5.next = 7;\n                                return winningsWatcher.sendWinnings(RACE_ID, acc[1].address, 321, transferAmount);\n\n                              case 7:\n                                _context5.next = 9;\n                                return erc20.balanceOf(acc[0].address);\n\n                              case 9:\n                                currentBalance = _context5.sent;\n\n                                expect(Number(currentBalance) < Number(preBalance)).to.be.true;\n\n                              case 11:\n                              case \"end\":\n                                return _context5.stop();\n                            }\n                          }\n                        }, _callee5, undefined);\n                      })));\n\n                      it(\"should emit event when transfer is made\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                        var tx;\n                        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                          while (1) {\n                            switch (_context6.prev = _context6.next) {\n                              case 0:\n                                _context6.next = 2;\n                                return winningsWatcher.sendWinnings(RACE_ID, acc[1].address, HORSE_ID, transferAmount);\n\n                              case 2:\n                                tx = _context6.sent;\n\n\n                                expect(tx).to.emit(winningsWatcher, \"WinningsTransfer\").withArgs(RACE_ID, acc[1].address, HORSE_ID, transferAmount);\n\n                              case 4:\n                              case \"end\":\n                                return _context6.stop();\n                            }\n                          }\n                        }, _callee6, undefined);\n                      })));\n\n                    case 4:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, _callee7, undefined);\n            })));\n\n            describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n              return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                while (1) {\n                  switch (_context10.prev = _context10.next) {\n                    case 0:\n                      beforeEach(\"approve weth\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                          while (1) {\n                            switch (_context8.prev = _context8.next) {\n                              case 0:\n                                _context8.next = 2;\n                                return erc20.approve(winningsWatcher.address, MAX_WETH);\n\n                              case 2:\n                              case \"end\":\n                                return _context8.stop();\n                            }\n                          }\n                        }, _callee8, undefined);\n                      })));\n\n                      it(\"should revert if transfer for user in race has been made\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                          while (1) {\n                            switch (_context9.prev = _context9.next) {\n                              case 0:\n                                _context9.next = 2;\n                                return winningsWatcher.sendWinnings(RACE_ID, acc[1].address, HORSE_ID, transferAmount);\n\n                              case 2:\n\n                                expect(winningsWatcher.sendWinnings(RACE_ID, acc[1].address, HORSE_ID, transferAmount)).to.be.revertedWith(\"WinningsWatcher: user has been paid already\");\n\n                              case 3:\n                              case \"end\":\n                                return _context9.stop();\n                            }\n                          }\n                        }, _callee9, undefined);\n                      })));\n\n                    case 2:\n                    case \"end\":\n                      return _context10.stop();\n                  }\n                }\n              }, _callee10, undefined);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, undefined);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "WinningsWatcherTest.js"
      ],
      "names": [
        "require",
        "expect",
        "describe",
        "MAX_WETH",
        "ethers",
        "utils",
        "parseUnits",
        "RACE_ID",
        "formatBytes32String",
        "HORSE_ID",
        "transferAmount",
        "winningsWatcher",
        "erc20",
        "acc",
        "before",
        "getSigners",
        "beforeEach",
        "getContractFactory",
        "deploy",
        "address",
        "approve",
        "it",
        "balanceOf",
        "preBalance",
        "sendWinnings",
        "currentBalance",
        "Number",
        "to",
        "be",
        "true",
        "tx",
        "emit",
        "withArgs",
        "revertedWith"
      ],
      "mappings": "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",
      "file": "WinningsWatcherTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "sourcesContent": [
        "const { expect } = require(\"chai\");\n\ndescribe(\"WinningsWatcher\", () => {\n  const MAX_WETH = ethers.utils.parseUnits(\"10\");\n  const RACE_ID = ethers.utils.formatBytes32String(\"race_id\");\n  const HORSE_ID = 123;\n\n  let transferAmount = ethers.utils.parseUnits(\"0.005\");\n  let winningsWatcher, erc20, acc;\n\n  before(\"setup accs\", async () => {\n    acc = await ethers.getSigners();\n  });\n\n  beforeEach(\"setup instances\", async () => {\n    erc20 = await ethers.getContractFactory(\"ERC20Test\");\n    erc20 = await erc20.deploy(MAX_WETH);\n\n    winningsWatcher = await ethers.getContractFactory(\"WinningsWatcher\");\n    winningsWatcher = await winningsWatcher.deploy(erc20.address);\n  });\n\n  describe(\"sendWinnings\", async () => {\n    describe(\"valid transfer\", async () => {\n      beforeEach(\"approve weth\", async () => {\n        await erc20.approve(winningsWatcher.address, MAX_WETH);\n      });\n\n      it(\"should transfer WETH to user\", async () => {\n        let preBalance = await erc20.balanceOf(acc[0].address);\n        await winningsWatcher.sendWinnings(\n          RACE_ID,\n          acc[1].address,\n          HORSE_ID,\n          transferAmount\n        );\n\n        let currentBalance = await erc20.balanceOf(acc[0].address);\n        expect(Number(currentBalance) < Number(preBalance)).to.be.true;\n      });\n\n      it(\"should be able to make transfers to same user with different horse ID\", async () => {\n        let preBalance = await erc20.balanceOf(acc[0].address);\n        await winningsWatcher.sendWinnings(\n          RACE_ID,\n          acc[1].address,\n          HORSE_ID,\n          transferAmount\n        );\n        await winningsWatcher.sendWinnings(\n          RACE_ID,\n          acc[1].address,\n          321,\n          transferAmount\n        );\n\n        let currentBalance = await erc20.balanceOf(acc[0].address);\n        expect(Number(currentBalance) < Number(preBalance)).to.be.true;\n      });\n\n      it(\"should emit event when transfer is made\", async () => {\n        let tx = await winningsWatcher.sendWinnings(\n          RACE_ID,\n          acc[1].address,\n          HORSE_ID,\n          transferAmount\n        );\n\n        expect(tx)\n          .to.emit(winningsWatcher, \"WinningsTransfer\")\n          .withArgs(RACE_ID, acc[1].address, HORSE_ID, transferAmount);\n      });\n    });\n\n    describe(\"reverts\", async () => {\n      beforeEach(\"approve weth\", async () => {\n        await erc20.approve(winningsWatcher.address, MAX_WETH);\n      });\n\n      it(\"should revert if transfer for user in race has been made\", async () => {\n        await winningsWatcher.sendWinnings(\n          RACE_ID,\n          acc[1].address,\n          HORSE_ID,\n          transferAmount\n        );\n\n        expect(\n          winningsWatcher.sendWinnings(\n            RACE_ID,\n            acc[1].address,\n            HORSE_ID,\n            transferAmount\n          )\n        ).to.be.revertedWith(\"WinningsWatcher: user has been paid already\");\n      });\n    });\n  });\n});\n"
      ]
    },
    "mtime": 1627083004287
  },
  "{\"filename\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/GOPFundsReceiverWETH.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "chai",
            "imported": [
              "expect"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "expect",
                "local": "expect"
              }
            ]
          },
          {
            "source": "../../utils",
            "imported": [
              "getTypedData",
              "getRsvFromSig",
              "chainId"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getTypedData",
                "local": "getTypedData"
              },
              {
                "kind": "named",
                "imported": "getRsvFromSig",
                "local": "getRsvFromSig"
              },
              {
                "kind": "named",
                "imported": "chainId",
                "local": "chainId"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/GOPFundsReceiverWETH.js",
      "filenameRelative": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/GOPFundsReceiverWETH.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "GOPFundsReceiverWETH.js",
      "sourceFileName": "GOPFundsReceiverWETH.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "GOPFundsReceiverWETH"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar ganache = require(\"ganache-core\");\nvar Web3 = require(\"web3\");\n\ndescribe(\"GOPFundsReceiverWETH\", function () {\n  var acc = void 0,\n      owner = void 0,\n      fundsReceiver = void 0,\n      nextFundsReceiver = void 0,\n      blockchainBrain = void 0,\n      bob = void 0,\n      sasha = void 0,\n      emily = void 0;\n\n  var maxWETH = ethers.utils.parseUnits(\"1\");\n\n  // Contracts instances\n  var wethFundsReceiver = void 0,\n      erc20 = void 0,\n      horseData = void 0,\n      core = void 0;\n  var amount = ethers.utils.parseUnits(\"0.05\");\n\n  before(\"populate accs\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ethers.getSigners();\n\n          case 2:\n            acc = _context.sent;\n\n            owner = acc[0];\n            fundsReceiver = acc[1];\n            nextFundsReceiver = acc[2];\n            blockchainBrain = acc[3];\n            bob = acc[4];\n            sasha = acc[5];\n            emily = acc[6];\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  beforeEach(\"get factories\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return ethers.getContractFactory(\"ERC20Test\");\n\n          case 2:\n            erc20 = _context2.sent;\n            _context2.next = 5;\n            return ethers.getContractFactory(\"HorseData\");\n\n          case 5:\n            horseData = _context2.sent;\n            _context2.next = 8;\n            return ethers.getContractFactory(\"Core\");\n\n          case 8:\n            core = _context2.sent;\n            _context2.next = 11;\n            return ethers.getContractFactory(\"GOPFundsReceiverWETH\");\n\n          case 11:\n            wethFundsReceiver = _context2.sent;\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })));\n\n  beforeEach(\"contracts instantiation\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return erc20.deploy(ethers.utils.parseUnits(\"100\"));\n\n          case 2:\n            erc20 = _context3.sent;\n            _context3.next = 5;\n            return erc20.deployed();\n\n          case 5:\n            _context3.next = 7;\n            return horseData.deploy();\n\n          case 7:\n            horseData = _context3.sent;\n            _context3.next = 10;\n            return horseData.deployed();\n\n          case 10:\n            _context3.next = 12;\n            return core.deploy(horseData.address);\n\n          case 12:\n            core = _context3.sent;\n            _context3.next = 15;\n            return core.deployed();\n\n          case 15:\n            _context3.next = 17;\n            return wethFundsReceiver.deploy(fundsReceiver.address, core.address, erc20.address);\n\n          case 17:\n            wethFundsReceiver = _context3.sent;\n            _context3.next = 20;\n            return wethFundsReceiver.deployed();\n\n          case 20:\n\n            wethFundsReceiver.grantRole(ethers.utils.formatBytes32String(\"gfr_owners\"), blockchainBrain.address);\n\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  })));\n\n  beforeEach(\"setup erc20 tokens\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return erc20.transfer(bob.address, amount);\n\n          case 2:\n            _context4.next = 4;\n            return erc20.transfer(emily.address, amount);\n\n          case 4:\n            _context4.next = 6;\n            return erc20.connect(bob).approve(wethFundsReceiver.address, maxWETH);\n\n          case 6:\n            _context4.next = 8;\n            return erc20.connect(sasha).approve(wethFundsReceiver.address, maxWETH);\n\n          case 8:\n            _context4.next = 10;\n            return erc20.connect(emily).approve(wethFundsReceiver.address, maxWETH);\n\n          case 10:\n            _context4.next = 12;\n            return erc20.approve(wethFundsReceiver.address, maxWETH);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined);\n  })));\n\n  beforeEach(\"setup initial state of instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return wethFundsReceiver.setDomainSeparator(\"ZED WETH Funds Receiver\", \"1\", _utils.chainId);\n\n          case 2:\n            _context5.next = 4;\n            return core.grantRole(ethers.utils.formatBytes32String(\"core_contracts\"), owner.address);\n\n          case 4:\n            _context5.next = 6;\n            return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"FirstName\"), ethers.utils.formatBytes32String(\"Black\"));\n\n          case 6:\n            _context5.next = 8;\n            return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"Truc\"), ethers.utils.formatBytes32String(\"violet\"));\n\n          case 8:\n            _context5.next = 10;\n            return core.mintCustomHorse(bob.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Trung\"), ethers.utils.formatBytes32String(\"blue\"));\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, undefined);\n  })));\n\n  describe(\"Initial data validation\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            it(\"should make owner admin of contract after deployment\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n              return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                while (1) {\n                  switch (_context6.prev = _context6.next) {\n                    case 0:\n                      _context6.t0 = _chai.expect;\n                      _context6.next = 3;\n                      return wethFundsReceiver.hasRole(ethers.utils.formatBytes32String(\"gfr_owners_admin\"), owner.address);\n\n                    case 3:\n                      _context6.t1 = _context6.sent;\n                      (0, _context6.t0)(_context6.t1).to.be.true;\n\n                    case 5:\n                    case \"end\":\n                      return _context6.stop();\n                  }\n                }\n              }, _callee6, undefined);\n            })));\n\n            it(\"should not make the owner the funds receiver\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n              return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      _context7.t0 = _chai.expect;\n                      _context7.next = 3;\n                      return wethFundsReceiver.isFundsReceiver();\n\n                    case 3:\n                      _context7.t1 = _context7.sent;\n                      (0, _context7.t0)(_context7.t1).to.be.false;\n\n                    case 5:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, _callee7, undefined);\n            })));\n\n            it(\"should assign the funds receiver to the address in the constructor\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n              return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                while (1) {\n                  switch (_context8.prev = _context8.next) {\n                    case 0:\n                      _context8.t0 = _chai.expect;\n                      _context8.next = 3;\n                      return wethFundsReceiver.connect(fundsReceiver).isFundsReceiver();\n\n                    case 3:\n                      _context8.t1 = _context8.sent;\n                      (0, _context8.t0)(_context8.t1).to.be.true;\n\n                    case 5:\n                    case \"end\":\n                      return _context8.stop();\n                  }\n                }\n              }, _callee8, undefined);\n            })));\n\n          case 3:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, undefined);\n  })));\n\n  describe(\"getters and setters\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            it(\"should change funds receiver wallet\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n              return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                while (1) {\n                  switch (_context10.prev = _context10.next) {\n                    case 0:\n                      _context10.t0 = _chai.expect;\n                      _context10.next = 3;\n                      return wethFundsReceiver.connect(fundsReceiver).isFundsReceiver();\n\n                    case 3:\n                      _context10.t1 = _context10.sent;\n                      (0, _context10.t0)(_context10.t1).to.be.true;\n                      _context10.next = 7;\n                      return wethFundsReceiver.connect(blockchainBrain).changeFundsReceiver(nextFundsReceiver.address);\n\n                    case 7:\n                      _context10.t2 = _chai.expect;\n                      _context10.next = 10;\n                      return wethFundsReceiver.connect(nextFundsReceiver).isFundsReceiver();\n\n                    case 10:\n                      _context10.t3 = _context10.sent;\n                      (0, _context10.t2)(_context10.t3).to.be.true;\n\n                    case 12:\n                    case \"end\":\n                      return _context10.stop();\n                  }\n                }\n              }, _callee10, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, undefined);\n  })));\n\n  describe(\"pausable\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            it(\"can only be paused by accounts with correct role\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n              return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                while (1) {\n                  switch (_context12.prev = _context12.next) {\n                    case 0:\n                      _context12.next = 2;\n                      return wethFundsReceiver.connect(blockchainBrain).pause();\n\n                    case 2:\n                      _context12.next = 4;\n                      return wethFundsReceiver.connect(blockchainBrain).unpause();\n\n                    case 4:\n\n                      (0, _chai.expect)(wethFundsReceiver.connect(bob).pause()).to.be.revertedWith(\"GOP: Unauthorized\");\n\n                    case 5:\n                    case \"end\":\n                      return _context12.stop();\n                  }\n                }\n              }, _callee12, undefined);\n            })));\n\n            it(\"should revert if contract is paused\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n              return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                while (1) {\n                  switch (_context13.prev = _context13.next) {\n                    case 0:\n                      _context13.next = 2;\n                      return wethFundsReceiver.connect(blockchainBrain).pause();\n\n                    case 2:\n\n                      (0, _chai.expect)(wethFundsReceiver.connect(bob).receiveGOPFunds(ethers.utils.formatBytes32String(\"horse_code\"), amount, ethers.utils.formatBytes32String(\"Bojack Horseman\"))).to.be.revertedWith(\"Pausable: paused\");\n\n                    case 3:\n                    case \"end\":\n                      return _context13.stop();\n                  }\n                }\n              }, _callee13, undefined);\n            })));\n\n            it(\"should be able to receive funds after unpaused\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n              return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                while (1) {\n                  switch (_context14.prev = _context14.next) {\n                    case 0:\n                      _context14.next = 2;\n                      return wethFundsReceiver.connect(blockchainBrain).pause();\n\n                    case 2:\n                      _context14.next = 4;\n                      return wethFundsReceiver.connect(blockchainBrain).unpause();\n\n                    case 4:\n                      _context14.next = 6;\n                      return wethFundsReceiver.connect(bob).receiveGOPFunds(ethers.utils.formatBytes32String(\"horse_code\"), amount, ethers.utils.formatBytes32String(\"Bojack Horseman\"));\n\n                    case 6:\n                      _context14.t0 = _chai.expect;\n                      _context14.next = 9;\n                      return erc20.balanceOf(fundsReceiver.address);\n\n                    case 9:\n                      _context14.t1 = _context14.sent;\n                      _context14.t2 = amount;\n                      (0, _context14.t0)(_context14.t1).to.equal(_context14.t2);\n                      _context14.t3 = _chai.expect;\n                      _context14.next = 15;\n                      return erc20.balanceOf(bob.address);\n\n                    case 15:\n                      _context14.t4 = _context14.sent;\n                      (0, _context14.t3)(_context14.t4).to.equal(0);\n\n                    case 17:\n                    case \"end\":\n                      return _context14.stop();\n                  }\n                }\n              }, _callee14, undefined);\n            })));\n\n          case 3:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15, undefined);\n  })));\n\n  describe(\"funds receiving\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n    return regeneratorRuntime.wrap(function _callee21$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            it(\"should fail for insufficient funds\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n              return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                while (1) {\n                  switch (_context16.prev = _context16.next) {\n                    case 0:\n                      _context16.t0 = _chai.expect;\n                      _context16.next = 3;\n                      return erc20.balanceOf(sasha.address);\n\n                    case 3:\n                      _context16.t1 = _context16.sent;\n                      (0, _context16.t0)(_context16.t1).to.equal(0);\n\n\n                      (0, _chai.expect)(wethFundsReceiver.connect(sasha).receiveGOPFunds(ethers.utils.formatBytes32String(\"horse_code\"), amount, ethers.utils.formatBytes32String(\"Bojack Horseman\"))).to.be.revertedWith(\"ERC20: transfer amount exceeds balance\");\n\n                    case 6:\n                    case \"end\":\n                      return _context16.stop();\n                  }\n                }\n              }, _callee16, undefined);\n            })));\n\n            it(\"should fail for unnamed _horseName\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n              return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                while (1) {\n                  switch (_context17.prev = _context17.next) {\n                    case 0:\n                      (0, _chai.expect)(wethFundsReceiver.receiveGOPFunds(ethers.utils.formatBytes32String(\"\"), amount, ethers.utils.formatBytes32String(\"Bojack Horseman\"))).to.be.revertedWith(\"GOP: Code cannot be an empty string\");\n\n                    case 1:\n                    case \"end\":\n                      return _context17.stop();\n                  }\n                }\n              }, _callee17, undefined);\n            })));\n\n            it(\"should fail for 0 _horsePrice\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n              return regeneratorRuntime.wrap(function _callee18$(_context18) {\n                while (1) {\n                  switch (_context18.prev = _context18.next) {\n                    case 0:\n                      (0, _chai.expect)(wethFundsReceiver.receiveGOPFunds(ethers.utils.formatBytes32String(\"horse_code\"), 0, ethers.utils.formatBytes32String(\"Bojack Horseman\"))).to.be.revertedWith(\"GOP: Price cannot be 0\");\n\n                    case 1:\n                    case \"end\":\n                      return _context18.stop();\n                  }\n                }\n              }, _callee18, undefined);\n            })));\n\n            it(\"should transfer funds to fundsReceiver\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n              return regeneratorRuntime.wrap(function _callee19$(_context19) {\n                while (1) {\n                  switch (_context19.prev = _context19.next) {\n                    case 0:\n                      _context19.next = 2;\n                      return wethFundsReceiver.connect(bob).receiveGOPFunds(ethers.utils.formatBytes32String(\"horse_code\"), amount, ethers.utils.formatBytes32String(\"Bojack Horseman\"));\n\n                    case 2:\n                      _context19.t0 = _chai.expect;\n                      _context19.next = 5;\n                      return erc20.balanceOf(fundsReceiver.address);\n\n                    case 5:\n                      _context19.t1 = _context19.sent;\n                      _context19.t2 = amount;\n                      (0, _context19.t0)(_context19.t1).to.equal(_context19.t2);\n                      _context19.t3 = _chai.expect;\n                      _context19.next = 11;\n                      return erc20.balanceOf(bob.address);\n\n                    case 11:\n                      _context19.t4 = _context19.sent;\n                      (0, _context19.t3)(_context19.t4).to.equal(0);\n\n                    case 13:\n                    case \"end\":\n                      return _context19.stop();\n                  }\n                }\n              }, _callee19, undefined);\n            })));\n\n            it(\"should fail for already used _horseName\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n              return regeneratorRuntime.wrap(function _callee20$(_context20) {\n                while (1) {\n                  switch (_context20.prev = _context20.next) {\n                    case 0:\n                      (0, _chai.expect)(wethFundsReceiver.receiveGOPFunds(ethers.utils.formatBytes32String(\"horse_code\"), amount, ethers.utils.formatBytes32String(\"Trung\"))).to.be.revertedWith(\"Core: name already taken\");\n\n                    case 1:\n                    case \"end\":\n                      return _context20.stop();\n                  }\n                }\n              }, _callee20, undefined);\n            })));\n\n          case 5:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, _callee21, undefined);\n  })));\n\n  describe(\"isCodeUsed mapping\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {\n    return regeneratorRuntime.wrap(function _callee25$(_context25) {\n      while (1) {\n        switch (_context25.prev = _context25.next) {\n          case 0:\n            it(\"should fail after receiving funds more than once for the same horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n              return regeneratorRuntime.wrap(function _callee22$(_context22) {\n                while (1) {\n                  switch (_context22.prev = _context22.next) {\n                    case 0:\n                      _context22.next = 2;\n                      return wethFundsReceiver.connect(bob).receiveGOPFunds(ethers.utils.formatBytes32String(\"horse_code\"), amount, ethers.utils.formatBytes32String(\"Bojack Horseman\"));\n\n                    case 2:\n\n                      (0, _chai.expect)(wethFundsReceiver.connect(emily).receiveGOPFunds(ethers.utils.formatBytes32String(\"horse_code\"), amount, ethers.utils.formatBytes32String(\"Bojack Horseman\"))).to.be.revertedWith(\"GOP: Code has already been used\");\n\n                      _context22.t0 = _chai.expect;\n                      _context22.next = 6;\n                      return erc20.balanceOf(fundsReceiver.address);\n\n                    case 6:\n                      _context22.t1 = _context22.sent;\n                      _context22.t2 = amount;\n                      (0, _context22.t0)(_context22.t1).to.equal(_context22.t2);\n                      _context22.t3 = _chai.expect;\n                      _context22.next = 12;\n                      return erc20.balanceOf(bob.address);\n\n                    case 12:\n                      _context22.t4 = _context22.sent;\n                      (0, _context22.t3)(_context22.t4).to.equal(0);\n\n                    case 14:\n                    case \"end\":\n                      return _context22.stop();\n                  }\n                }\n              }, _callee22, undefined);\n            })));\n\n            it(\"should not be able to receive funds for code mark as used\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n              return regeneratorRuntime.wrap(function _callee23$(_context23) {\n                while (1) {\n                  switch (_context23.prev = _context23.next) {\n                    case 0:\n                      _context23.next = 2;\n                      return wethFundsReceiver.connect(blockchainBrain).markCodeAsUsed(ethers.utils.formatBytes32String(\"horse_code\"));\n\n                    case 2:\n\n                      (0, _chai.expect)(wethFundsReceiver.receiveGOPFunds(ethers.utils.formatBytes32String(\"horse_code\"), amount, ethers.utils.formatBytes32String(\"Bojack Horseman\"))).to.be.revertedWith(\"GOP: Code has already been used\");\n\n                    case 3:\n                    case \"end\":\n                      return _context23.stop();\n                  }\n                }\n              }, _callee23, undefined);\n            })));\n\n            it(\"should be able to receive funds for code mark as unused\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {\n              return regeneratorRuntime.wrap(function _callee24$(_context24) {\n                while (1) {\n                  switch (_context24.prev = _context24.next) {\n                    case 0:\n                      _context24.next = 2;\n                      return wethFundsReceiver.connect(blockchainBrain).markCodeAsUsed(ethers.utils.formatBytes32String(\"horse_code\"));\n\n                    case 2:\n                      _context24.next = 4;\n                      return wethFundsReceiver.connect(blockchainBrain).markCodeAsUnused(ethers.utils.formatBytes32String(\"horse_code\"));\n\n                    case 4:\n                      _context24.next = 6;\n                      return wethFundsReceiver.connect(bob).receiveGOPFunds(ethers.utils.formatBytes32String(\"horse_code\"), amount, ethers.utils.formatBytes32String(\"Bojack Horseman\"));\n\n                    case 6:\n                    case \"end\":\n                      return _context24.stop();\n                  }\n                }\n              }, _callee24, undefined);\n            })));\n\n          case 3:\n          case \"end\":\n            return _context25.stop();\n        }\n      }\n    }, _callee25, undefined);\n  })));\n\n  describe(\"meta-transactions\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27() {\n    return regeneratorRuntime.wrap(function _callee27$(_context27) {\n      while (1) {\n        switch (_context27.prev = _context27.next) {\n          case 0:\n            // after(\"revert web3 provider\", async () => {\n            //   web3.setProvider(\n            //     new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\")\n            //   );\n            // });\n\n            // before(\"set web3 provider\", async () => {\n            //   web3.setProvider(ganache.provider({ accounts: metaTxsAccounts }));\n            // });\n\n            it(\"sends funds to fundReceiver with meta-txs\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {\n              var initialOwnerBalance, functionSignature, typedData, signedData, _ref28, r, s, v;\n\n              return regeneratorRuntime.wrap(function _callee26$(_context26) {\n                while (1) {\n                  switch (_context26.prev = _context26.next) {\n                    case 0:\n                      _context26.next = 2;\n                      return erc20.balanceOf(owner.address);\n\n                    case 2:\n                      initialOwnerBalance = _context26.sent;\n                      functionSignature = wethFundsReceiver.interface.encodeFunctionData(\"receiveGOPFunds\", [ethers.utils.formatBytes32String(\"horse_code\"), amount, ethers.utils.formatBytes32String(\"Bojack Horseman\")]);\n                      _context26.t0 = _utils.getTypedData;\n                      _context26.t1 = _utils.chainId;\n                      _context26.t2 = wethFundsReceiver.address;\n                      _context26.next = 9;\n                      return wethFundsReceiver.getNonce(owner.address);\n\n                    case 9:\n                      _context26.t3 = _context26.sent;\n                      _context26.t4 = owner.address;\n                      _context26.t5 = functionSignature;\n                      _context26.t6 = {\n                        name: \"ZED WETH Funds Receiver\",\n                        version: \"1\",\n                        chainId: _context26.t1,\n                        verifyingContract: _context26.t2,\n                        nonce: _context26.t3,\n                        from: _context26.t4,\n                        functionSignature: _context26.t5\n                      };\n                      _context26.next = 15;\n                      return (0, _context26.t0)(_context26.t6);\n\n                    case 15:\n                      typedData = _context26.sent;\n                      _context26.next = 18;\n                      return owner._signTypedData(typedData.domain, typedData.types, typedData.message);\n\n                    case 18:\n                      signedData = _context26.sent;\n                      _context26.next = 21;\n                      return (0, _utils.getRsvFromSig)(signedData);\n\n                    case 21:\n                      _ref28 = _context26.sent;\n                      r = _ref28.r;\n                      s = _ref28.s;\n                      v = _ref28.v;\n                      _context26.next = 27;\n                      return wethFundsReceiver.executeMetaTransaction(owner.address, functionSignature, r, s, v);\n\n                    case 27:\n                      _context26.t7 = _chai.expect;\n                      _context26.next = 30;\n                      return erc20.balanceOf(fundsReceiver.address);\n\n                    case 30:\n                      _context26.t8 = _context26.sent;\n                      _context26.t9 = amount;\n                      (0, _context26.t7)(_context26.t8).to.equal(_context26.t9);\n\n                    case 33:\n                    case \"end\":\n                      return _context26.stop();\n                  }\n                }\n              }, _callee26, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context27.stop();\n        }\n      }\n    }, _callee27, undefined);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "GOPFundsReceiverWETH.js"
      ],
      "names": [
        "ganache",
        "require",
        "Web3",
        "describe",
        "acc",
        "owner",
        "fundsReceiver",
        "nextFundsReceiver",
        "blockchainBrain",
        "bob",
        "sasha",
        "emily",
        "maxWETH",
        "ethers",
        "utils",
        "parseUnits",
        "wethFundsReceiver",
        "erc20",
        "horseData",
        "core",
        "amount",
        "before",
        "getSigners",
        "beforeEach",
        "getContractFactory",
        "deploy",
        "deployed",
        "address",
        "grantRole",
        "formatBytes32String",
        "transfer",
        "connect",
        "approve",
        "setDomainSeparator",
        "chainId",
        "mintCustomHorse",
        "it",
        "expect",
        "hasRole",
        "to",
        "be",
        "true",
        "isFundsReceiver",
        "false",
        "changeFundsReceiver",
        "pause",
        "unpause",
        "revertedWith",
        "receiveGOPFunds",
        "balanceOf",
        "equal",
        "markCodeAsUsed",
        "markCodeAsUnused",
        "initialOwnerBalance",
        "functionSignature",
        "interface",
        "encodeFunctionData",
        "getTypedData",
        "getNonce",
        "name",
        "version",
        "verifyingContract",
        "nonce",
        "from",
        "typedData",
        "_signTypedData",
        "domain",
        "types",
        "message",
        "signedData",
        "r",
        "s",
        "v",
        "executeMetaTransaction"
      ],
      "mappings": "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",
      "file": "GOPFundsReceiverWETH.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "sourcesContent": [
        "const ganache = require(\"ganache-core\");\nconst Web3 = require(\"web3\");\n\nimport { expect } from \"chai\";\n\nimport { getTypedData, getRsvFromSig, chainId } from \"../../utils\";\n\ndescribe(\"GOPFundsReceiverWETH\", () => {\n  let acc,\n    owner,\n    fundsReceiver,\n    nextFundsReceiver,\n    blockchainBrain,\n    bob,\n    sasha,\n    emily;\n\n  const maxWETH = ethers.utils.parseUnits(\"1\");\n\n  // Contracts instances\n  let wethFundsReceiver, erc20, horseData, core;\n  let amount = ethers.utils.parseUnits(\"0.05\");\n\n  before(\"populate accs\", async () => {\n    acc = await ethers.getSigners();\n    owner = acc[0];\n    fundsReceiver = acc[1];\n    nextFundsReceiver = acc[2];\n    blockchainBrain = acc[3];\n    bob = acc[4];\n    sasha = acc[5];\n    emily = acc[6];\n  });\n\n  beforeEach(\"get factories\", async () => {\n    erc20 = await ethers.getContractFactory(\"ERC20Test\");\n    horseData = await ethers.getContractFactory(\"HorseData\");\n    core = await ethers.getContractFactory(\"Core\");\n    wethFundsReceiver = await ethers.getContractFactory(\"GOPFundsReceiverWETH\");\n  });\n\n  beforeEach(\"contracts instantiation\", async () => {\n    erc20 = await erc20.deploy(ethers.utils.parseUnits(\"100\"));\n    await erc20.deployed();\n\n    horseData = await horseData.deploy();\n    await horseData.deployed();\n\n    core = await core.deploy(horseData.address);\n    await core.deployed();\n\n    wethFundsReceiver = await wethFundsReceiver.deploy(\n      fundsReceiver.address,\n      core.address,\n      erc20.address\n    );\n    await wethFundsReceiver.deployed();\n\n    wethFundsReceiver.grantRole(\n      ethers.utils.formatBytes32String(\"gfr_owners\"),\n      blockchainBrain.address\n    );\n  });\n\n  beforeEach(\"setup erc20 tokens\", async () => {\n    await erc20.transfer(bob.address, amount);\n    await erc20.transfer(emily.address, amount);\n    await erc20.connect(bob).approve(wethFundsReceiver.address, maxWETH);\n    await erc20.connect(sasha).approve(wethFundsReceiver.address, maxWETH);\n    await erc20.connect(emily).approve(wethFundsReceiver.address, maxWETH);\n    await erc20.approve(wethFundsReceiver.address, maxWETH);\n  });\n\n  beforeEach(\"setup initial state of instances\", async () => {\n    await wethFundsReceiver.setDomainSeparator(\n      \"ZED WETH Funds Receiver\",\n      \"1\",\n      chainId\n    );\n\n    await core.grantRole(\n      ethers.utils.formatBytes32String(\"core_contracts\"),\n      owner.address\n    );\n\n    // 0\n    await core.mintCustomHorse(\n      owner.address,\n      4,\n      ethers.utils.formatBytes32String(\"Male\"),\n      ethers.utils.formatBytes32String(\"FirstName\"),\n      ethers.utils.formatBytes32String(\"Black\")\n    );\n\n    // 1\n    await core.mintCustomHorse(\n      owner.address,\n      4,\n      ethers.utils.formatBytes32String(\"Female\"),\n      ethers.utils.formatBytes32String(\"Truc\"),\n      ethers.utils.formatBytes32String(\"violet\")\n    );\n\n    // 2\n    await core.mintCustomHorse(\n      bob.address,\n      4,\n      ethers.utils.formatBytes32String(\"Male\"),\n      ethers.utils.formatBytes32String(\"Trung\"),\n      ethers.utils.formatBytes32String(\"blue\")\n    );\n  });\n\n  describe(\"Initial data validation\", async () => {\n    it(\"should make owner admin of contract after deployment\", async () => {\n      expect(\n        await wethFundsReceiver.hasRole(\n          ethers.utils.formatBytes32String(\"gfr_owners_admin\"),\n          owner.address\n        )\n      ).to.be.true;\n    });\n\n    it(\"should not make the owner the funds receiver\", async () => {\n      expect(await wethFundsReceiver.isFundsReceiver()).to.be.false;\n    });\n\n    it(\"should assign the funds receiver to the address in the constructor\", async () => {\n      expect(await wethFundsReceiver.connect(fundsReceiver).isFundsReceiver())\n        .to.be.true;\n    });\n  });\n\n  describe(\"getters and setters\", async () => {\n    it(\"should change funds receiver wallet\", async () => {\n      expect(await wethFundsReceiver.connect(fundsReceiver).isFundsReceiver())\n        .to.be.true;\n\n      await wethFundsReceiver\n        .connect(blockchainBrain)\n        .changeFundsReceiver(nextFundsReceiver.address);\n\n      expect(\n        await wethFundsReceiver.connect(nextFundsReceiver).isFundsReceiver()\n      ).to.be.true;\n    });\n  });\n\n  describe(\"pausable\", async () => {\n    it(\"can only be paused by accounts with correct role\", async () => {\n      await wethFundsReceiver.connect(blockchainBrain).pause();\n      await wethFundsReceiver.connect(blockchainBrain).unpause();\n\n      expect(wethFundsReceiver.connect(bob).pause()).to.be.revertedWith(\n        \"GOP: Unauthorized\"\n      );\n    });\n\n    it(\"should revert if contract is paused\", async () => {\n      await wethFundsReceiver.connect(blockchainBrain).pause();\n\n      expect(\n        wethFundsReceiver\n          .connect(bob)\n          .receiveGOPFunds(\n            ethers.utils.formatBytes32String(\"horse_code\"),\n            amount,\n            ethers.utils.formatBytes32String(\"Bojack Horseman\")\n          )\n      ).to.be.revertedWith(\"Pausable: paused\");\n    });\n\n    it(\"should be able to receive funds after unpaused\", async () => {\n      await wethFundsReceiver.connect(blockchainBrain).pause();\n      await wethFundsReceiver.connect(blockchainBrain).unpause();\n      await wethFundsReceiver\n        .connect(bob)\n        .receiveGOPFunds(\n          ethers.utils.formatBytes32String(\"horse_code\"),\n          amount,\n          ethers.utils.formatBytes32String(\"Bojack Horseman\")\n        );\n\n      expect(await erc20.balanceOf(fundsReceiver.address)).to.equal(amount);\n      expect(await erc20.balanceOf(bob.address)).to.equal(0);\n    });\n  });\n\n  describe(\"funds receiving\", async () => {\n    it(\"should fail for insufficient funds\", async () => {\n      expect(await erc20.balanceOf(sasha.address)).to.equal(0);\n\n      expect(\n        wethFundsReceiver\n          .connect(sasha)\n          .receiveGOPFunds(\n            ethers.utils.formatBytes32String(\"horse_code\"),\n            amount,\n            ethers.utils.formatBytes32String(\"Bojack Horseman\")\n          )\n      ).to.be.revertedWith(\"ERC20: transfer amount exceeds balance\");\n    });\n\n    it(\"should fail for unnamed _horseName\", async () => {\n      expect(\n        wethFundsReceiver.receiveGOPFunds(\n          ethers.utils.formatBytes32String(\"\"),\n          amount,\n          ethers.utils.formatBytes32String(\"Bojack Horseman\")\n        )\n      ).to.be.revertedWith(\"GOP: Code cannot be an empty string\");\n    });\n\n    it(\"should fail for 0 _horsePrice\", async () => {\n      expect(\n        wethFundsReceiver.receiveGOPFunds(\n          ethers.utils.formatBytes32String(\"horse_code\"),\n          0,\n          ethers.utils.formatBytes32String(\"Bojack Horseman\")\n        )\n      ).to.be.revertedWith(\"GOP: Price cannot be 0\");\n    });\n\n    it(\"should transfer funds to fundsReceiver\", async () => {\n      await wethFundsReceiver\n        .connect(bob)\n        .receiveGOPFunds(\n          ethers.utils.formatBytes32String(\"horse_code\"),\n          amount,\n          ethers.utils.formatBytes32String(\"Bojack Horseman\")\n        );\n\n      expect(await erc20.balanceOf(fundsReceiver.address)).to.equal(amount);\n      expect(await erc20.balanceOf(bob.address)).to.equal(0);\n    });\n\n    it(\"should fail for already used _horseName\", async () => {\n      expect(\n        wethFundsReceiver.receiveGOPFunds(\n          ethers.utils.formatBytes32String(\"horse_code\"),\n          amount,\n          ethers.utils.formatBytes32String(\"Trung\")\n        )\n      ).to.be.revertedWith(\"Core: name already taken\");\n    });\n  });\n\n  describe(\"isCodeUsed mapping\", async () => {\n    it(\"should fail after receiving funds more than once for the same horse\", async () => {\n      await wethFundsReceiver\n        .connect(bob)\n        .receiveGOPFunds(\n          ethers.utils.formatBytes32String(\"horse_code\"),\n          amount,\n          ethers.utils.formatBytes32String(\"Bojack Horseman\")\n        );\n\n      expect(\n        wethFundsReceiver\n          .connect(emily)\n          .receiveGOPFunds(\n            ethers.utils.formatBytes32String(\"horse_code\"),\n            amount,\n            ethers.utils.formatBytes32String(\"Bojack Horseman\")\n          )\n      ).to.be.revertedWith(\"GOP: Code has already been used\");\n\n      expect(await erc20.balanceOf(fundsReceiver.address)).to.equal(amount);\n      expect(await erc20.balanceOf(bob.address)).to.equal(0);\n    });\n\n    it(\"should not be able to receive funds for code mark as used\", async () => {\n      await wethFundsReceiver\n        .connect(blockchainBrain)\n        .markCodeAsUsed(ethers.utils.formatBytes32String(\"horse_code\"));\n\n      expect(\n        wethFundsReceiver.receiveGOPFunds(\n          ethers.utils.formatBytes32String(\"horse_code\"),\n          amount,\n          ethers.utils.formatBytes32String(\"Bojack Horseman\")\n        )\n      ).to.be.revertedWith(\"GOP: Code has already been used\");\n    });\n\n    it(\"should be able to receive funds for code mark as unused\", async () => {\n      await wethFundsReceiver\n        .connect(blockchainBrain)\n        .markCodeAsUsed(ethers.utils.formatBytes32String(\"horse_code\"));\n\n      await wethFundsReceiver\n        .connect(blockchainBrain)\n        .markCodeAsUnused(ethers.utils.formatBytes32String(\"horse_code\"));\n\n      await wethFundsReceiver\n        .connect(bob)\n        .receiveGOPFunds(\n          ethers.utils.formatBytes32String(\"horse_code\"),\n          amount,\n          ethers.utils.formatBytes32String(\"Bojack Horseman\")\n        );\n    });\n  });\n\n  describe(\"meta-transactions\", async () => {\n    // after(\"revert web3 provider\", async () => {\n    //   web3.setProvider(\n    //     new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\")\n    //   );\n    // });\n\n    // before(\"set web3 provider\", async () => {\n    //   web3.setProvider(ganache.provider({ accounts: metaTxsAccounts }));\n    // });\n\n    it(\"sends funds to fundReceiver with meta-txs\", async () => {\n      const initialOwnerBalance = await erc20.balanceOf(owner.address);\n      let functionSignature = wethFundsReceiver.interface.encodeFunctionData(\n        \"receiveGOPFunds\",\n        [\n          ethers.utils.formatBytes32String(\"horse_code\"),\n          amount,\n          ethers.utils.formatBytes32String(\"Bojack Horseman\"),\n        ]\n      );\n\n      let typedData = await getTypedData({\n        name: \"ZED WETH Funds Receiver\",\n        version: \"1\",\n        chainId: chainId,\n        verifyingContract: wethFundsReceiver.address,\n        nonce: await wethFundsReceiver.getNonce(owner.address),\n        from: owner.address,\n        functionSignature: functionSignature,\n      });\n\n      let signedData = await owner._signTypedData(\n        typedData.domain,\n        typedData.types,\n        typedData.message\n      );\n\n      let { r, s, v } = await getRsvFromSig(signedData);\n\n      await wethFundsReceiver.executeMetaTransaction(\n        owner.address,\n        functionSignature,\n        r,\n        s,\n        v\n      );\n\n      expect(await erc20.balanceOf(fundsReceiver.address)).to.equal(amount);\n    });\n  });\n});\n"
      ]
    },
    "mtime": 1627083004492
  },
  "{\"filename\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/BreedingRelayerTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../../utils",
            "imported": [
              "increaseTimeBySeconds",
              "mineBlock"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "increaseTimeBySeconds",
                "local": "increaseTimeBySeconds"
              },
              {
                "kind": "named",
                "imported": "mineBlock",
                "local": "mineBlock"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/BreedingRelayerTest.js",
      "filenameRelative": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/BreedingRelayerTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "BreedingRelayerTest.js",
      "sourceFileName": "BreedingRelayerTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "BreedingRelayerTest"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nvar _utils = require(\"../../utils\");\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar BreedingRelayer = artifacts.require(\"BreedingRelayer\");\nvar Core = artifacts.require(\"Core\");\nvar HorseData = artifacts.require(\"HorseData\");\nvar Breeding = artifacts.require(\"Breeding\");\nvar BreedingProxy = artifacts.require(\"BreedingProxy\");\nvar BreedingProxyAdmin = artifacts.require(\"ZedProxyAdmin\");\nvar StudService = artifacts.require(\"StudServiceV5\");\nvar BreedTypes = artifacts.require(\"BreedTypes\");\nvar ERC20Test = artifacts.require(\"ERC20Test\");\n\ncontract(\"BreedingRelayer\", function (acc) {\n  var DEFAULT_COLOR = web3.utils.toHex(\"Midnight Black\"),\n      DEFAULT_AMOUNT = web3.utils.toWei(\"0.2\", \"ether\"),\n      MAX_WETH = web3.utils.toWei(\"1000\", \"ether\");\n\n  var breedingRelayer = void 0,\n      core = void 0,\n      breedTypes = void 0,\n      breedingLogic = void 0,\n      breedingProxy = void 0,\n      breedingProxyAdmin = void 0,\n      breeding = void 0,\n      studService = void 0,\n      horseData = void 0,\n      erc20 = void 0;\n\n  var owner = acc[0],\n      poolAddress = acc[1];\n\n  beforeEach(\"deploy instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return HorseData.new();\n\n          case 2:\n            horseData = _context.sent;\n            _context.next = 5;\n            return Core.new(horseData.address);\n\n          case 5:\n            core = _context.sent;\n            _context.next = 8;\n            return BreedTypes.new();\n\n          case 8:\n            breedTypes = _context.sent;\n            _context.next = 11;\n            return StudService.new(core.address, horseData.address, breedTypes.address);\n\n          case 11:\n            studService = _context.sent;\n            _context.next = 14;\n            return ERC20Test.new(web3.utils.toWei(\"100\", \"ether\"));\n\n          case 14:\n            erc20 = _context.sent;\n            _context.next = 17;\n            return Breeding.new();\n\n          case 17:\n            breedingLogic = _context.sent;\n            _context.next = 20;\n            return BreedingProxyAdmin.new();\n\n          case 20:\n            breedingProxyAdmin = _context.sent;\n            _context.next = 23;\n            return BreedingProxy.new(breedingLogic.address, breedingProxyAdmin.address);\n\n          case 23:\n            breedingProxy = _context.sent;\n            _context.next = 26;\n            return Breeding.at(breedingProxy.address);\n\n          case 26:\n            breeding = _context.sent;\n            _context.next = 29;\n            return BreedingRelayer.new(core.address, breeding.address);\n\n          case 29:\n            breedingRelayer = _context.sent;\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  beforeEach(\"setup initial state of instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return breedTypes.grantRole(web3.utils.toHex(\"breed_types_owners\"), owner);\n\n          case 2:\n            _context2.next = 4;\n            return breeding.initialize(core.address, studService.address, breedTypes.address, erc20.address, poolAddress, acc[4]);\n\n          case 4:\n            _context2.next = 6;\n            return breedTypes.grantRole(web3.utils.toHex(\"breed_types_contracts\"), breeding.address);\n\n          case 6:\n            _context2.next = 8;\n            return core.grantRole(web3.utils.toHex(\"core_contracts\"), owner);\n\n          case 8:\n            _context2.next = 10;\n            return core.grantRole(web3.utils.toHex(\"core_contracts\"), breeding.address);\n\n          case 10:\n            _context2.next = 12;\n            return core.grantRole(web3.utils.toHex(\"core_owners\"), breeding.address);\n\n          case 12:\n            _context2.next = 14;\n            return core.mintCustomHorse(owner, 4, web3.utils.toHex(\"Male\"), web3.utils.toHex(\"FirstName\"), web3.utils.toHex(\"Black\"));\n\n          case 14:\n            _context2.next = 16;\n            return core.mintCustomHorse(owner, 4, web3.utils.toHex(\"Female\"), web3.utils.toHex(\"Truc\"), web3.utils.toHex(\"violet\"));\n\n          case 16:\n            _context2.next = 18;\n            return core.mintCustomHorse(owner, 4, web3.utils.toHex(\"Male\"), web3.utils.toHex(\"Trung\"), web3.utils.toHex(\"blue\"));\n\n          case 18:\n            _context2.next = 20;\n            return studService.grantRole(web3.utils.toHex(\"stud_owners\"), owner);\n\n          case 20:\n            _context2.next = 22;\n            return studService.putInStud(2, DEFAULT_AMOUNT, 86400);\n\n          case 22:\n            _context2.next = 24;\n            return erc20.transfer(acc[2], DEFAULT_AMOUNT);\n\n          case 24:\n            _context2.next = 26;\n            return erc20.transfer(acc[5], DEFAULT_AMOUNT);\n\n          case 26:\n            _context2.next = 28;\n            return erc20.approve(breeding.address, MAX_WETH, {\n              from: acc[2]\n            });\n\n          case 28:\n            _context2.next = 30;\n            return erc20.approve(breeding.address, MAX_WETH, {\n              from: acc[5]\n            });\n\n          case 30:\n            _context2.next = 32;\n            return erc20.approve(breeding.address, MAX_WETH);\n\n          case 32:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  }))\n\n  // Female ID 1 and Male ID 2\n  );\n\n  describe(\"relayMix\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            it(\"should record breed data if it is not saved\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n              var maleRecord, femaleRecord;\n              return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return doNormalMix();\n\n                    case 2:\n                      _context3.next = 4;\n                      return breedingRelayer.getBreedingRecord(2);\n\n                    case 4:\n                      maleRecord = _context3.sent;\n\n\n                      assert.isTrue(maleRecord[0]);\n                      // Male limit is 3\n                      assert.equal(maleRecord[1].toNumber(), 2);\n\n                      _context3.next = 9;\n                      return breedingRelayer.getBreedingRecord(1);\n\n                    case 9:\n                      femaleRecord = _context3.sent;\n\n\n                      assert.isTrue(femaleRecord[0]);\n                      // Female limit is 1\n                      assert.equal(femaleRecord[1].toNumber(), 0);\n\n                    case 12:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3, undefined);\n            })));\n\n            it(\"should use correct reset date if horse hasn't been used in months\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n              var resetDays, maleRecord, horseData;\n              return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return breedingRelayer.resetDays();\n\n                    case 2:\n                      resetDays = _context4.sent;\n                      _context4.next = 5;\n                      return (0, _utils.increaseTimeBySeconds)(10713600);\n\n                    case 5:\n                      _context4.next = 7;\n                      return (0, _utils.mineBlock)();\n\n                    case 7:\n                      _context4.next = 9;\n                      return doNormalMix();\n\n                    case 9:\n                      _context4.next = 11;\n                      return breedingRelayer.getBreedingRecord(2);\n\n                    case 11:\n                      maleRecord = _context4.sent;\n                      _context4.next = 14;\n                      return core.getHorseData(2);\n\n                    case 14:\n                      horseData = _context4.sent;\n\n\n                      console.log(maleRecord[2].toNumber(), horseData[2].toNumber() + resetDays.toNumber() * 5);\n\n                    case 16:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4, undefined);\n            })));\n\n            describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n              return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      it(\"should revert not the owner of the female sends the tx\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                          while (1) {\n                            switch (_context5.prev = _context5.next) {\n                              case 0:\n                                _context5.prev = 0;\n                                _context5.next = 3;\n                                return doNormalMix({ from: acc[4] });\n\n                              case 3:\n                                assert.fail(\"Expected revert not received\");\n                                _context5.next = 9;\n                                break;\n\n                              case 6:\n                                _context5.prev = 6;\n                                _context5.t0 = _context5[\"catch\"](0);\n\n                                assert.equal(_context5.t0.reason, \"BreedingRelayer: female owner should be the initiator\");\n\n                              case 9:\n                              case \"end\":\n                                return _context5.stop();\n                            }\n                          }\n                        }, _callee5, undefined, [[0, 6]]);\n                      })));\n\n                      it(\"should revert if female horse has reached limit\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                          while (1) {\n                            switch (_context6.prev = _context6.next) {\n                              case 0:\n                                _context6.next = 2;\n                                return doNormalMix();\n\n                              case 2:\n                                _context6.prev = 2;\n                                _context6.next = 5;\n                                return doNormalMix();\n\n                              case 5:\n                                assert.fail(\"Expected revert not received\");\n                                _context6.next = 11;\n                                break;\n\n                              case 8:\n                                _context6.prev = 8;\n                                _context6.t0 = _context6[\"catch\"](2);\n\n                                assert.equal(_context6.t0.reason, \"BreedingRelayer: female breeding limit reached\");\n\n                              case 11:\n                              case \"end\":\n                                return _context6.stop();\n                            }\n                          }\n                        }, _callee6, undefined, [[2, 8]]);\n                      })));\n\n                    case 2:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, _callee7, undefined);\n            })));\n\n          case 3:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, undefined);\n  })));\n\n  var doNormalMix = function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { from: owner };\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return breedingRelayer.relayMix(2, 1, DEFAULT_COLOR, DEFAULT_AMOUNT, opts);\n\n            case 2:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, undefined);\n    }));\n\n    return function doNormalMix() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "BreedingRelayerTest.js"
      ],
      "names": [
        "BreedingRelayer",
        "artifacts",
        "require",
        "Core",
        "HorseData",
        "Breeding",
        "BreedingProxy",
        "BreedingProxyAdmin",
        "StudService",
        "BreedTypes",
        "ERC20Test",
        "contract",
        "acc",
        "DEFAULT_COLOR",
        "web3",
        "utils",
        "toHex",
        "DEFAULT_AMOUNT",
        "toWei",
        "MAX_WETH",
        "breedingRelayer",
        "core",
        "breedTypes",
        "breedingLogic",
        "breedingProxy",
        "breedingProxyAdmin",
        "breeding",
        "studService",
        "horseData",
        "erc20",
        "owner",
        "poolAddress",
        "beforeEach",
        "new",
        "address",
        "at",
        "grantRole",
        "initialize",
        "mintCustomHorse",
        "putInStud",
        "transfer",
        "approve",
        "from",
        "describe",
        "it",
        "doNormalMix",
        "getBreedingRecord",
        "maleRecord",
        "assert",
        "isTrue",
        "equal",
        "toNumber",
        "femaleRecord",
        "resetDays",
        "getHorseData",
        "console",
        "log",
        "fail",
        "reason",
        "opts",
        "relayMix"
      ],
      "mappings": "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",
      "file": "BreedingRelayerTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment",
      "sourcesContent": [
        "const BreedingRelayer = artifacts.require(\"BreedingRelayer\");\nconst Core = artifacts.require(\"Core\");\nconst HorseData = artifacts.require(\"HorseData\");\nconst Breeding = artifacts.require(\"Breeding\");\nconst BreedingProxy = artifacts.require(\"BreedingProxy\");\nconst BreedingProxyAdmin = artifacts.require(\"ZedProxyAdmin\");\nconst StudService = artifacts.require(\"StudServiceV5\");\nconst BreedTypes = artifacts.require(\"BreedTypes\");\nconst ERC20Test = artifacts.require(\"ERC20Test\");\n\nimport { increaseTimeBySeconds, mineBlock } from \"../../utils\";\n\ncontract(\"BreedingRelayer\", (acc) => {\n  const DEFAULT_COLOR = web3.utils.toHex(\"Midnight Black\"),\n    DEFAULT_AMOUNT = web3.utils.toWei(\"0.2\", \"ether\"),\n    MAX_WETH = web3.utils.toWei(\"1000\", \"ether\");\n\n  let breedingRelayer,\n    core,\n    breedTypes,\n    breedingLogic,\n    breedingProxy,\n    breedingProxyAdmin,\n    breeding,\n    studService,\n    horseData,\n    erc20;\n\n  let owner = acc[0],\n    poolAddress = acc[1];\n\n  beforeEach(\"deploy instances\", async () => {\n    horseData = await HorseData.new();\n    core = await Core.new(horseData.address);\n\n    breedTypes = await BreedTypes.new();\n\n    studService = await StudService.new(\n      core.address,\n      horseData.address,\n      breedTypes.address\n    );\n\n    erc20 = await ERC20Test.new(web3.utils.toWei(\"100\", \"ether\"));\n\n    // Deploys Breeding Logic instance\n    breedingLogic = await Breeding.new();\n\n    // Deploys Breeding Admin to be used as admin of BreedingProxy\n    breedingProxyAdmin = await BreedingProxyAdmin.new();\n\n    // Deploys proxy instance\n    breedingProxy = await BreedingProxy.new(\n      breedingLogic.address,\n      breedingProxyAdmin.address\n    );\n\n    breeding = await Breeding.at(breedingProxy.address);\n\n    // Relayer\n    breedingRelayer = await BreedingRelayer.new(core.address, breeding.address);\n  });\n\n  beforeEach(\"setup initial state of instances\", async () => {\n    await breedTypes.grantRole(web3.utils.toHex(\"breed_types_owners\"), owner);\n\n    await breeding.initialize(\n      core.address,\n      studService.address,\n      breedTypes.address,\n      erc20.address,\n      poolAddress,\n      acc[4]\n    );\n\n    await breedTypes.grantRole(\n      web3.utils.toHex(\"breed_types_contracts\"),\n      breeding.address\n    );\n\n    await core.grantRole(web3.utils.toHex(\"core_contracts\"), owner);\n\n    // Core need to grant CORE_CONTRACTS_ROLE and CORE_OWNERS_ROLE for Breeding to able to invoke method Core.mintOffspring\n    await core.grantRole(web3.utils.toHex(\"core_contracts\"), breeding.address);\n    await core.grantRole(web3.utils.toHex(\"core_owners\"), breeding.address);\n\n    // We cannot interact with ID 0\n    await core.mintCustomHorse(\n      owner,\n      4,\n      web3.utils.toHex(\"Male\"),\n      web3.utils.toHex(\"FirstName\"),\n      web3.utils.toHex(\"Black\")\n    );\n\n    // 1\n    await core.mintCustomHorse(\n      owner,\n      4,\n      web3.utils.toHex(\"Female\"),\n      web3.utils.toHex(\"Truc\"),\n      web3.utils.toHex(\"violet\")\n    );\n\n    // 2\n    await core.mintCustomHorse(\n      owner,\n      4,\n      web3.utils.toHex(\"Male\"),\n      web3.utils.toHex(\"Trung\"),\n      web3.utils.toHex(\"blue\")\n    );\n\n    await studService.grantRole(web3.utils.toHex(\"stud_owners\"), owner);\n    await studService.putInStud(2, DEFAULT_AMOUNT, 86400);\n\n    await erc20.transfer(acc[2], DEFAULT_AMOUNT);\n    await erc20.transfer(acc[5], DEFAULT_AMOUNT);\n    await erc20.approve(breeding.address, MAX_WETH, {\n      from: acc[2],\n    });\n    await erc20.approve(breeding.address, MAX_WETH, {\n      from: acc[5],\n    });\n    await erc20.approve(breeding.address, MAX_WETH);\n\n    // Female ID 1 and Male ID 2\n  });\n\n  describe(\"relayMix\", async () => {\n    it(\"should record breed data if it is not saved\", async () => {\n      await doNormalMix();\n\n      let maleRecord = await breedingRelayer.getBreedingRecord(2);\n\n      assert.isTrue(maleRecord[0]);\n      // Male limit is 3\n      assert.equal(maleRecord[1].toNumber(), 2);\n\n      let femaleRecord = await breedingRelayer.getBreedingRecord(1);\n\n      assert.isTrue(femaleRecord[0]);\n      // Female limit is 1\n      assert.equal(femaleRecord[1].toNumber(), 0);\n    });\n\n    it(\"should use correct reset date if horse hasn't been used in months\", async () => {\n      let resetDays = await breedingRelayer.resetDays();\n      // 4 months\n      await increaseTimeBySeconds(10713600);\n      await mineBlock();\n\n      await doNormalMix();\n\n      let maleRecord = await breedingRelayer.getBreedingRecord(2);\n\n      // Horse next breeding reset should be in 5 months (31 days * 5)\n      let horseData = await core.getHorseData(2);\n\n      console.log(\n        maleRecord[2].toNumber(),\n        horseData[2].toNumber() + resetDays.toNumber() * 5\n      );\n    });\n\n    describe(\"reverts\", async () => {\n      it(\"should revert not the owner of the female sends the tx\", async () => {\n        try {\n          await doNormalMix({ from: acc[4] });\n          assert.fail(\"Expected revert not received\");\n        } catch (e) {\n          assert.equal(\n            e.reason,\n            \"BreedingRelayer: female owner should be the initiator\"\n          );\n        }\n      });\n\n      it(\"should revert if female horse has reached limit\", async () => {\n        await doNormalMix();\n\n        try {\n          await doNormalMix();\n          assert.fail(\"Expected revert not received\");\n        } catch (e) {\n          assert.equal(\n            e.reason,\n            \"BreedingRelayer: female breeding limit reached\"\n          );\n        }\n      });\n    });\n  });\n\n  const doNormalMix = async (opts = { from: owner }) => {\n    await breedingRelayer.relayMix(2, 1, DEFAULT_COLOR, DEFAULT_AMOUNT, opts);\n  };\n});\n"
      ]
    },
    "mtime": 1625283018062
  },
  "{\"filename\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/breeding/BreedingLimitTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/breeding\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../../../utils",
            "imported": [
              "funcFromABI",
              "signTxData",
              "getTypedData",
              "getRsvFromSig",
              "metaTxsAccounts",
              "increaseTimeBySeconds",
              "mineBlock"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "funcFromABI",
                "local": "funcFromABI"
              },
              {
                "kind": "named",
                "imported": "signTxData",
                "local": "signTxData"
              },
              {
                "kind": "named",
                "imported": "getTypedData",
                "local": "getTypedData"
              },
              {
                "kind": "named",
                "imported": "getRsvFromSig",
                "local": "getRsvFromSig"
              },
              {
                "kind": "named",
                "imported": "metaTxsAccounts",
                "local": "metaTxsAccounts"
              },
              {
                "kind": "named",
                "imported": "increaseTimeBySeconds",
                "local": "increaseTimeBySeconds"
              },
              {
                "kind": "named",
                "imported": "mineBlock",
                "local": "mineBlock"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/breeding/BreedingLimitTest.js",
      "filenameRelative": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/breeding/BreedingLimitTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "BreedingLimitTest.js",
      "sourceFileName": "BreedingLimitTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/breeding",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/breeding",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "BreedingLimitTest"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nvar _utils = require(\"../../../utils\");\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar Breeding = artifacts.require(\"Breeding\");\nvar BreedingLimit = artifacts.require(\"BreedingLimit\");\nvar BreedingProxy = artifacts.require(\"BreedingProxy\");\nvar ProxyAdmin = artifacts.require(\"ZedProxyAdmin\");\nvar BreedTypes = artifacts.require(\"BreedTypes\");\nvar Core = artifacts.require(\"Core\");\nvar ERC20Test = artifacts.require(\"ERC20Test\");\nvar HorseData = artifacts.require(\"HorseData\");\nvar StudService = artifacts.require(\"StudServiceV5\");\nvar ganache = require(\"ganache-core\");\n\ncontract(\"BreedingLimit\", function (acc) {\n  var DEFAULT_COLOR = web3.utils.toHex(\"Midnight Black\"),\n      DEFAULT_AMOUNT = web3.utils.toWei(\"0.2\", \"ether\"),\n      MAX_WETH = web3.utils.toWei(\"1000\", \"ether\");\n\n  var breedingLimit = void 0,\n      breedingLimitLogic = void 0,\n      breedingLimitProxy = void 0,\n      breeding = void 0,\n      breedingLogic = void 0,\n      breedingProxy = void 0,\n      proxyAdmin = void 0,\n      core = void 0,\n      breedTypes = void 0,\n      studService = void 0,\n      horseData = void 0,\n      erc20 = void 0,\n      chainId = void 0;\n\n  var owner = acc[0],\n      poolAddress = acc[1];\n\n  beforeEach(\"deploy instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return HorseData.new();\n\n          case 2:\n            horseData = _context.sent;\n            _context.next = 5;\n            return Core.new(horseData.address);\n\n          case 5:\n            core = _context.sent;\n            _context.next = 8;\n            return web3.eth.net.getId();\n\n          case 8:\n            chainId = _context.sent;\n            _context.next = 11;\n            return BreedTypes.new();\n\n          case 11:\n            breedTypes = _context.sent;\n            _context.next = 14;\n            return StudService.new(core.address, horseData.address, breedTypes.address);\n\n          case 14:\n            studService = _context.sent;\n            _context.next = 17;\n            return ERC20Test.new(web3.utils.toWei(\"100\", \"ether\"));\n\n          case 17:\n            erc20 = _context.sent;\n            _context.next = 20;\n            return Breeding.new();\n\n          case 20:\n            breedingLogic = _context.sent;\n            _context.next = 23;\n            return ProxyAdmin.new();\n\n          case 23:\n            proxyAdmin = _context.sent;\n            _context.next = 26;\n            return BreedingProxy.new(breedingLogic.address, proxyAdmin.address);\n\n          case 26:\n            breedingProxy = _context.sent;\n            _context.next = 29;\n            return Breeding.at(breedingProxy.address);\n\n          case 29:\n            breeding = _context.sent;\n            _context.next = 32;\n            return BreedingLimit.new();\n\n          case 32:\n            breedingLimitLogic = _context.sent;\n            _context.next = 35;\n            return BreedingProxy.new(breedingLimitLogic.address, proxyAdmin.address);\n\n          case 35:\n            breedingLimitProxy = _context.sent;\n            _context.next = 38;\n            return BreedingLimit.at(breedingLimitProxy.address);\n\n          case 38:\n            breedingLimit = _context.sent;\n\n          case 39:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  beforeEach(\"setup initial state of instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return breedTypes.grantRole(web3.utils.toHex(\"breed_types_owners\"), owner);\n\n          case 2:\n            _context2.next = 4;\n            return breedingLimit.initialize(core.address, breeding.address);\n\n          case 4:\n            _context2.next = 6;\n            return breedingLimit.grantRole(web3.utils.toHex(\"breeding_limit_owners\"), owner);\n\n          case 6:\n            _context2.next = 8;\n            return breedingLimit.setDomainSeparator(\"ZED BreedingLimit\", \"1\", chainId);\n\n          case 8:\n            _context2.next = 10;\n            return breeding.initialize(core.address, studService.address, breedTypes.address, erc20.address, poolAddress, acc[4]);\n\n          case 10:\n            _context2.next = 12;\n            return breeding.grantRole(web3.utils.toHex(\"breeding_owners\"), breedingLimit.address);\n\n          case 12:\n            _context2.next = 14;\n            return breedTypes.grantRole(web3.utils.toHex(\"breed_types_contracts\"), breeding.address);\n\n          case 14:\n            _context2.next = 16;\n            return core.grantRole(web3.utils.toHex(\"core_contracts\"), owner);\n\n          case 16:\n            _context2.next = 18;\n            return core.grantRole(web3.utils.toHex(\"core_contracts\"), breeding.address);\n\n          case 18:\n            _context2.next = 20;\n            return core.grantRole(web3.utils.toHex(\"core_owners\"), breeding.address);\n\n          case 20:\n            _context2.next = 22;\n            return core.mintCustomHorse(owner, 4, web3.utils.toHex(\"Male\"), web3.utils.toHex(\"FirstName\"), web3.utils.toHex(\"Black\"));\n\n          case 22:\n            _context2.next = 24;\n            return core.mintCustomHorse(owner, 4, web3.utils.toHex(\"Female\"), web3.utils.toHex(\"Truc\"), web3.utils.toHex(\"violet\"));\n\n          case 24:\n            _context2.next = 26;\n            return core.mintCustomHorse(owner, 4, web3.utils.toHex(\"Male\"), web3.utils.toHex(\"Trung\"), web3.utils.toHex(\"blue\"));\n\n          case 26:\n            _context2.next = 28;\n            return studService.grantRole(web3.utils.toHex(\"stud_owners\"), owner);\n\n          case 28:\n            _context2.next = 30;\n            return studService.putInStud(2, DEFAULT_AMOUNT, 86400);\n\n          case 30:\n            _context2.next = 32;\n            return erc20.transfer(acc[2], DEFAULT_AMOUNT);\n\n          case 32:\n            _context2.next = 34;\n            return erc20.transfer(acc[5], DEFAULT_AMOUNT);\n\n          case 34:\n            _context2.next = 36;\n            return erc20.approve(breeding.address, MAX_WETH, {\n              from: acc[2]\n            });\n\n          case 36:\n            _context2.next = 38;\n            return erc20.approve(breeding.address, MAX_WETH, {\n              from: acc[5]\n            });\n\n          case 38:\n            _context2.next = 40;\n            return erc20.approve(breeding.address, MAX_WETH);\n\n          case 40:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })));\n\n  describe(\"relayMix\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            it(\"should record breed data if it is not saved\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n              var maleRecord, femaleRecord;\n              return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return doNormalMix();\n\n                    case 2:\n                      _context3.next = 4;\n                      return breedingLimit.getBreedingRecord(2);\n\n                    case 4:\n                      maleRecord = _context3.sent;\n\n\n                      assert.isTrue(maleRecord[0]);\n                      // Male limit is 3\n                      assert.equal(maleRecord[1].toNumber(), 2);\n\n                      _context3.next = 9;\n                      return breedingLimit.getBreedingRecord(1);\n\n                    case 9:\n                      femaleRecord = _context3.sent;\n\n\n                      assert.isTrue(femaleRecord[0]);\n                      // Female limit is 1\n                      assert.equal(femaleRecord[1].toNumber(), 0);\n\n                    case 12:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3, undefined);\n            })));\n\n            it(\"should use correct reset date if horse hasn't been used in months\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n              var resetDays, expectedDifference, maleRecord, horseData, datesDifference, femaleRecord;\n              return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return breedingLimit.breedingCycle();\n\n                    case 2:\n                      resetDays = _context4.sent;\n                      expectedDifference = resetDays.toNumber() * 5;\n                      _context4.next = 6;\n                      return (0, _utils.increaseTimeBySeconds)(resetDays.toNumber() * 4);\n\n                    case 6:\n                      _context4.next = 8;\n                      return (0, _utils.mineBlock)();\n\n                    case 8:\n                      _context4.next = 10;\n                      return doNormalMix();\n\n                    case 10:\n                      _context4.next = 12;\n                      return breedingLimit.getBreedingRecord(2);\n\n                    case 12:\n                      maleRecord = _context4.sent;\n                      _context4.next = 15;\n                      return core.getHorseData(2);\n\n                    case 15:\n                      horseData = _context4.sent;\n                      datesDifference = maleRecord[2].toNumber() - horseData[2].toNumber();\n\n\n                      assert.equal(datesDifference, expectedDifference);\n\n                      _context4.next = 20;\n                      return breedingLimit.getBreedingRecord(1);\n\n                    case 20:\n                      femaleRecord = _context4.sent;\n                      _context4.next = 23;\n                      return core.getHorseData(1);\n\n                    case 23:\n                      horseData = _context4.sent;\n\n                      datesDifference = femaleRecord[2].toNumber() - horseData[2].toNumber();\n\n                      assert.equal(datesDifference, expectedDifference);\n\n                    case 26:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4, undefined);\n            })));\n\n            it(\"should update breeding counter and reset of horses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n              var resetDays, maleRecord, femaleRecord;\n              return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.next = 2;\n                      return breedingLimit.breedingCycle();\n\n                    case 2:\n                      resetDays = _context5.sent;\n                      _context5.next = 5;\n                      return doNormalMix();\n\n                    case 5:\n                      _context5.next = 7;\n                      return (0, _utils.increaseTimeBySeconds)(resetDays.toNumber() * 2);\n\n                    case 7:\n                      _context5.next = 9;\n                      return (0, _utils.mineBlock)();\n\n                    case 9:\n                      _context5.next = 11;\n                      return doNormalMix();\n\n                    case 11:\n                      _context5.next = 13;\n                      return breedingLimit.getBreedingRecord(2);\n\n                    case 13:\n                      maleRecord = _context5.sent;\n\n                      assert.equal(maleRecord[1].toNumber(), 2);\n\n                      _context5.next = 17;\n                      return breedingLimit.getBreedingRecord(1);\n\n                    case 17:\n                      femaleRecord = _context5.sent;\n\n                      assert.equal(femaleRecord[1], 0);\n\n                    case 19:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, _callee5, undefined);\n            })));\n\n            describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n              return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                while (1) {\n                  switch (_context9.prev = _context9.next) {\n                    case 0:\n                      it(\"should revert not the owner of the female sends the tx\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                          while (1) {\n                            switch (_context6.prev = _context6.next) {\n                              case 0:\n                                _context6.prev = 0;\n                                _context6.next = 3;\n                                return doNormalMix({ from: acc[4] });\n\n                              case 3:\n                                assert.fail(\"Expected revert not received\");\n                                _context6.next = 9;\n                                break;\n\n                              case 6:\n                                _context6.prev = 6;\n                                _context6.t0 = _context6[\"catch\"](0);\n\n                                assert.equal(_context6.t0.reason, \"BreedingLimit: female owner should be the initiator\");\n\n                              case 9:\n                              case \"end\":\n                                return _context6.stop();\n                            }\n                          }\n                        }, _callee6, undefined, [[0, 6]]);\n                      })));\n\n                      it(\"should revert if female horse has reached limit\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n                        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                          while (1) {\n                            switch (_context7.prev = _context7.next) {\n                              case 0:\n                                _context7.next = 2;\n                                return doNormalMix();\n\n                              case 2:\n                                _context7.prev = 2;\n                                _context7.next = 5;\n                                return doNormalMix();\n\n                              case 5:\n                                assert.fail(\"Expected revert not received\");\n                                _context7.next = 11;\n                                break;\n\n                              case 8:\n                                _context7.prev = 8;\n                                _context7.t0 = _context7[\"catch\"](2);\n\n                                assert.equal(_context7.t0.reason, \"BreedingLimit: female breeding limit reached\");\n\n                              case 11:\n                              case \"end\":\n                                return _context7.stop();\n                            }\n                          }\n                        }, _callee7, undefined, [[2, 8]]);\n                      })));\n\n                      it(\"should revert if horse has 0 breeds left and shouldn't be updated yet\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                          while (1) {\n                            switch (_context8.prev = _context8.next) {\n                              case 0:\n                                _context8.next = 2;\n                                return doNormalMix();\n\n                              case 2:\n                                _context8.prev = 2;\n                                _context8.next = 5;\n                                return doNormalMix();\n\n                              case 5:\n                                assert.fail(\"Expected revert not received\");\n                                _context8.next = 11;\n                                break;\n\n                              case 8:\n                                _context8.prev = 8;\n                                _context8.t0 = _context8[\"catch\"](2);\n\n                                assert.equal(_context8.t0.reason, \"BreedingLimit: female breeding limit reached\");\n\n                              case 11:\n                              case \"end\":\n                                return _context8.stop();\n                            }\n                          }\n                        }, _callee8, undefined, [[2, 8]]);\n                      })));\n\n                    case 3:\n                    case \"end\":\n                      return _context9.stop();\n                  }\n                }\n              }, _callee9, undefined);\n            })));\n\n          case 4:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, undefined);\n  })));\n\n  describe(\"recordHorse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            it(\"should record data for a horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n              var tx, record;\n              return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                while (1) {\n                  switch (_context11.prev = _context11.next) {\n                    case 0:\n                      _context11.next = 2;\n                      return breedingLimit.recordHorse(2);\n\n                    case 2:\n                      tx = _context11.sent;\n                      _context11.next = 5;\n                      return breedingLimit.getBreedingRecord(2);\n\n                    case 5:\n                      record = _context11.sent;\n\n\n                      assert.isTrue(record[0]);\n                      assert.equal(record[1].toNumber(), 3);\n                      assert.equal(tx.receipt.logs[0].event, \"HorseRecordInserted\");\n\n                      _context11.next = 11;\n                      return breedingLimit.recordHorse(1);\n\n                    case 11:\n                      tx = _context11.sent;\n                      _context11.next = 14;\n                      return breedingLimit.getBreedingRecord(1);\n\n                    case 14:\n                      record = _context11.sent;\n\n\n                      assert.isTrue(record[0]);\n                      assert.equal(record[1].toNumber(), 1);\n                      assert.equal(tx.receipt.logs[0].event, \"HorseRecordInserted\");\n\n                    case 18:\n                    case \"end\":\n                      return _context11.stop();\n                  }\n                }\n              }, _callee11, undefined);\n            })));\n\n            describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n              return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                while (1) {\n                  switch (_context13.prev = _context13.next) {\n                    case 0:\n                      it(\"should revert if horse is already recorded\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n                        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                          while (1) {\n                            switch (_context12.prev = _context12.next) {\n                              case 0:\n                                _context12.next = 2;\n                                return doNormalMix();\n\n                              case 2:\n                                _context12.prev = 2;\n                                _context12.next = 5;\n                                return breedingLimit.recordHorse(2);\n\n                              case 5:\n                                assert.fail(\"Expected revert not received\");\n                                _context12.next = 11;\n                                break;\n\n                              case 8:\n                                _context12.prev = 8;\n                                _context12.t0 = _context12[\"catch\"](2);\n\n                                assert.equal(_context12.t0.reason, \"BreedingLimit: horse already recorded\");\n\n                              case 11:\n                              case \"end\":\n                                return _context12.stop();\n                            }\n                          }\n                        }, _callee12, undefined, [[2, 8]]);\n                      })));\n\n                    case 1:\n                    case \"end\":\n                      return _context13.stop();\n                  }\n                }\n              }, _callee13, undefined);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, undefined);\n  })));\n\n  describe(\"setBreedingCycle\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n    return regeneratorRuntime.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            it(\"should update the breeding cycle\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n              var tx, newCycle;\n              return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                while (1) {\n                  switch (_context15.prev = _context15.next) {\n                    case 0:\n                      _context15.next = 2;\n                      return breedingLimit.setBreedingCycle(1);\n\n                    case 2:\n                      tx = _context15.sent;\n                      _context15.next = 5;\n                      return breedingLimit.breedingCycle();\n\n                    case 5:\n                      newCycle = _context15.sent;\n\n\n                      assert.equal(newCycle.toNumber(), 1);\n                      assert.equal(tx.receipt.logs[0].event, \"BreedingCycleUpdated\");\n\n                    case 8:\n                    case \"end\":\n                      return _context15.stop();\n                  }\n                }\n              }, _callee15, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16, undefined);\n  })));\n\n  describe(\"updateBreedingLimits\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n    return regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            it(\"should update the breeding limits\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n              var tx, maleLimit, femaleLimit;\n              return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                while (1) {\n                  switch (_context17.prev = _context17.next) {\n                    case 0:\n                      _context17.next = 2;\n                      return breedingLimit.updateBreedingLimits(1, 3);\n\n                    case 2:\n                      tx = _context17.sent;\n                      _context17.next = 5;\n                      return breedingLimit.maleLimit();\n\n                    case 5:\n                      maleLimit = _context17.sent;\n                      _context17.next = 8;\n                      return breedingLimit.femaleLimit();\n\n                    case 8:\n                      femaleLimit = _context17.sent;\n\n\n                      assert.equal(maleLimit.toNumber(), 1);\n                      assert.equal(femaleLimit.toNumber(), 3);\n                      assert.equal(tx.receipt.logs[0].event, \"HorsesLimitsUpdated\");\n\n                    case 12:\n                    case \"end\":\n                      return _context17.stop();\n                  }\n                }\n              }, _callee17, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18, undefined);\n  })));\n\n  describe(\"updateHorseRecord\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n    return regeneratorRuntime.wrap(function _callee20$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            it(\"should update horse record with given args\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n              var tx, record;\n              return regeneratorRuntime.wrap(function _callee19$(_context19) {\n                while (1) {\n                  switch (_context19.prev = _context19.next) {\n                    case 0:\n                      _context19.next = 2;\n                      return breedingLimit.updateHorseRecord(1, 10, 123123);\n\n                    case 2:\n                      tx = _context19.sent;\n                      _context19.next = 5;\n                      return breedingLimit.getBreedingRecord(1);\n\n                    case 5:\n                      record = _context19.sent;\n\n\n                      assert.isTrue(record[0]);\n                      assert.equal(record[1].toNumber(), 10);\n                      assert.equal(record[2].toNumber(), 123123);\n\n                    case 9:\n                    case \"end\":\n                      return _context19.stop();\n                  }\n                }\n              }, _callee19, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _callee20, undefined);\n  })));\n\n  describe(\"meta-transactions\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n    return regeneratorRuntime.wrap(function _callee23$(_context23) {\n      while (1) {\n        switch (_context23.prev = _context23.next) {\n          case 0:\n            beforeEach(\"set web3 provider\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n              return regeneratorRuntime.wrap(function _callee21$(_context21) {\n                while (1) {\n                  switch (_context21.prev = _context21.next) {\n                    case 0:\n                      web3.setProvider(ganache.provider({ accounts: _utils.metaTxsAccounts }));\n\n                    case 1:\n                    case \"end\":\n                      return _context21.stop();\n                  }\n                }\n              }, _callee21, undefined);\n            })));\n\n            it(\"should breed and save horse's record\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n              var functionSignature, typedData, signedData, _ref24, r, s, v, maleRecord, femaleRecord;\n\n              return regeneratorRuntime.wrap(function _callee22$(_context22) {\n                while (1) {\n                  switch (_context22.prev = _context22.next) {\n                    case 0:\n                      _context22.t0 = web3.eth.abi;\n                      _context22.next = 3;\n                      return (0, _utils.funcFromABI)(breedingLimit.abi, \"relayMix\");\n\n                    case 3:\n                      _context22.t1 = _context22.sent;\n                      _context22.t2 = [2, 1, DEFAULT_COLOR, DEFAULT_AMOUNT];\n                      functionSignature = _context22.t0.encodeFunctionCall.call(_context22.t0, _context22.t1, _context22.t2);\n                      _context22.t3 = _utils.getTypedData;\n                      _context22.t4 = chainId;\n                      _context22.t5 = breedingLimit.address;\n                      _context22.next = 11;\n                      return breedingLimit.getNonce(owner);\n\n                    case 11:\n                      _context22.t6 = _context22.sent;\n                      _context22.t7 = owner;\n                      _context22.t8 = functionSignature;\n                      _context22.t9 = {\n                        name: \"ZED BreedingLimit\",\n                        version: \"1\",\n                        chainId: _context22.t4,\n                        verifyingContract: _context22.t5,\n                        nonce: _context22.t6,\n                        from: _context22.t7,\n                        functionSignature: _context22.t8\n                      };\n                      _context22.next = 17;\n                      return (0, _context22.t3)(_context22.t9);\n\n                    case 17:\n                      typedData = _context22.sent;\n                      _context22.next = 20;\n                      return (0, _utils.signTxData)(owner, typedData);\n\n                    case 20:\n                      signedData = _context22.sent;\n                      _context22.next = 23;\n                      return (0, _utils.getRsvFromSig)(signedData);\n\n                    case 23:\n                      _ref24 = _context22.sent;\n                      r = _ref24.r;\n                      s = _ref24.s;\n                      v = _ref24.v;\n                      _context22.next = 29;\n                      return breedingLimit.executeMetaTransaction(owner, functionSignature, r, s, v);\n\n                    case 29:\n                      _context22.next = 31;\n                      return breedingLimit.getBreedingRecord(2);\n\n                    case 31:\n                      maleRecord = _context22.sent;\n\n\n                      assert.isTrue(maleRecord[0]);\n                      // Male limit is 3\n                      assert.equal(maleRecord[1].toNumber(), 2);\n\n                      _context22.next = 36;\n                      return breedingLimit.getBreedingRecord(1);\n\n                    case 36:\n                      femaleRecord = _context22.sent;\n\n\n                      assert.isTrue(femaleRecord[0]);\n                      // Female limit is 1\n                      assert.equal(femaleRecord[1].toNumber(), 0);\n\n                    case 39:\n                    case \"end\":\n                      return _context22.stop();\n                  }\n                }\n              }, _callee22, undefined);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context23.stop();\n        }\n      }\n    }, _callee23, undefined);\n  })));\n\n  var doNormalMix = function () {\n    var _ref25 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { from: owner };\n      return regeneratorRuntime.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              _context24.next = 2;\n              return breedingLimit.relayMix(2, 1, DEFAULT_COLOR, DEFAULT_AMOUNT, opts);\n\n            case 2:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24, undefined);\n    }));\n\n    return function doNormalMix() {\n      return _ref25.apply(this, arguments);\n    };\n  }();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "BreedingLimitTest.js"
      ],
      "names": [
        "Breeding",
        "artifacts",
        "require",
        "BreedingLimit",
        "BreedingProxy",
        "ProxyAdmin",
        "BreedTypes",
        "Core",
        "ERC20Test",
        "HorseData",
        "StudService",
        "ganache",
        "contract",
        "acc",
        "DEFAULT_COLOR",
        "web3",
        "utils",
        "toHex",
        "DEFAULT_AMOUNT",
        "toWei",
        "MAX_WETH",
        "breedingLimit",
        "breedingLimitLogic",
        "breedingLimitProxy",
        "breeding",
        "breedingLogic",
        "breedingProxy",
        "proxyAdmin",
        "core",
        "breedTypes",
        "studService",
        "horseData",
        "erc20",
        "chainId",
        "owner",
        "poolAddress",
        "beforeEach",
        "new",
        "address",
        "eth",
        "net",
        "getId",
        "at",
        "grantRole",
        "initialize",
        "setDomainSeparator",
        "mintCustomHorse",
        "putInStud",
        "transfer",
        "approve",
        "from",
        "describe",
        "it",
        "doNormalMix",
        "getBreedingRecord",
        "maleRecord",
        "assert",
        "isTrue",
        "equal",
        "toNumber",
        "femaleRecord",
        "breedingCycle",
        "resetDays",
        "expectedDifference",
        "getHorseData",
        "datesDifference",
        "fail",
        "reason",
        "recordHorse",
        "tx",
        "record",
        "receipt",
        "logs",
        "event",
        "setBreedingCycle",
        "newCycle",
        "updateBreedingLimits",
        "maleLimit",
        "femaleLimit",
        "updateHorseRecord",
        "setProvider",
        "provider",
        "accounts",
        "metaTxsAccounts",
        "abi",
        "functionSignature",
        "encodeFunctionCall",
        "getTypedData",
        "getNonce",
        "name",
        "version",
        "verifyingContract",
        "nonce",
        "typedData",
        "signedData",
        "r",
        "s",
        "v",
        "executeMetaTransaction",
        "opts",
        "relayMix"
      ],
      "mappings": "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",
      "file": "BreedingLimitTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/normal_deployment/breeding",
      "sourcesContent": [
        "const Breeding = artifacts.require(\"Breeding\");\nconst BreedingLimit = artifacts.require(\"BreedingLimit\");\nconst BreedingProxy = artifacts.require(\"BreedingProxy\");\nconst ProxyAdmin = artifacts.require(\"ZedProxyAdmin\");\nconst BreedTypes = artifacts.require(\"BreedTypes\");\nconst Core = artifacts.require(\"Core\");\nconst ERC20Test = artifacts.require(\"ERC20Test\");\nconst HorseData = artifacts.require(\"HorseData\");\nconst StudService = artifacts.require(\"StudServiceV5\");\nconst ganache = require(\"ganache-core\");\n\nimport {\n  funcFromABI,\n  signTxData,\n  getTypedData,\n  getRsvFromSig,\n  metaTxsAccounts,\n  increaseTimeBySeconds,\n  mineBlock,\n} from \"../../../utils\";\n\ncontract(\"BreedingLimit\", (acc) => {\n  const DEFAULT_COLOR = web3.utils.toHex(\"Midnight Black\"),\n    DEFAULT_AMOUNT = web3.utils.toWei(\"0.2\", \"ether\"),\n    MAX_WETH = web3.utils.toWei(\"1000\", \"ether\");\n\n  let breedingLimit,\n    breedingLimitLogic,\n    breedingLimitProxy,\n    breeding,\n    breedingLogic,\n    breedingProxy,\n    proxyAdmin,\n    core,\n    breedTypes,\n    studService,\n    horseData,\n    erc20,\n    chainId;\n\n  let owner = acc[0],\n    poolAddress = acc[1];\n\n  beforeEach(\"deploy instances\", async () => {\n    horseData = await HorseData.new();\n    core = await Core.new(horseData.address);\n    chainId = await web3.eth.net.getId();\n\n    breedTypes = await BreedTypes.new();\n\n    studService = await StudService.new(\n      core.address,\n      horseData.address,\n      breedTypes.address\n    );\n\n    erc20 = await ERC20Test.new(web3.utils.toWei(\"100\", \"ether\"));\n\n    // Deploys Breeding Logic instance\n    breedingLogic = await Breeding.new();\n\n    // Deploys Breeding Admin to be used as admin of BreedingProxy and BreedingLimitProxy\n    proxyAdmin = await ProxyAdmin.new();\n\n    // Deploys proxy instance\n    breedingProxy = await BreedingProxy.new(\n      breedingLogic.address,\n      proxyAdmin.address\n    );\n\n    breeding = await Breeding.at(breedingProxy.address);\n\n    ///////\n\n    // Relayer\n    breedingLimitLogic = await BreedingLimit.new();\n\n    // Use the same BreedingProxy and ProxyAdmin as it can manage multiple proxies\n    breedingLimitProxy = await BreedingProxy.new(\n      breedingLimitLogic.address,\n      proxyAdmin.address\n    );\n\n    breedingLimit = await BreedingLimit.at(breedingLimitProxy.address);\n  });\n\n  beforeEach(\"setup initial state of instances\", async () => {\n    await breedTypes.grantRole(web3.utils.toHex(\"breed_types_owners\"), owner);\n\n    await breedingLimit.initialize(core.address, breeding.address);\n    await breedingLimit.grantRole(\n      web3.utils.toHex(\"breeding_limit_owners\"),\n      owner\n    );\n\n    await breedingLimit.setDomainSeparator(\"ZED BreedingLimit\", \"1\", chainId);\n\n    await breeding.initialize(\n      core.address,\n      studService.address,\n      breedTypes.address,\n      erc20.address,\n      poolAddress,\n      acc[4]\n    );\n\n    await breeding.grantRole(\n      web3.utils.toHex(\"breeding_owners\"),\n      breedingLimit.address\n    );\n\n    await breedTypes.grantRole(\n      web3.utils.toHex(\"breed_types_contracts\"),\n      breeding.address\n    );\n\n    await core.grantRole(web3.utils.toHex(\"core_contracts\"), owner);\n\n    // Core need to grant CORE_CONTRACTS_ROLE and CORE_OWNERS_ROLE for Breeding to able to invoke method Core.mintOffspring\n    await core.grantRole(web3.utils.toHex(\"core_contracts\"), breeding.address);\n    await core.grantRole(web3.utils.toHex(\"core_owners\"), breeding.address);\n\n    // We cannot interact with ID 0\n    await core.mintCustomHorse(\n      owner,\n      4,\n      web3.utils.toHex(\"Male\"),\n      web3.utils.toHex(\"FirstName\"),\n      web3.utils.toHex(\"Black\")\n    );\n\n    // ID 1\n    await core.mintCustomHorse(\n      owner,\n      4,\n      web3.utils.toHex(\"Female\"),\n      web3.utils.toHex(\"Truc\"),\n      web3.utils.toHex(\"violet\")\n    );\n\n    // ID 2\n    await core.mintCustomHorse(\n      owner,\n      4,\n      web3.utils.toHex(\"Male\"),\n      web3.utils.toHex(\"Trung\"),\n      web3.utils.toHex(\"blue\")\n    );\n\n    await studService.grantRole(web3.utils.toHex(\"stud_owners\"), owner);\n    await studService.putInStud(2, DEFAULT_AMOUNT, 86400);\n\n    await erc20.transfer(acc[2], DEFAULT_AMOUNT);\n    await erc20.transfer(acc[5], DEFAULT_AMOUNT);\n    await erc20.approve(breeding.address, MAX_WETH, {\n      from: acc[2],\n    });\n    await erc20.approve(breeding.address, MAX_WETH, {\n      from: acc[5],\n    });\n    await erc20.approve(breeding.address, MAX_WETH);\n  });\n\n  describe(\"relayMix\", async () => {\n    it(\"should record breed data if it is not saved\", async () => {\n      await doNormalMix();\n\n      let maleRecord = await breedingLimit.getBreedingRecord(2);\n\n      assert.isTrue(maleRecord[0]);\n      // Male limit is 3\n      assert.equal(maleRecord[1].toNumber(), 2);\n\n      let femaleRecord = await breedingLimit.getBreedingRecord(1);\n\n      assert.isTrue(femaleRecord[0]);\n      // Female limit is 1\n      assert.equal(femaleRecord[1].toNumber(), 0);\n    });\n\n    it(\"should use correct reset date if horse hasn't been used in months\", async () => {\n      let resetDays = await breedingLimit.breedingCycle();\n      let expectedDifference = resetDays.toNumber() * 5;\n\n      await increaseTimeBySeconds(resetDays.toNumber() * 4);\n      await mineBlock();\n      await doNormalMix();\n\n      let maleRecord = await breedingLimit.getBreedingRecord(2);\n      // Horse next breeding reset should be in ~4-5 months (`resetDays` * 4)\n      let horseData = await core.getHorseData(2);\n      let datesDifference = maleRecord[2].toNumber() - horseData[2].toNumber();\n\n      assert.equal(datesDifference, expectedDifference);\n\n      let femaleRecord = await breedingLimit.getBreedingRecord(1);\n      // Horse next breeding reset should be in ~4-5 months (`resetDays` * 4)\n      horseData = await core.getHorseData(1);\n      datesDifference = femaleRecord[2].toNumber() - horseData[2].toNumber();\n\n      assert.equal(datesDifference, expectedDifference);\n    });\n\n    it(\"should update breeding counter and reset of horses\", async () => {\n      let resetDays = await breedingLimit.breedingCycle();\n      await doNormalMix();\n      await increaseTimeBySeconds(resetDays.toNumber() * 2);\n      await mineBlock();\n\n      // If the reset wasn't working, this transaction wouldn't go through as one of the horses shouldn't have breeds left\n      await doNormalMix();\n\n      let maleRecord = await breedingLimit.getBreedingRecord(2);\n      assert.equal(maleRecord[1].toNumber(), 2);\n\n      let femaleRecord = await breedingLimit.getBreedingRecord(1);\n      assert.equal(femaleRecord[1], 0);\n    });\n\n    describe(\"reverts\", async () => {\n      it(\"should revert not the owner of the female sends the tx\", async () => {\n        try {\n          await doNormalMix({ from: acc[4] });\n          assert.fail(\"Expected revert not received\");\n        } catch (e) {\n          assert.equal(\n            e.reason,\n            \"BreedingLimit: female owner should be the initiator\"\n          );\n        }\n      });\n\n      it(\"should revert if female horse has reached limit\", async () => {\n        await doNormalMix();\n\n        try {\n          await doNormalMix();\n          assert.fail(\"Expected revert not received\");\n        } catch (e) {\n          assert.equal(\n            e.reason,\n            \"BreedingLimit: female breeding limit reached\"\n          );\n        }\n      });\n\n      it(\"should revert if horse has 0 breeds left and shouldn't be updated yet\", async () => {\n        await doNormalMix();\n\n        try {\n          await doNormalMix();\n          assert.fail(\"Expected revert not received\");\n        } catch (e) {\n          assert.equal(\n            e.reason,\n            \"BreedingLimit: female breeding limit reached\"\n          );\n        }\n      });\n    });\n  });\n\n  describe(\"recordHorse\", async () => {\n    it(\"should record data for a horse\", async () => {\n      let tx = await breedingLimit.recordHorse(2);\n      let record = await breedingLimit.getBreedingRecord(2);\n\n      assert.isTrue(record[0]);\n      assert.equal(record[1].toNumber(), 3);\n      assert.equal(tx.receipt.logs[0].event, \"HorseRecordInserted\");\n\n      tx = await breedingLimit.recordHorse(1);\n      record = await breedingLimit.getBreedingRecord(1);\n\n      assert.isTrue(record[0]);\n      assert.equal(record[1].toNumber(), 1);\n      assert.equal(tx.receipt.logs[0].event, \"HorseRecordInserted\");\n    });\n\n    describe(\"reverts\", async () => {\n      it(\"should revert if horse is already recorded\", async () => {\n        await doNormalMix();\n\n        try {\n          await breedingLimit.recordHorse(2);\n          assert.fail(\"Expected revert not received\");\n        } catch (e) {\n          assert.equal(e.reason, \"BreedingLimit: horse already recorded\");\n        }\n      });\n    });\n  });\n\n  describe(\"setBreedingCycle\", async () => {\n    it(\"should update the breeding cycle\", async () => {\n      let tx = await breedingLimit.setBreedingCycle(1);\n      let newCycle = await breedingLimit.breedingCycle();\n\n      assert.equal(newCycle.toNumber(), 1);\n      assert.equal(tx.receipt.logs[0].event, \"BreedingCycleUpdated\");\n    });\n  });\n\n  describe(\"updateBreedingLimits\", async () => {\n    it(\"should update the breeding limits\", async () => {\n      let tx = await breedingLimit.updateBreedingLimits(1, 3);\n      let maleLimit = await breedingLimit.maleLimit();\n      let femaleLimit = await breedingLimit.femaleLimit();\n\n      assert.equal(maleLimit.toNumber(), 1);\n      assert.equal(femaleLimit.toNumber(), 3);\n      assert.equal(tx.receipt.logs[0].event, \"HorsesLimitsUpdated\");\n    });\n  });\n\n  describe(\"updateHorseRecord\", async () => {\n    it(\"should update horse record with given args\", async () => {\n      let tx = await breedingLimit.updateHorseRecord(1, 10, 123123);\n      let record = await breedingLimit.getBreedingRecord(1);\n\n      assert.isTrue(record[0]);\n      assert.equal(record[1].toNumber(), 10);\n      assert.equal(record[2].toNumber(), 123123);\n    });\n  });\n\n  describe(\"meta-transactions\", async () => {\n    beforeEach(\"set web3 provider\", async () => {\n      web3.setProvider(ganache.provider({ accounts: metaTxsAccounts }));\n    });\n\n    it(\"should breed and save horse's record\", async () => {\n      let functionSignature = web3.eth.abi.encodeFunctionCall(\n        await funcFromABI(breedingLimit.abi, \"relayMix\"),\n        [2, 1, DEFAULT_COLOR, DEFAULT_AMOUNT]\n      );\n\n      let typedData = await getTypedData({\n        name: \"ZED BreedingLimit\",\n        version: \"1\",\n        chainId: chainId,\n        verifyingContract: breedingLimit.address,\n        nonce: await breedingLimit.getNonce(owner),\n        from: owner,\n        functionSignature: functionSignature,\n      });\n\n      let signedData = await signTxData(owner, typedData);\n\n      let { r, s, v } = await getRsvFromSig(signedData);\n\n      await breedingLimit.executeMetaTransaction(\n        owner,\n        functionSignature,\n        r,\n        s,\n        v\n      );\n\n      let maleRecord = await breedingLimit.getBreedingRecord(2);\n\n      assert.isTrue(maleRecord[0]);\n      // Male limit is 3\n      assert.equal(maleRecord[1].toNumber(), 2);\n\n      let femaleRecord = await breedingLimit.getBreedingRecord(1);\n\n      assert.isTrue(femaleRecord[0]);\n      // Female limit is 1\n      assert.equal(femaleRecord[1].toNumber(), 0);\n    });\n  });\n\n  const doNormalMix = async (opts = { from: owner }) => {\n    await breedingLimit.relayMix(2, 1, DEFAULT_COLOR, DEFAULT_AMOUNT, opts);\n  };\n});\n"
      ]
    },
    "mtime": 1626284865467
  },
  "{\"filename\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment/limits/BreedingLimitTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment/limits\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../../../utils",
            "imported": [
              "funcFromABI",
              "signTxData",
              "getTypedData",
              "getRsvFromSig",
              "metaTxsAccounts",
              "increaseTimeBySeconds",
              "mineBlock",
              "chainId"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "funcFromABI",
                "local": "funcFromABI"
              },
              {
                "kind": "named",
                "imported": "signTxData",
                "local": "signTxData"
              },
              {
                "kind": "named",
                "imported": "getTypedData",
                "local": "getTypedData"
              },
              {
                "kind": "named",
                "imported": "getRsvFromSig",
                "local": "getRsvFromSig"
              },
              {
                "kind": "named",
                "imported": "metaTxsAccounts",
                "local": "metaTxsAccounts"
              },
              {
                "kind": "named",
                "imported": "increaseTimeBySeconds",
                "local": "increaseTimeBySeconds"
              },
              {
                "kind": "named",
                "imported": "mineBlock",
                "local": "mineBlock"
              },
              {
                "kind": "named",
                "imported": "chainId",
                "local": "chainId"
              }
            ]
          },
          {
            "source": "chai",
            "imported": [
              "expect"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "expect",
                "local": "expect"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment/limits/BreedingLimitTest.js",
      "filenameRelative": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment/limits/BreedingLimitTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "BreedingLimitTest.js",
      "sourceFileName": "BreedingLimitTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment/limits",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment/limits",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "BreedingLimitTest"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nvar _utils = require(\"../../../utils\");\n\nvar _chai = require(\"chai\");\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar ganache = require(\"ganache-core\");\n\nvar DEFAULT_COLOR = ethers.utils.formatBytes32String(\"Midnight Black\"),\n    DEFAULT_AMOUNT = ethers.utils.parseUnits(\"0.2\"),\n    MAX_WETH = ethers.utils.parseUnits(\"1000\");\n\nvar DEFAULT_MIX_PARAMS = [2, 1, DEFAULT_COLOR, DEFAULT_AMOUNT];\n\ndescribe(\"BreedingLimit\", function () {\n  var breedingLimit = void 0,\n      breedingLimitLogic = void 0,\n      breedingLimitProxy = void 0,\n      breeding = void 0,\n      breedingLogic = void 0,\n      breedingProxy = void 0,\n      breedingProxyInstance = void 0,\n      proxyAdmin = void 0,\n      core = void 0,\n      breedTypes = void 0,\n      studService = void 0,\n      horseData = void 0,\n      erc20 = void 0;\n\n  var acc = void 0,\n      owner = void 0,\n      poolAddress = void 0;\n\n  before(\"populate accs\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ethers.getSigners();\n\n          case 2:\n            acc = _context.sent;\n\n            owner = acc[0];\n            poolAddress = acc[1];\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  beforeEach(\"get factories\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return ethers.getContractFactory(\"HorseData\");\n\n          case 2:\n            horseData = _context2.sent;\n            _context2.next = 5;\n            return ethers.getContractFactory(\"Core\");\n\n          case 5:\n            core = _context2.sent;\n            _context2.next = 8;\n            return ethers.getContractFactory(\"BreedTypes\");\n\n          case 8:\n            breedTypes = _context2.sent;\n            _context2.next = 11;\n            return ethers.getContractFactory(\"StudServiceV5\");\n\n          case 11:\n            studService = _context2.sent;\n            _context2.next = 14;\n            return ethers.getContractFactory(\"ERC20Test\");\n\n          case 14:\n            erc20 = _context2.sent;\n            _context2.next = 17;\n            return ethers.getContractFactory(\"Breeding\");\n\n          case 17:\n            breedingLogic = _context2.sent;\n            _context2.next = 20;\n            return ethers.getContractFactory(\"ZedProxyAdmin\");\n\n          case 20:\n            proxyAdmin = _context2.sent;\n            _context2.next = 23;\n            return ethers.getContractFactory(\"BreedingProxy\");\n\n          case 23:\n            breedingProxyInstance = _context2.sent;\n            _context2.next = 26;\n            return ethers.getContractFactory(\"BreedingLimit\");\n\n          case 26:\n            breedingLimitLogic = _context2.sent;\n\n          case 27:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })));\n\n  beforeEach(\"deploy instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return horseData.deploy();\n\n          case 2:\n            horseData = _context3.sent;\n            _context3.next = 5;\n            return horseData.deployed();\n\n          case 5:\n            _context3.next = 7;\n            return core.deploy(horseData.address);\n\n          case 7:\n            core = _context3.sent;\n            _context3.next = 10;\n            return core.deployed();\n\n          case 10:\n            _context3.next = 12;\n            return breedTypes.deploy();\n\n          case 12:\n            breedTypes = _context3.sent;\n            _context3.next = 15;\n            return breedTypes.deployed();\n\n          case 15:\n            _context3.next = 17;\n            return studService.deploy(core.address, horseData.address, breedTypes.address);\n\n          case 17:\n            studService = _context3.sent;\n            _context3.next = 20;\n            return studService.deployed();\n\n          case 20:\n            _context3.next = 22;\n            return erc20.deploy(ethers.utils.parseUnits(\"100\"));\n\n          case 22:\n            erc20 = _context3.sent;\n            _context3.next = 25;\n            return erc20.deployed();\n\n          case 25:\n            _context3.next = 27;\n            return breedingLogic.deploy();\n\n          case 27:\n            breedingLogic = _context3.sent;\n            _context3.next = 30;\n            return breedingLogic.deployed();\n\n          case 30:\n            _context3.next = 32;\n            return proxyAdmin.deploy();\n\n          case 32:\n            proxyAdmin = _context3.sent;\n            _context3.next = 35;\n            return proxyAdmin.deployed();\n\n          case 35:\n            _context3.next = 37;\n            return breedingProxyInstance.deploy(breedingLogic.address, proxyAdmin.address);\n\n          case 37:\n            breedingProxy = _context3.sent;\n            _context3.next = 40;\n            return breedingProxy.deployed();\n\n          case 40:\n\n            breeding = new ethers.Contract(breedingProxy.address, breedingLogic.interface);\n            breeding = breeding.connect(owner);\n\n            ///////\n\n            // Relayer\n            _context3.next = 44;\n            return breedingLimitLogic.deploy();\n\n          case 44:\n            breedingLimitLogic = _context3.sent;\n            _context3.next = 47;\n            return breedingLimitLogic.deployed();\n\n          case 47:\n            _context3.next = 49;\n            return breedingProxyInstance.deploy(breedingLimitLogic.address, proxyAdmin.address);\n\n          case 49:\n            breedingLimitProxy = _context3.sent;\n            _context3.next = 52;\n            return breedingLimitProxy.deployed();\n\n          case 52:\n\n            breedingLimit = new ethers.Contract(breedingLimitProxy.address, breedingLimitLogic.interface);\n            breedingLimit = breedingLimit.connect(owner);\n\n          case 54:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  })));\n\n  beforeEach(\"setup initial state of instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return breedTypes.grantRole(ethers.utils.formatBytes32String(\"breed_types_owners\"), owner.address);\n\n          case 2:\n            _context4.next = 4;\n            return breedingLimit.initialize(core.address, breeding.address);\n\n          case 4:\n            _context4.next = 6;\n            return breedingLimit.grantRole(ethers.utils.formatBytes32String(\"breeding_limit_owners\"), owner.address);\n\n          case 6:\n            _context4.next = 8;\n            return breedingLimit.setDomainSeparator(\"ZED BreedingLimit\", \"1\", _utils.chainId);\n\n          case 8:\n            _context4.next = 10;\n            return breeding.initialize(core.address, studService.address, breedTypes.address, erc20.address, poolAddress.address, acc[4].address);\n\n          case 10:\n            _context4.next = 12;\n            return breeding.grantRole(ethers.utils.formatBytes32String(\"breeding_owners\"), breedingLimit.address);\n\n          case 12:\n            _context4.next = 14;\n            return breedTypes.grantRole(ethers.utils.formatBytes32String(\"breed_types_contracts\"), breeding.address);\n\n          case 14:\n            _context4.next = 16;\n            return core.grantRole(ethers.utils.formatBytes32String(\"core_contracts\"), owner.address);\n\n          case 16:\n            _context4.next = 18;\n            return core.grantRole(ethers.utils.formatBytes32String(\"core_contracts\"), breeding.address);\n\n          case 18:\n            _context4.next = 20;\n            return core.grantRole(ethers.utils.formatBytes32String(\"core_owners\"), breeding.address);\n\n          case 20:\n            _context4.next = 22;\n            return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"FirstName\"), ethers.utils.formatBytes32String(\"Black\"));\n\n          case 22:\n            _context4.next = 24;\n            return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Female\"), ethers.utils.formatBytes32String(\"Truc\"), ethers.utils.formatBytes32String(\"violet\"));\n\n          case 24:\n            _context4.next = 26;\n            return core.mintCustomHorse(owner.address, 4, ethers.utils.formatBytes32String(\"Male\"), ethers.utils.formatBytes32String(\"Trung\"), ethers.utils.formatBytes32String(\"blue\"));\n\n          case 26:\n            _context4.next = 28;\n            return studService.grantRole(ethers.utils.formatBytes32String(\"stud_owners\"), owner.address);\n\n          case 28:\n            _context4.next = 30;\n            return studService.putInStud(2, DEFAULT_AMOUNT, 86400);\n\n          case 30:\n            _context4.next = 32;\n            return erc20.transfer(acc[2].address, DEFAULT_AMOUNT);\n\n          case 32:\n            _context4.next = 34;\n            return erc20.transfer(acc[5].address, DEFAULT_AMOUNT);\n\n          case 34:\n            _context4.next = 36;\n            return erc20.connect(acc[2]).approve(breeding.address, MAX_WETH);\n\n          case 36:\n            _context4.next = 38;\n            return erc20.connect(acc[5]).approve(breeding.address, MAX_WETH);\n\n          case 38:\n            _context4.next = 40;\n            return erc20.approve(breeding.address, MAX_WETH);\n\n          case 40:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined);\n  })));\n\n  describe(\"meta-transactions\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            // `relayMix` is being tested here becuse the contract forbids calling it directly\n            // and instead it should be executed through meta transactions.\n            describe(\"relayMix\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n              return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                while (1) {\n                  switch (_context12.prev = _context12.next) {\n                    case 0:\n                      it(\"should record breed data if it is not saved\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                        var maleRecord, femaleRecord;\n                        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                          while (1) {\n                            switch (_context5.prev = _context5.next) {\n                              case 0:\n                                _context5.next = 2;\n                                return buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS);\n\n                              case 2:\n                                _context5.next = 4;\n                                return breedingLimit.getBreedingRecord(2);\n\n                              case 4:\n                                maleRecord = _context5.sent;\n\n\n                                (0, _chai.expect)(maleRecord[0]).to.be.true;\n                                // Male limit is 3\n                                (0, _chai.expect)(maleRecord[1]).to.equal(2);\n\n                                _context5.next = 9;\n                                return breedingLimit.getBreedingRecord(1);\n\n                              case 9:\n                                femaleRecord = _context5.sent;\n\n\n                                (0, _chai.expect)(femaleRecord[0]).to.be.true;\n                                // Female limit is 1\n                                (0, _chai.expect)(femaleRecord[1]).to.equal(0);\n\n                              case 12:\n                              case \"end\":\n                                return _context5.stop();\n                            }\n                          }\n                        }, _callee5, undefined);\n                      })));\n\n                      it(\"should use correct reset date if horse hasn't been used in months\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                        var resetDays, expectedDifference, maleRecord, horseData, datesDifference, femaleRecord;\n                        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                          while (1) {\n                            switch (_context6.prev = _context6.next) {\n                              case 0:\n                                _context6.next = 2;\n                                return breedingLimit.breedingCycle();\n\n                              case 2:\n                                resetDays = _context6.sent;\n                                expectedDifference = resetDays.toNumber() * 5;\n                                _context6.next = 6;\n                                return (0, _utils.increaseTimeBySeconds)(resetDays.toNumber() * 4);\n\n                              case 6:\n                                _context6.next = 8;\n                                return (0, _utils.mineBlock)();\n\n                              case 8:\n                                _context6.next = 10;\n                                return buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS);\n\n                              case 10:\n                                _context6.next = 12;\n                                return breedingLimit.getBreedingRecord(2);\n\n                              case 12:\n                                maleRecord = _context6.sent;\n                                _context6.next = 15;\n                                return core.getHorseData(2);\n\n                              case 15:\n                                horseData = _context6.sent;\n                                datesDifference = maleRecord[2].toNumber() - horseData[2].toNumber();\n\n\n                                (0, _chai.expect)(datesDifference).to.equal(expectedDifference);\n\n                                _context6.next = 20;\n                                return breedingLimit.getBreedingRecord(1);\n\n                              case 20:\n                                femaleRecord = _context6.sent;\n                                _context6.next = 23;\n                                return core.getHorseData(1);\n\n                              case 23:\n                                horseData = _context6.sent;\n\n                                datesDifference = femaleRecord[2].toNumber() - horseData[2].toNumber();\n\n                                (0, _chai.expect)(datesDifference).to.equal(expectedDifference);\n\n                              case 26:\n                              case \"end\":\n                                return _context6.stop();\n                            }\n                          }\n                        }, _callee6, undefined);\n                      })));\n\n                      it(\"should update breeding counter and reset of horses\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n                        var resetDays, maleRecord, femaleRecord;\n                        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                          while (1) {\n                            switch (_context7.prev = _context7.next) {\n                              case 0:\n                                _context7.next = 2;\n                                return breedingLimit.breedingCycle();\n\n                              case 2:\n                                resetDays = _context7.sent;\n                                _context7.next = 5;\n                                return buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS);\n\n                              case 5:\n                                _context7.next = 7;\n                                return (0, _utils.increaseTimeBySeconds)(resetDays.toNumber() * 2);\n\n                              case 7:\n                                _context7.next = 9;\n                                return (0, _utils.mineBlock)();\n\n                              case 9:\n                                _context7.next = 11;\n                                return buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS);\n\n                              case 11:\n                                _context7.next = 13;\n                                return breedingLimit.getBreedingRecord(2);\n\n                              case 13:\n                                maleRecord = _context7.sent;\n\n                                (0, _chai.expect)(maleRecord[1]).to.equal(2);\n\n                                _context7.next = 17;\n                                return breedingLimit.getBreedingRecord(1);\n\n                              case 17:\n                                femaleRecord = _context7.sent;\n\n                                (0, _chai.expect)(femaleRecord[1]).to.equal(0);\n\n                              case 19:\n                              case \"end\":\n                                return _context7.stop();\n                            }\n                          }\n                        }, _callee7, undefined);\n                      })));\n\n                      describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n                        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                          while (1) {\n                            switch (_context11.prev = _context11.next) {\n                              case 0:\n                                it(\"should revert not the owner of the female sends the tx\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                                  return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                                    while (1) {\n                                      switch (_context8.prev = _context8.next) {\n                                        case 0:\n                                          (0, _chai.expect)(buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS, acc[4])).to.be.revertedWith(\"BreedingLimit: female owner should be the initiator\");\n\n                                        case 1:\n                                        case \"end\":\n                                          return _context8.stop();\n                                      }\n                                    }\n                                  }, _callee8, undefined);\n                                })));\n\n                                it(\"should revert if female horse has reached limit\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                                  return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                                    while (1) {\n                                      switch (_context9.prev = _context9.next) {\n                                        case 0:\n                                          _context9.next = 2;\n                                          return buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS);\n\n                                        case 2:\n\n                                          (0, _chai.expect)(buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS)).to.be.revertedWith(\"BreedingLimit: female breeding limit reached\");\n\n                                        case 3:\n                                        case \"end\":\n                                          return _context9.stop();\n                                      }\n                                    }\n                                  }, _callee9, undefined);\n                                })));\n\n                                it(\"should revert if horse has 0 breeds left and shouldn't be updated yet\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n                                  var resetDays;\n                                  return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                                    while (1) {\n                                      switch (_context10.prev = _context10.next) {\n                                        case 0:\n                                          _context10.next = 2;\n                                          return breedingLimit.breedingCycle();\n\n                                        case 2:\n                                          resetDays = _context10.sent;\n                                          _context10.next = 5;\n                                          return buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS);\n\n                                        case 5:\n                                          _context10.next = 7;\n                                          return (0, _utils.increaseTimeBySeconds)(resetDays.toNumber() - 100);\n\n                                        case 7:\n                                          _context10.next = 9;\n                                          return (0, _utils.mineBlock)();\n\n                                        case 9:\n\n                                          (0, _chai.expect)(buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS)).to.be.revertedWith(\"BreedingLimit: female breeding limit reached\");\n\n                                        case 10:\n                                        case \"end\":\n                                          return _context10.stop();\n                                      }\n                                    }\n                                  }, _callee10, undefined);\n                                })));\n\n                              case 3:\n                              case \"end\":\n                                return _context11.stop();\n                            }\n                          }\n                        }, _callee11, undefined);\n                      })));\n\n                    case 4:\n                    case \"end\":\n                      return _context12.stop();\n                  }\n                }\n              }, _callee12, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13, undefined);\n  })));\n\n  describe(\"recordHorse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n    return regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            it(\"should record data for a horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n              var tx, record;\n              return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                while (1) {\n                  switch (_context14.prev = _context14.next) {\n                    case 0:\n                      _context14.next = 2;\n                      return breedingLimit.recordHorse(2);\n\n                    case 2:\n                      tx = _context14.sent;\n                      _context14.next = 5;\n                      return breedingLimit.getBreedingRecord(2);\n\n                    case 5:\n                      record = _context14.sent;\n\n\n                      (0, _chai.expect)(record[0]).to.be.true;\n                      (0, _chai.expect)(record[1]).to.equal(3);\n\n                      (0, _chai.expect)(tx).to.emit(breedingLimit, \"HorseRecordInserted\").withArgs(2);\n\n                      _context14.next = 11;\n                      return breedingLimit.recordHorse(1);\n\n                    case 11:\n                      tx = _context14.sent;\n                      _context14.next = 14;\n                      return breedingLimit.getBreedingRecord(1);\n\n                    case 14:\n                      record = _context14.sent;\n\n\n                      (0, _chai.expect)(record[0]).to.be.true;\n                      (0, _chai.expect)(record[1]).to.equal(1);\n\n                      (0, _chai.expect)(tx).to.emit(breedingLimit, \"HorseRecordInserted\").withArgs(1);\n\n                    case 18:\n                    case \"end\":\n                      return _context14.stop();\n                  }\n                }\n              }, _callee14, undefined);\n            })));\n\n            describe(\"reverts\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n              return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                while (1) {\n                  switch (_context16.prev = _context16.next) {\n                    case 0:\n                      it(\"should revert if horse is already recorded\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n                        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                          while (1) {\n                            switch (_context15.prev = _context15.next) {\n                              case 0:\n                                _context15.next = 2;\n                                return buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS);\n\n                              case 2:\n\n                                (0, _chai.expect)(breedingLimit.recordHorse(2)).to.be.revertedWith(\"BreedingLimit: horse already recorded\");\n\n                              case 3:\n                              case \"end\":\n                                return _context15.stop();\n                            }\n                          }\n                        }, _callee15, undefined);\n                      })));\n\n                    case 1:\n                    case \"end\":\n                      return _context16.stop();\n                  }\n                }\n              }, _callee16, undefined);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17, undefined);\n  })));\n\n  describe(\"setBreedingCycle\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n    return regeneratorRuntime.wrap(function _callee19$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            it(\"should update the breeding cycle\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n              var tx, newCycle;\n              return regeneratorRuntime.wrap(function _callee18$(_context18) {\n                while (1) {\n                  switch (_context18.prev = _context18.next) {\n                    case 0:\n                      _context18.next = 2;\n                      return breedingLimit.setBreedingCycle(1);\n\n                    case 2:\n                      tx = _context18.sent;\n                      _context18.next = 5;\n                      return breedingLimit.breedingCycle();\n\n                    case 5:\n                      newCycle = _context18.sent;\n\n\n                      (0, _chai.expect)(newCycle).to.equal(1);\n                      (0, _chai.expect)(tx).to.emit(breedingLimit, \"BreedingCycleUpdated\").withArgs(owner.address, 1);\n\n                    case 8:\n                    case \"end\":\n                      return _context18.stop();\n                  }\n                }\n              }, _callee18, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee19, undefined);\n  })));\n\n  describe(\"updateBreedingLimits\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n    return regeneratorRuntime.wrap(function _callee21$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            it(\"should update the breeding limits\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n              var tx, maleLimit, femaleLimit;\n              return regeneratorRuntime.wrap(function _callee20$(_context20) {\n                while (1) {\n                  switch (_context20.prev = _context20.next) {\n                    case 0:\n                      _context20.next = 2;\n                      return breedingLimit.updateBreedingLimits(1, 3);\n\n                    case 2:\n                      tx = _context20.sent;\n                      _context20.next = 5;\n                      return breedingLimit.maleLimit();\n\n                    case 5:\n                      maleLimit = _context20.sent;\n                      _context20.next = 8;\n                      return breedingLimit.femaleLimit();\n\n                    case 8:\n                      femaleLimit = _context20.sent;\n\n\n                      (0, _chai.expect)(maleLimit).to.equal(1);\n                      (0, _chai.expect)(femaleLimit).to.equal(3);\n\n                      (0, _chai.expect)(tx).to.emit(breedingLimit, \"HorsesLimitsUpdated\").withArgs(owner.address, 1, 3);\n\n                    case 12:\n                    case \"end\":\n                      return _context20.stop();\n                  }\n                }\n              }, _callee20, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, _callee21, undefined);\n  })));\n\n  describe(\"updateHorseRecord\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n    return regeneratorRuntime.wrap(function _callee23$(_context23) {\n      while (1) {\n        switch (_context23.prev = _context23.next) {\n          case 0:\n            it(\"should update horse record with given args\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n              var tx, record;\n              return regeneratorRuntime.wrap(function _callee22$(_context22) {\n                while (1) {\n                  switch (_context22.prev = _context22.next) {\n                    case 0:\n                      _context22.next = 2;\n                      return breedingLimit.updateHorseRecord(1, 10, 123123);\n\n                    case 2:\n                      tx = _context22.sent;\n                      _context22.next = 5;\n                      return breedingLimit.getBreedingRecord(1);\n\n                    case 5:\n                      record = _context22.sent;\n\n\n                      (0, _chai.expect)(record[0]).to.be.true;\n                      (0, _chai.expect)(record[1]).to.equal(10);\n                      (0, _chai.expect)(record[2]).to.equal(123123);\n\n                    case 9:\n                    case \"end\":\n                      return _context22.stop();\n                  }\n                }\n              }, _callee22, undefined);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context23.stop();\n        }\n      }\n    }, _callee23, undefined);\n  })));\n\n  var buildAndExecuteMetaTx = function () {\n    var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24(method, funcParams) {\n      var account = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : owner;\n\n      var functionSignature, typedData, signedData, _ref25, r, s, v;\n\n      return regeneratorRuntime.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              functionSignature = breedingLimit.interface.encodeFunctionData(method, funcParams);\n              _context24.t0 = _utils.getTypedData;\n              _context24.t1 = _utils.chainId;\n              _context24.t2 = breedingLimit.address;\n              _context24.next = 6;\n              return breedingLimit.getNonce(account.address);\n\n            case 6:\n              _context24.t3 = _context24.sent;\n              _context24.t4 = account.address;\n              _context24.t5 = functionSignature;\n              _context24.t6 = {\n                name: \"ZED BreedingLimit\",\n                version: \"1\",\n                chainId: _context24.t1,\n                verifyingContract: _context24.t2,\n                nonce: _context24.t3,\n                from: _context24.t4,\n                functionSignature: _context24.t5\n              };\n              _context24.next = 12;\n              return (0, _context24.t0)(_context24.t6);\n\n            case 12:\n              typedData = _context24.sent;\n              _context24.next = 15;\n              return account._signTypedData(typedData.domain, typedData.types, typedData.message);\n\n            case 15:\n              signedData = _context24.sent;\n              _context24.next = 18;\n              return (0, _utils.getRsvFromSig)(signedData);\n\n            case 18:\n              _ref25 = _context24.sent;\n              r = _ref25.r;\n              s = _ref25.s;\n              v = _ref25.v;\n              _context24.next = 24;\n              return breedingLimit.executeMetaTransaction(account.address, functionSignature, r, s, v);\n\n            case 24:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24, undefined);\n    }));\n\n    return function buildAndExecuteMetaTx(_x2, _x3) {\n      return _ref24.apply(this, arguments);\n    };\n  }();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJyZWVkaW5nTGltaXRUZXN0LmpzIl0sIm5hbWVzIjpbImdhbmFjaGUiLCJyZXF1aXJlIiwiREVGQVVMVF9DT0xPUiIsImV0aGVycyIsInV0aWxzIiwiZm9ybWF0Qnl0ZXMzMlN0cmluZyIsIkRFRkFVTFRfQU1PVU5UIiwicGFyc2VVbml0cyIsIk1BWF9XRVRIIiwiREVGQVVMVF9NSVhfUEFSQU1TIiwiZGVzY3JpYmUiLCJicmVlZGluZ0xpbWl0IiwiYnJlZWRpbmdMaW1pdExvZ2ljIiwiYnJlZWRpbmdMaW1pdFByb3h5IiwiYnJlZWRpbmciLCJicmVlZGluZ0xvZ2ljIiwiYnJlZWRpbmdQcm94eSIsImJyZWVkaW5nUHJveHlJbnN0YW5jZSIsInByb3h5QWRtaW4iLCJjb3JlIiwiYnJlZWRUeXBlcyIsInN0dWRTZXJ2aWNlIiwiaG9yc2VEYXRhIiwiZXJjMjAiLCJhY2MiLCJvd25lciIsInBvb2xBZGRyZXNzIiwiYmVmb3JlIiwiZ2V0U2lnbmVycyIsImJlZm9yZUVhY2giLCJnZXRDb250cmFjdEZhY3RvcnkiLCJkZXBsb3kiLCJkZXBsb3llZCIsImFkZHJlc3MiLCJDb250cmFjdCIsImludGVyZmFjZSIsImNvbm5lY3QiLCJncmFudFJvbGUiLCJpbml0aWFsaXplIiwic2V0RG9tYWluU2VwYXJhdG9yIiwiY2hhaW5JZCIsIm1pbnRDdXN0b21Ib3JzZSIsInB1dEluU3R1ZCIsInRyYW5zZmVyIiwiYXBwcm92ZSIsIml0IiwiYnVpbGRBbmRFeGVjdXRlTWV0YVR4IiwiZ2V0QnJlZWRpbmdSZWNvcmQiLCJtYWxlUmVjb3JkIiwidG8iLCJiZSIsInRydWUiLCJlcXVhbCIsImZlbWFsZVJlY29yZCIsImJyZWVkaW5nQ3ljbGUiLCJyZXNldERheXMiLCJleHBlY3RlZERpZmZlcmVuY2UiLCJ0b051bWJlciIsImdldEhvcnNlRGF0YSIsImRhdGVzRGlmZmVyZW5jZSIsInJldmVydGVkV2l0aCIsInJlY29yZEhvcnNlIiwidHgiLCJyZWNvcmQiLCJlbWl0Iiwid2l0aEFyZ3MiLCJzZXRCcmVlZGluZ0N5Y2xlIiwibmV3Q3ljbGUiLCJ1cGRhdGVCcmVlZGluZ0xpbWl0cyIsIm1hbGVMaW1pdCIsImZlbWFsZUxpbWl0IiwidXBkYXRlSG9yc2VSZWNvcmQiLCJtZXRob2QiLCJmdW5jUGFyYW1zIiwiYWNjb3VudCIsImZ1bmN0aW9uU2lnbmF0dXJlIiwiZW5jb2RlRnVuY3Rpb25EYXRhIiwiZ2V0VHlwZWREYXRhIiwiZ2V0Tm9uY2UiLCJuYW1lIiwidmVyc2lvbiIsInZlcmlmeWluZ0NvbnRyYWN0Iiwibm9uY2UiLCJmcm9tIiwidHlwZWREYXRhIiwiX3NpZ25UeXBlZERhdGEiLCJkb21haW4iLCJ0eXBlcyIsIm1lc3NhZ2UiLCJzaWduZWREYXRhIiwiciIsInMiLCJ2IiwiZXhlY3V0ZU1ldGFUcmFuc2FjdGlvbiJdLCJtYXBwaW5ncyI6Ijs7QUFFQTs7QUFVQTs7OztBQVpBLElBQU1BLFVBQVVDLFFBQVEsY0FBUixDQUFoQjs7QUFjQSxJQUFNQyxnQkFBZ0JDLE9BQU9DLEtBQVAsQ0FBYUMsbUJBQWIsQ0FBaUMsZ0JBQWpDLENBQXRCO0FBQUEsSUFDRUMsaUJBQWlCSCxPQUFPQyxLQUFQLENBQWFHLFVBQWIsQ0FBd0IsS0FBeEIsQ0FEbkI7QUFBQSxJQUVFQyxXQUFXTCxPQUFPQyxLQUFQLENBQWFHLFVBQWIsQ0FBd0IsTUFBeEIsQ0FGYjs7QUFJQSxJQUFNRSxxQkFBcUIsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPUCxhQUFQLEVBQXNCSSxjQUF0QixDQUEzQjs7QUFFQUksU0FBUyxlQUFULEVBQTBCLFlBQU07QUFDOUIsTUFBSUMsc0JBQUo7QUFBQSxNQUNFQywyQkFERjtBQUFBLE1BRUVDLDJCQUZGO0FBQUEsTUFHRUMsaUJBSEY7QUFBQSxNQUlFQyxzQkFKRjtBQUFBLE1BS0VDLHNCQUxGO0FBQUEsTUFNRUMsOEJBTkY7QUFBQSxNQU9FQyxtQkFQRjtBQUFBLE1BUUVDLGFBUkY7QUFBQSxNQVNFQyxtQkFURjtBQUFBLE1BVUVDLG9CQVZGO0FBQUEsTUFXRUMsa0JB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LEVBRXJCRixVQUFVRyxLQUZXLEVBR3JCSCxVQUFVSSxPQUhXLENBaEJLOztBQUFBO0FBZ0J4QkMsd0JBaEJ3QjtBQUFBO0FBQUEscUJBc0JKLDBCQUFjQSxVQUFkLENBdEJJOztBQUFBO0FBQUE7QUFzQnRCQyxlQXRCc0IsVUFzQnRCQSxDQXRCc0I7QUFzQm5CQyxlQXRCbUIsVUFzQm5CQSxDQXRCbUI7QUFzQmhCQyxlQXRCZ0IsVUFzQmhCQSxDQXRCZ0I7QUFBQTtBQUFBLHFCQXdCdEJqRixjQUFja0Ysc0JBQWQsQ0FDSm5CLFFBQVF6QyxPQURKLEVBRUowQyxpQkFGSSxFQUdKZSxDQUhJLEVBSUpDLENBSkksRUFLSkMsQ0FMSSxDQXhCc0I7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FBeEI7O0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FBTjtBQWdDRCxDQXpYRCIsImZpbGUiOiJCcmVlZGluZ0xpbWl0VGVzdC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbWlndWVsZGlhei9EZXZlbG9wbWVudC96ZWQvY3J5cHRvZmllbGQtY29yZS90ZXN0LzAuNy1jb250cmFjdHMvcHJveHlfZGVwbG95bWVudC9saW1pdHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBnYW5hY2hlID0gcmVxdWlyZShcImdhbmFjaGUtY29yZVwiKTtcblxuaW1wb3J0IHtcbiAgZnVuY0Zyb21BQkksXG4gIHNpZ25UeERhdGEsXG4gIGdldFR5cGVkRGF0YSxcbiAgZ2V0UnN2RnJvbVNpZyxcbiAgbWV0YVR4c0FjY291bnRzLFxuICBpbmNyZWFzZVRpbWVCeVNlY29uZHMsXG4gIG1pbmVCbG9jayxcbiAgY2hhaW5JZCxcbn0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzXCI7XG5pbXBvcnQgeyBleHBlY3QgfSBmcm9tIFwiY2hhaVwiO1xuXG5jb25zdCBERUZBVUxUX0NPTE9SID0gZXRoZXJzLnV0aWxzLmZvcm1hdEJ5dGVzMzJTdHJpbmcoXCJNaWRuaWdodCBCbGFja1wiKSxcbiAgREVGQVVMVF9BTU9VTlQgPSBldGhlcnMudXRpbHMucGFyc2VVbml0cyhcIjAuMlwiKSxcbiAgTUFYX1dFVEggPSBldGhlcnMudXRpbHMucGFyc2VVbml0cyhcIjEwMDBcIik7XG5cbmNvbnN0IERFRkFVTFRfTUlYX1BBUkFNUyA9IFsyLCAxLCBERUZBVUxUX0NPTE9SLCBERUZBVUxUX0FNT1VOVF07XG5cbmRlc2NyaWJlKFwiQnJlZWRpbmdMaW1pdFwiLCAoKSA9PiB7XG4gIGxldCBicmVlZGluZ0xpbWl0LFxuICAgIGJyZWVkaW5nTGltaXRMb2dpYyxcbiAgICBicmVlZGluZ0xpbWl0UHJveHksXG4gICAgYnJlZWRpbmcsXG4gICAgYnJlZWRpbmdMb2dpYyxcbiAgICBicmVlZGluZ1Byb3h5LFxuICAgIGJyZWVkaW5nUHJveHlJbnN0YW5jZSxcbiAgICBwcm94eUFkbWluLFxuICAgIGNvcmUsXG4gICAgYnJlZWRUeXBlcyxcbiAgICBzdHVkU2VydmljZSxcbiAgICBob3JzZURhdGEsXG4gICAgZXJjMjA7XG5cbiAgbGV0IGFjYywgb3duZXIsIHBvb2xBZGRyZXNzO1xuXG4gIGJlZm9yZShcInBvcHVsYXRlIGFjY3NcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGFjYyA9IGF3YWl0IGV0aGVycy5nZXRTaWduZXJzKCk7XG4gICAgb3duZXIgPSBhY2NbMF07XG4gICAgcG9vbEFkZHJlc3MgPSBhY2NbMV07XG4gIH0pO1xuXG4gIGJlZm9yZUVhY2goXCJnZXQgZmFjdG9yaWVzXCIsIGFzeW5jICgpID0+IHtcbiAgICBob3JzZURhdGEgPSBhd2FpdCBldGhlcnMuZ2V0Q29udHJhY3RGYWN0b3J5KFwiSG9yc2VEYXRhXCIpO1xuICAgIGNvcmUgPSBhd2FpdCBldGhlcnMuZ2V0Q29udHJhY3RGYWN0b3J5KFwiQ29yZVwiKTtcbiAgICBicmVlZFR5cGVzID0gYXdhaXQgZXRoZXJzLmdldENvbnRyYWN0RmFjdG9yeShcIkJyZWVkVHlwZXNcIik7XG4gICAgc3R1ZFNlcnZpY2UgPSBhd2FpdCBldGhlcnMuZ2V0Q29udHJhY3RGYWN0b3J5KFwiU3R1ZFNlcnZpY2VWNVwiKTtcbiAgICBlcmMyMCA9IGF3YWl0IGV0aGVycy5nZXRDb250cmFjdEZhY3RvcnkoXCJFUkMyMFRlc3RcIik7XG4gICAgYnJlZWRpbmdMb2dpYyA9IGF3YWl0IGV0aGVycy5nZXRDb250cmFjdEZhY3RvcnkoXCJCcmVlZGluZ1wiKTtcbiAgICBwcm94eUFkbWluID0gYXdhaXQgZXRoZXJzLmdldENvbnRyYWN0RmFjdG9yeShcIlplZFByb3h5QWRtaW5cIik7XG4gICAgYnJlZWRpbmdQcm94eUluc3RhbmNlID0gYXdhaXQgZXRoZXJzLmdldENvbnRyYWN0RmFjdG9yeShcIkJyZWVkaW5nUHJveHlcIik7XG4gICAgYnJlZWRpbmdMaW1pdExvZ2ljID0gYXdhaXQgZXRoZXJzLmdldENvbnRyYWN0RmFjdG9yeShcIkJyZWVkaW5nTGltaXRcIik7XG4gIH0pO1xuXG4gIGJlZm9yZUVhY2goXCJkZXBsb3kgaW5zdGFuY2VzXCIsIGFzeW5jICgpID0+IHtcbiAgICBob3JzZURhdGEgPSBhd2FpdCBob3JzZURhdGEuZGVwbG95KCk7XG4gICAgYXdhaXQgaG9yc2VEYXRhLmRlcGxveWVkKCk7XG5cbiAgICBjb3JlID0gYXdhaXQgY29yZS5kZXBsb3koaG9yc2VEYXRhLmFkZHJlc3MpO1xuICAgIGF3YWl0IGNvcmUuZGVwbG95ZWQoKTtcblxuICAgIGJyZWVkVHlwZXMgPSBhd2FpdCBicmVlZFR5cGVzLmRlcGxveSgpO1xuICAgIGF3YWl0IGJyZWVkVHlwZXMuZGVwbG95ZWQoKTtcblxuICAgIHN0dWRTZXJ2aWNlID0gYXdhaXQgc3R1ZFNlcnZpY2UuZGVwbG95KFxuICAgICAgY29yZS5hZGRyZXNzLFxuICAgICAgaG9yc2VEYXRhLmFkZHJlc3MsXG4gICAgICBicmVlZFR5cGVzLmFkZHJlc3NcbiAgICApO1xuICAgIGF3YWl0IHN0dWRTZXJ2aWNlLmRlcGxveWVkKCk7XG5cbiAgICBlcmMyMCA9IGF3YWl0IGVyYzIwLmRlcGxveShldGhlcnMudXRpbHMucGFyc2VVbml0cyhcIjEwMFwiKSk7XG4gICAgYXdhaXQgZXJjMjAuZGVwbG95ZWQoKTtcblxuICAgIC8vIERlcGxveXMgQnJlZWRpbmcgTG9naWMgaW5zdGFuY2VcbiAgICBicmVlZGluZ0xvZ2ljID0gYXdhaXQgYnJlZWRpbmdMb2dpYy5kZXBsb3koKTtcbiAgICBhd2FpdCBicmVlZGluZ0xvZ2ljLmRlcGxveWVkKCk7XG5cbiAgICAvLyBEZXBsb3lzIEJyZWVkaW5nIEFkbWluIHRvIGJlIHVzZWQgYXMgYWRtaW4gb2YgQnJlZWRpbmdQcm94eSBhbmQgQnJlZWRpbmdMaW1pdFByb3h5XG4gICAgcHJveHlBZG1pbiA9IGF3YWl0IHByb3h5QWRtaW4uZGVwbG95KCk7XG4gICAgYXdhaXQgcHJveHlBZG1pbi5kZXBsb3llZCgpO1xuXG4gICAgLy8gRGVwbG95cyBwcm94eSBpbnN0YW5jZVxuICAgIGJyZWVkaW5nUHJveHkgPSBhd2FpdCBicmVlZGluZ1Byb3h5SW5zdGFuY2UuZGVwbG95KFxuICAgICAgYnJlZWRpbmdMb2dpYy5hZGRyZXNzLFxuICAgICAgcHJveHlBZG1pbi5hZGRyZXNzXG4gICAgKTtcbiAgICBhd2FpdCBicmVlZGluZ1Byb3h5LmRlcGxveWVkKCk7XG5cbiAgICBicmVlZGluZyA9IG5ldyBldGhlcnMuQ29udHJhY3QoXG4gICAgICBicmVlZGluZ1Byb3h5LmFkZHJlc3MsXG4gICAgICBicmVlZGluZ0xvZ2ljLmludGVyZmFjZVxuICAgICk7XG4gICAgYnJlZWRpbmcgPSBicmVlZGluZy5jb25uZWN0KG93bmVyKTtcblxuICAgIC8vLy8vLy9cblxuICAgIC8vIFJlbGF5ZXJcbiAgICBicmVlZGluZ0xpbWl0TG9naWMgPSBhd2FpdCBicmVlZGluZ0xpbWl0TG9naWMuZGVwbG95KCk7XG4gICAgYXdhaXQgYnJlZWRpbmdMaW1pdExvZ2ljLmRlcGxveWVkKCk7XG5cbiAgICAvLyBVc2UgdGhlIHNhbWUgQnJlZWRpbmdQcm94eSBhbmQgUHJveHlBZG1pbiBhcyBpdCBjYW4gbWFuYWdlIG11bHRpcGxlIHByb3hpZXNcbiAgICBicmVlZGluZ0xpbWl0UHJveHkgPSBhd2FpdCBicmVlZGluZ1Byb3h5SW5zdGFuY2UuZGVwbG95KFxuICAgICAgYnJlZWRpbmdMaW1pdExvZ2ljLmFkZHJlc3MsXG4gICAgICBwcm94eUFkbWluLmFkZHJlc3NcbiAgICApO1xuICAgIGF3YWl0IGJyZWVkaW5nTGltaXRQcm94eS5kZXBsb3llZCgpO1xuXG4gICAgYnJlZWRpbmdMaW1pdCA9IG5ldyBldGhlcnMuQ29udHJhY3QoXG4gICAgICBicmVlZGluZ0xpbWl0UHJveHkuYWRkcmVzcyxcbiAgICAgIGJyZWVkaW5nTGltaXRMb2dpYy5pbnRlcmZhY2VcbiAgICApO1xuICAgIGJyZWVkaW5nTGltaXQgPSBicmVlZGluZ0xpbWl0LmNvbm5lY3Qob3duZXIpO1xuICB9KTtcblxuICBiZWZvcmVFYWNoKFwic2V0dXAgaW5pdGlhbCBzdGF0ZSBvZiBpbnN0YW5jZXNcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IGJyZWVkVHlwZXMuZ3JhbnRSb2xlKFxuICAgICAgZXRoZXJzLnV0aWxzLmZvcm1hdEJ5dGVzMzJTdHJpbmcoXCJicmVlZF90eXBlc19vd25lcnNcIiksXG4gICAgICBvd25lci5hZGRyZXNzXG4gICAgKTtcblxuICAgIGF3YWl0IGJyZWVkaW5nTGltaXQuaW5pdGlhbGl6ZShjb3JlLmFkZHJlc3MsIGJyZWVkaW5nLmFkZHJlc3MpO1xuICAgIGF3YWl0IGJyZWVkaW5nTGltaXQuZ3JhbnRSb2xlKFxuICAgICAgZXRoZXJzLnV0aWxzLmZvcm1hdEJ5dGVzMzJTdHJpbmcoXCJicmVlZGluZ19saW1pdF9vd25lcnNcIiksXG4gICAgICBvd25lci5hZGRyZXNzXG4gICAgKTtcblxuICAgIGF3YWl0IGJyZWVkaW5nTGltaXQuc2V0RG9tYWluU2VwYXJhdG9yKFwiWkVEIEJyZWVkaW5nTGltaXRcIiwgXCIxXCIsIGNoYWluSWQpO1xuXG4gICAgYXdhaXQgYnJlZWRpbmcuaW5pdGlhbGl6ZShcbiAgICAgIGNvcmUuYWRkcmVzcyxcbiAgICAgIHN0dWRTZXJ2aWNlLmFkZHJlc3MsXG4gICAgICBicmVlZFR5cGVzLmFkZHJlc3MsXG4gICAgICBlcmMyMC5hZGRyZXNzLFxuICAgICAgcG9vbEFkZHJlc3MuYWRkcmVzcyxcbiAgICAgIGFjY1s0XS5hZGRyZXNzXG4gICAgKTtcblxuICAgIGF3YWl0IGJyZWVkaW5nLmdyYW50Um9sZShcbiAgICAgIGV0aGVycy51dGlscy5mb3JtYXRCeXRlczMyU3RyaW5nKFwiYnJlZWRpbmdfb3duZXJzXCIpLFxuICAgICAgYnJlZWRpbmdMaW1pdC5hZGRyZXNzXG4gICAgKTtcblxuICAgIGF3YWl0IGJyZWVkVHlwZXMuZ3JhbnRSb2xlKFxuICAgICAgZXRoZXJzLnV0aWxzLmZvcm1hdEJ5dGVzMzJTdHJpbmcoXCJicmVlZF90eXBlc19jb250cmFjdHNcIiksXG4gICAgICBicmVlZGluZy5hZGRyZXNzXG4gICAgKTtcblxuICAgIGF3YWl0IGNvcmUuZ3JhbnRSb2xlKFxuICAgICAgZXRoZXJzLnV0aWxzLmZvcm1hdEJ5dGVzMzJTdHJpbmcoXCJjb3JlX2NvbnRyYWN0c1wiKSxcbiAgICAgIG93bmVyLmFkZHJlc3NcbiAgICApO1xuXG4gICAgLy8gQ29yZSBuZWVkIHRvIGdyYW50IENPUkVfQ09OVFJBQ1RTX1JPTEUgYW5kIENPUkVfT1dORVJTX1JPTEUgZm9yIEJyZWVkaW5nIHRvIGFibGUgdG8gaW52b2tlIG1ldGhvZCBDb3JlLm1pbnRPZmZzcHJpbmdcbiAgICBhd2FpdCBjb3JlLmdyYW50Um9sZShcbiAgICAgIGV0aGVycy51dGlscy5mb3JtYXRCeXRlczMyU3RyaW5nKFwiY29yZV9jb250cmFjdHNcIiksXG4gICAgICBicmVlZGluZy5hZGRyZXNzXG4gICAgKTtcbiAgICBhd2FpdCBjb3JlLmdyYW50Um9sZShcbiAgICAgIGV0aGVycy51dGlscy5mb3JtYXRCeXRlczMyU3RyaW5nKFwiY29yZV9vd25lcnNcIiksXG4gICAgICBicmVlZGluZy5hZGRyZXNzXG4gICAgKTtcblxuICAgIC8vIFdlIGNhbm5vdCBpbnRlcmFjdCB3aXRoIElEIDBcbiAgICBhd2FpdCBjb3JlLm1pbnRDdXN0b21Ib3JzZShcbiAgICAgIG93bmVyLmFkZHJlc3MsXG4gICAgICA0LFxuICAgICAgZXRoZXJzLnV0aWxzLmZvcm1hdEJ5dGVzMzJTdHJpbmcoXCJNYWxlXCIpLFxuICAgICAgZXRoZXJzLnV0aWxzLmZvcm1hdEJ5dGVzMzJTdHJpbmcoXCJGaXJzdE5hbWVcIiksXG4gICAgICBldGhlcnMudXRpbHMuZm9ybWF0Qnl0ZXMzMlN0cmluZyhcIkJsYWNrXCIpXG4gICAgKTtcblxuICAgIC8vIElEIDFcbiAgICBhd2FpdCBjb3JlLm1pbnRDdXN0b21Ib3JzZShcbiAgICAgIG93bmVyLmFkZHJlc3MsXG4gICAgICA0LFxuICAgICAgZXRoZXJzLnV0aWxzLmZvcm1hdEJ5dGVzMzJTdHJpbmcoXCJGZW1hbGVcIiksXG4gICAgICBldGhlcnMudXRpbHMuZm9ybWF0Qnl0ZXMzMlN0cmluZyhcIlRydWNcIiksXG4gICAgICBldGhlcnMudXRpbHMuZm9ybWF0Qnl0ZXMzMlN0cmluZyhcInZpb2xldFwiKVxuICAgICk7XG5cbiAgICAvLyBJRCAyXG4gICAgYXdhaXQgY29yZS5taW50Q3VzdG9tSG9yc2UoXG4gICAgICBvd25lci5hZGRyZXNzLFxuICAgICAgNCxcbiAgICAgIGV0aGVycy51dGlscy5mb3JtYXRCeXRlczMyU3RyaW5nKFwiTWFsZVwiKSxcbiAgICAgIGV0aGVycy51dGlscy5mb3JtYXRCeXRlczMyU3RyaW5nKFwiVHJ1bmdcIiksXG4gICAgICBldGhlcnMudXRpbHMuZm9ybWF0Qnl0ZXMzMlN0cmluZyhcImJsdWVcIilcbiAgICApO1xuXG4gICAgYXdhaXQgc3R1ZFNlcnZpY2UuZ3JhbnRSb2xlKFxuICAgICAgZXRoZXJzLnV0aWxzLmZvcm1hdEJ5dGVzMzJTdHJpbmcoXCJzdHVkX293bmVyc1wiKSxcbiAgICAgIG93bmVyLmFkZHJlc3NcbiAgICApO1xuICAgIGF3YWl0IHN0dWRTZXJ2aWNlLnB1dEluU3R1ZCgyLCBERUZBVUxUX0FNT1VOVCwgODY0MDApO1xuXG4gICAgYXdhaXQgZXJjMjAudHJhbnNmZXIoYWNjWzJdLmFkZHJlc3MsIERFRkFVTFRfQU1PVU5UKTtcbiAgICBhd2FpdCBlcmMyMC50cmFuc2ZlcihhY2NbNV0uYWRkcmVzcywgREVGQVVMVF9BTU9VTlQpO1xuICAgIGF3YWl0IGVyYzIwLmNvbm5lY3QoYWNjWzJdKS5hcHByb3ZlKGJyZWVkaW5nLmFkZHJlc3MsIE1BWF9XRVRIKTtcbiAgICBhd2FpdCBlcmMyMC5jb25uZWN0KGFjY1s1XSkuYXBwcm92ZShicmVlZGluZy5hZGRyZXNzLCBNQVhfV0VUSCk7XG4gICAgYXdhaXQgZXJjMjAuYXBwcm92ZShicmVlZGluZy5hZGRyZXNzLCBNQVhfV0VUSCk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKFwibWV0YS10cmFuc2FjdGlvbnNcIiwgYXN5bmMgKCkgPT4ge1xuICAgIC8vIGByZWxheU1peGAgaXMgYmVpbmcgdGVzdGVkIGhlcmUgYmVjdXNlIHRoZSBjb250cmFjdCBmb3JiaWRzIGNhbGxpbmcgaXQgZGlyZWN0bHlcbiAgICAvLyBhbmQgaW5zdGVhZCBpdCBzaG91bGQgYmUgZXhlY3V0ZWQgdGhyb3VnaCBtZXRhIHRyYW5zYWN0aW9ucy5cbiAgICBkZXNjcmliZShcInJlbGF5TWl4XCIsIGFzeW5jICgpID0+IHtcbiAgICAgIGl0KFwic2hvdWxkIHJlY29yZCBicmVlZCBkYXRhIGlmIGl0IGlzIG5vdCBzYXZlZFwiLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGF3YWl0IGJ1aWxkQW5kRXhlY3V0ZU1ldGFUeChcInJlbGF5TWl4XCIsIERFRkFVTFRfTUlYX1BBUkFNUyk7XG5cbiAgICAgICAgbGV0IG1hbGVSZWNvcmQgPSBhd2FpdCBicmVlZGluZ0xpbWl0LmdldEJyZWVkaW5nUmVjb3JkKDIpO1xuXG4gICAgICAgIGV4cGVjdChtYWxlUmVjb3JkWzBdKS50by5iZS50cnVlO1xuICAgICAgICAvLyBNYWxlIGxpbWl0IGlzIDNcbiAgICAgICAgZXhwZWN0KG1hbGVSZWNvcmRbMV0pLnRvLmVxdWFsKDIpO1xuXG4gICAgICAgIGxldCBmZW1hbGVSZWNvcmQgPSBhd2FpdCBicmVlZGluZ0xpbWl0LmdldEJyZWVkaW5nUmVjb3JkKDEpO1xuXG4gICAgICAgIGV4cGVjdChmZW1hbGVSZWNvcmRbMF0pLnRvLmJlLnRydWU7XG4gICAgICAgIC8vIEZlbWFsZSBsaW1pdCBpcyAxXG4gICAgICAgIGV4cGVjdChmZW1hbGVSZWNvcmRbMV0pLnRvLmVxdWFsKDApO1xuICAgICAgfSk7XG5cbiAgICAgIGl0KFwic2hvdWxkIHVzZSBjb3JyZWN0IHJlc2V0IGRhdGUgaWYgaG9yc2UgaGFzbid0IGJlZW4gdXNlZCBpbiBtb250aHNcIiwgYXN5bmMgKCkgPT4ge1xuICAgICAgICBsZXQgcmVzZXREYXlzID0gYXdhaXQgYnJlZWRpbmdMaW1pdC5icmVlZGluZ0N5Y2xlKCk7XG4gICAgICAgIGxldCBleHBlY3RlZERpZmZlcmVuY2UgPSByZXNldERheXMudG9OdW1iZXIoKSAqIDU7XG5cbiAgICAgICAgYXdhaXQgaW5jcmVhc2VUaW1lQnlTZWNvbmRzKHJlc2V0RGF5cy50b051bWJlcigpICogNCk7XG4gICAgICAgIGF3YWl0IG1pbmVCbG9jaygpO1xuICAgICAgICBhd2FpdCBidWlsZEFuZEV4ZWN1dGVNZXRhVHgoXCJyZWxheU1peFwiLCBERUZBVUxUX01JWF9QQVJBTVMpO1xuXG4gICAgICAgIGxldCBtYWxlUmVjb3JkID0gYXdhaXQgYnJlZWRpbmdMaW1pdC5nZXRCcmVlZGluZ1JlY29yZCgyKTtcbiAgICAgICAgLy8gSG9yc2UgbmV4dCBicmVlZGluZyByZXNldCBzaG91bGQgYmUgaW4gfjQtNSBtb250aHMgKGByZXNldERheXNgICogNClcbiAgICAgICAgbGV0IGhvcnNlRGF0YSA9IGF3YWl0IGNvcmUuZ2V0SG9yc2VEYXRhKDIpO1xuICAgICAgICBsZXQgZGF0ZXNEaWZmZXJlbmNlID1cbiAgICAgICAgICBtYWxlUmVjb3JkWzJdLnRvTnVtYmVyKCkgLSBob3JzZURhdGFbMl0udG9OdW1iZXIoKTtcblxuICAgICAgICBleHBlY3QoZGF0ZXNEaWZmZXJlbmNlKS50by5lcXVhbChleHBlY3RlZERpZmZlcmVuY2UpO1xuXG4gICAgICAgIGxldCBmZW1hbGVSZWNvcmQgPSBhd2FpdCBicmVlZGluZ0xpbWl0LmdldEJyZWVkaW5nUmVjb3JkKDEpO1xuICAgICAgICAvLyBIb3JzZSBuZXh0IGJyZWVkaW5nIHJlc2V0IHNob3VsZCBiZSBpbiB+NC01IG1vbnRocyAoYHJlc2V0RGF5c2AgKiA0KVxuICAgICAgICBob3JzZURhdGEgPSBhd2FpdCBjb3JlLmdldEhvcnNlRGF0YSgxKTtcbiAgICAgICAgZGF0ZXNEaWZmZXJlbmNlID0gZmVtYWxlUmVjb3JkWzJdLnRvTnVtYmVyKCkgLSBob3JzZURhdGFbMl0udG9OdW1iZXIoKTtcblxuICAgICAgICBleHBlY3QoZGF0ZXNEaWZmZXJlbmNlKS50by5lcXVhbChleHBlY3RlZERpZmZlcmVuY2UpO1xuICAgICAgfSk7XG5cbiAgICAgIGl0KFwic2hvdWxkIHVwZGF0ZSBicmVlZGluZyBjb3VudGVyIGFuZCByZXNldCBvZiBob3JzZXNcIiwgYXN5bmMgKCkgPT4ge1xuICAgICAgICBsZXQgcmVzZXREYXlzID0gYXdhaXQgYnJlZWRpbmdMaW1pdC5icmVlZGluZ0N5Y2xlKCk7XG5cbiAgICAgICAgYXdhaXQgYnVpbGRBbmRFeGVjdXRlTWV0YVR4KFwicmVsYXlNaXhcIiwgREVGQVVMVF9NSVhfUEFSQU1TKTtcbiAgICAgICAgYXdhaXQgaW5jcmVhc2VUaW1lQnlTZWNvbmRzKHJlc2V0RGF5cy50b051bWJlcigpICogMik7XG4gICAgICAgIGF3YWl0IG1pbmVCbG9jaygpO1xuXG4gICAgICAgIC8vIElmIHRoZSByZXNldCB3YXNuJ3Qgd29ya2luZywgdGhpcyB0cmFuc2FjdGlvbiB3b3VsZG4ndCBnbyB0aHJvdWdoIGFzIG9uZSBvZiB0aGUgaG9yc2VzIHNob3VsZG4ndCBoYXZlIGJyZWVkcyBsZWZ0XG4gICAgICAgIGF3YWl0IGJ1aWxkQW5kRXhlY3V0ZU1ldGFUeChcInJlbGF5TWl4XCIsIERFRkFVTFRfTUlYX1BBUkFNUyk7XG5cbiAgICAgICAgbGV0IG1hbGVSZWNvcmQgPSBhd2FpdCBicmVlZGluZ0xpbWl0LmdldEJyZWVkaW5nUmVjb3JkKDIpO1xuICAgICAgICBleHBlY3QobWFsZVJlY29yZFsxXSkudG8uZXF1YWwoMik7XG5cbiAgICAgICAgbGV0IGZlbWFsZVJlY29yZCA9IGF3YWl0IGJyZWVkaW5nTGltaXQuZ2V0QnJlZWRpbmdSZWNvcmQoMSk7XG4gICAgICAgIGV4cGVjdChmZW1hbGVSZWNvcmRbMV0pLnRvLmVxdWFsKDApO1xuICAgICAgfSk7XG5cbiAgICAgIGRlc2NyaWJlKFwicmV2ZXJ0c1wiLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGl0KFwic2hvdWxkIHJldmVydCBub3QgdGhlIG93bmVyIG9mIHRoZSBmZW1hbGUgc2VuZHMgdGhlIHR4XCIsIGFzeW5jICgpID0+IHtcbiAgICAgICAgICBleHBlY3QoXG4gICAgICAgICAgICBidWlsZEFuZEV4ZWN1dGVNZXRhVHgoXCJyZWxheU1peFwiLCBERUZBVUxUX01JWF9QQVJBTVMsIGFjY1s0XSlcbiAgICAgICAgICApLnRvLmJlLnJldmVydGVkV2l0aChcbiAgICAgICAgICAgIFwiQnJlZWRpbmdMaW1pdDogZmVtYWxlIG93bmVyIHNob3VsZCBiZSB0aGUgaW5pdGlhdG9yXCJcbiAgICAgICAgICApO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdChcInNob3VsZCByZXZlcnQgaWYgZmVtYWxlIGhvcnNlIGhhcyByZWFjaGVkIGxpbWl0XCIsIGFzeW5jICgpID0+IHtcbiAgICAgICAgICBhd2FpdCBidWlsZEFuZEV4ZWN1dGVNZXRhVHgoXCJyZWxheU1peFwiLCBERUZBVUxUX01JWF9QQVJBTVMpO1xuXG4gICAgICAgICAgZXhwZWN0KFxuICAgICAgICAgICAgYnVpbGRBbmRFeGVjdXRlTWV0YVR4KFwicmVsYXlNaXhcIiwgREVGQVVMVF9NSVhfUEFSQU1TKVxuICAgICAgICAgICkudG8uYmUucmV2ZXJ0ZWRXaXRoKFwiQnJlZWRpbmdMaW1pdDogZmVtYWxlIGJyZWVkaW5nIGxpbWl0IHJlYWNoZWRcIik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGl0KFwic2hvdWxkIHJldmVydCBpZiBob3JzZSBoYXMgMCBicmVlZHMgbGVmdCBhbmQgc2hvdWxkbid0IGJlIHVwZGF0ZWQgeWV0XCIsIGFzeW5jICgpID0+IHtcbiAgICAgICAgICBsZXQgcmVzZXREYXlzID0gYXdhaXQgYnJlZWRpbmdMaW1pdC5icmVlZGluZ0N5Y2xlKCk7XG5cbiAgICAgICAgICBhd2FpdCBidWlsZEFuZEV4ZWN1dGVNZXRhVHgoXCJyZWxheU1peFwiLCBERUZBVUxUX01JWF9QQVJBTVMpO1xuICAgICAgICAgIGF3YWl0IGluY3JlYXNlVGltZUJ5U2Vjb25kcyhyZXNldERheXMudG9OdW1iZXIoKSAtIDEwMCk7XG4gICAgICAgICAgYXdhaXQgbWluZUJsb2NrKCk7XG5cbiAgICAgICAgICBleHBlY3QoXG4gICAgICAgICAgICBidWlsZEFuZEV4ZWN1dGVNZXRhVHgoXCJyZWxheU1peFwiLCBERUZBVUxUX01JWF9QQVJBTVMpXG4gICAgICAgICAgKS50by5iZS5yZXZlcnRlZFdpdGgoXCJCcmVlZGluZ0xpbWl0OiBmZW1hbGUgYnJlZWRpbmcgbGltaXQgcmVhY2hlZFwiKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoXCJyZWNvcmRIb3JzZVwiLCBhc3luYyAoKSA9PiB7XG4gICAgaXQoXCJzaG91bGQgcmVjb3JkIGRhdGEgZm9yIGEgaG9yc2VcIiwgYXN5bmMgKCkgPT4ge1xuICAgICAgbGV0IHR4ID0gYXdhaXQgYnJlZWRpbmdMaW1pdC5yZWNvcmRIb3JzZSgyKTtcbiAgICAgIGxldCByZWNvcmQgPSBhd2FpdCBicmVlZGluZ0xpbWl0LmdldEJyZWVkaW5nUmVjb3JkKDIpO1xuXG4gICAgICBleHBlY3QocmVjb3JkWzBdKS50by5iZS50cnVlO1xuICAgICAgZXhwZWN0KHJlY29yZFsxXSkudG8uZXF1YWwoMyk7XG5cbiAgICAgIGV4cGVjdCh0eCkudG8uZW1pdChicmVlZGluZ0xpbWl0LCBcIkhvcnNlUmVjb3JkSW5zZXJ0ZWRcIikud2l0aEFyZ3MoMik7XG5cbiAgICAgIHR4ID0gYXdhaXQgYnJlZWRpbmdMaW1pdC5yZWNvcmRIb3JzZSgxKTtcbiAgICAgIHJlY29yZCA9IGF3YWl0IGJyZWVkaW5nTGltaXQuZ2V0QnJlZWRpbmdSZWNvcmQoMSk7XG5cbiAgICAgIGV4cGVjdChyZWNvcmRbMF0pLnRvLmJlLnRydWU7XG4gICAgICBleHBlY3QocmVjb3JkWzFdKS50by5lcXVhbCgxKTtcblxuICAgICAgZXhwZWN0KHR4KS50by5lbWl0KGJyZWVkaW5nTGltaXQsIFwiSG9yc2VSZWNvcmRJbnNlcnRlZFwiKS53aXRoQXJncygxKTtcbiAgICB9KTtcblxuICAgIGRlc2NyaWJlKFwicmV2ZXJ0c1wiLCBhc3luYyAoKSA9PiB7XG4gICAgICBpdChcInNob3VsZCByZXZlcnQgaWYgaG9yc2UgaXMgYWxyZWFkeSByZWNvcmRlZFwiLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGF3YWl0IGJ1aWxkQW5kRXhlY3V0ZU1ldGFUeChcInJlbGF5TWl4XCIsIERFRkFVTFRfTUlYX1BBUkFNUyk7XG5cbiAgICAgICAgZXhwZWN0KGJyZWVkaW5nTGltaXQucmVjb3JkSG9yc2UoMikpLnRvLmJlLnJldmVydGVkV2l0aChcbiAgICAgICAgICBcIkJyZWVkaW5nTGltaXQ6IGhvcnNlIGFscmVhZHkgcmVjb3JkZWRcIlxuICAgICAgICApO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKFwic2V0QnJlZWRpbmdDeWNsZVwiLCBhc3luYyAoKSA9PiB7XG4gICAgaXQoXCJzaG91bGQgdXBkYXRlIHRoZSBicmVlZGluZyBjeWNsZVwiLCBhc3luYyAoKSA9PiB7XG4gICAgICBsZXQgdHggPSBhd2FpdCBicmVlZGluZ0xpbWl0LnNldEJyZWVkaW5nQ3ljbGUoMSk7XG4gICAgICBsZXQgbmV3Q3ljbGUgPSBhd2FpdCBicmVlZGluZ0xpbWl0LmJyZWVkaW5nQ3ljbGUoKTtcblxuICAgICAgZXhwZWN0KG5ld0N5Y2xlKS50by5lcXVhbCgxKTtcbiAgICAgIGV4cGVjdCh0eClcbiAgICAgICAgLnRvLmVtaXQoYnJlZWRpbmdMaW1pdCwgXCJCcmVlZGluZ0N5Y2xlVXBkYXRlZFwiKVxuICAgICAgICAud2l0aEFyZ3Mob3duZXIuYWRkcmVzcywgMSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKFwidXBkYXRlQnJlZWRpbmdMaW1pdHNcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGl0KFwic2hvdWxkIHVwZGF0ZSB0aGUgYnJlZWRpbmcgbGltaXRzXCIsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCB0eCA9IGF3YWl0IGJyZWVkaW5nTGltaXQudXBkYXRlQnJlZWRpbmdMaW1pdHMoMSwgMyk7XG4gICAgICBsZXQgbWFsZUxpbWl0ID0gYXdhaXQgYnJlZWRpbmdMaW1pdC5tYWxlTGltaXQoKTtcbiAgICAgIGxldCBmZW1hbGVMaW1pdCA9IGF3YWl0IGJyZWVkaW5nTGltaXQuZmVtYWxlTGltaXQoKTtcblxuICAgICAgZXhwZWN0KG1hbGVMaW1pdCkudG8uZXF1YWwoMSk7XG4gICAgICBleHBlY3QoZmVtYWxlTGltaXQpLnRvLmVxdWFsKDMpO1xuXG4gICAgICBleHBlY3QodHgpXG4gICAgICAgIC50by5lbWl0KGJyZWVkaW5nTGltaXQsIFwiSG9yc2VzTGltaXRzVXBkYXRlZFwiKVxuICAgICAgICAud2l0aEFyZ3Mob3duZXIuYWRkcmVzcywgMSwgMyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKFwidXBkYXRlSG9yc2VSZWNvcmRcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGl0KFwic2hvdWxkIHVwZGF0ZSBob3JzZSByZWNvcmQgd2l0aCBnaXZlbiBhcmdzXCIsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCB0eCA9IGF3YWl0IGJyZWVkaW5nTGltaXQudXBkYXRlSG9yc2VSZWNvcmQoMSwgMTAsIDEyMzEyMyk7XG4gICAgICBsZXQgcmVjb3JkID0gYXdhaXQgYnJlZWRpbmdMaW1pdC5nZXRCcmVlZGluZ1JlY29yZCgxKTtcblxuICAgICAgZXhwZWN0KHJlY29yZFswXSkudG8uYmUudHJ1ZTtcbiAgICAgIGV4cGVjdChyZWNvcmRbMV0pLnRvLmVxdWFsKDEwKTtcbiAgICAgIGV4cGVjdChyZWNvcmRbMl0pLnRvLmVxdWFsKDEyMzEyMyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGNvbnN0IGJ1aWxkQW5kRXhlY3V0ZU1ldGFUeCA9IGFzeW5jIChtZXRob2QsIGZ1bmNQYXJhbXMsIGFjY291bnQgPSBvd25lcikgPT4ge1xuICAgIGxldCBmdW5jdGlvblNpZ25hdHVyZSA9IGJyZWVkaW5nTGltaXQuaW50ZXJmYWNlLmVuY29kZUZ1bmN0aW9uRGF0YShcbiAgICAgIG1ldGhvZCxcbiAgICAgIGZ1bmNQYXJhbXNcbiAgICApO1xuXG4gICAgbGV0IHR5cGVkRGF0YSA9IGF3YWl0IGdldFR5cGVkRGF0YSh7XG4gICAgICBuYW1lOiBcIlpFRCBCcmVlZGluZ0xpbWl0XCIsXG4gICAgICB2ZXJzaW9uOiBcIjFcIixcbiAgICAgIGNoYWluSWQ6IGNoYWluSWQsXG4gICAgICB2ZXJpZnlpbmdDb250cmFjdDogYnJlZWRpbmdMaW1pdC5hZGRyZXNzLFxuICAgICAgbm9uY2U6IGF3YWl0IGJyZWVkaW5nTGltaXQuZ2V0Tm9uY2UoYWNjb3VudC5hZGRyZXNzKSxcbiAgICAgIGZyb206IGFjY291bnQuYWRkcmVzcyxcbiAgICAgIGZ1bmN0aW9uU2lnbmF0dXJlOiBmdW5jdGlvblNpZ25hdHVyZSxcbiAgICB9KTtcblxuICAgIGxldCBzaWduZWREYXRhID0gYXdhaXQgYWNjb3VudC5fc2lnblR5cGVkRGF0YShcbiAgICAgIHR5cGVkRGF0YS5kb21haW4sXG4gICAgICB0eXBlZERhdGEudHlwZXMsXG4gICAgICB0eXBlZERhdGEubWVzc2FnZVxuICAgICk7XG5cbiAgICBsZXQgeyByLCBzLCB2IH0gPSBhd2FpdCBnZXRSc3ZGcm9tU2lnKHNpZ25lZERhdGEpO1xuXG4gICAgYXdhaXQgYnJlZWRpbmdMaW1pdC5leGVjdXRlTWV0YVRyYW5zYWN0aW9uKFxuICAgICAgYWNjb3VudC5hZGRyZXNzLFxuICAgICAgZnVuY3Rpb25TaWduYXR1cmUsXG4gICAgICByLFxuICAgICAgcyxcbiAgICAgIHZcbiAgICApO1xuICB9O1xufSk7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "BreedingLimitTest.js"
      ],
      "names": [
        "ganache",
        "require",
        "DEFAULT_COLOR",
        "ethers",
        "utils",
        "formatBytes32String",
        "DEFAULT_AMOUNT",
        "parseUnits",
        "MAX_WETH",
        "DEFAULT_MIX_PARAMS",
        "describe",
        "breedingLimit",
        "breedingLimitLogic",
        "breedingLimitProxy",
        "breeding",
        "breedingLogic",
        "breedingProxy",
        "breedingProxyInstance",
        "proxyAdmin",
        "core",
        "breedTypes",
        "studService",
        "horseData",
        "erc20",
        "acc",
        "owner",
        "poolAddress",
        "before",
        "getSigners",
        "beforeEach",
        "getContractFactory",
        "deploy",
        "deployed",
        "address",
        "Contract",
        "interface",
        "connect",
        "grantRole",
        "initialize",
        "setDomainSeparator",
        "chainId",
        "mintCustomHorse",
        "putInStud",
        "transfer",
        "approve",
        "it",
        "buildAndExecuteMetaTx",
        "getBreedingRecord",
        "maleRecord",
        "to",
        "be",
        "true",
        "equal",
        "femaleRecord",
        "breedingCycle",
        "resetDays",
        "expectedDifference",
        "toNumber",
        "getHorseData",
        "datesDifference",
        "revertedWith",
        "recordHorse",
        "tx",
        "record",
        "emit",
        "withArgs",
        "setBreedingCycle",
        "newCycle",
        "updateBreedingLimits",
        "maleLimit",
        "femaleLimit",
        "updateHorseRecord",
        "method",
        "funcParams",
        "account",
        "functionSignature",
        "encodeFunctionData",
        "getTypedData",
        "getNonce",
        "name",
        "version",
        "verifyingContract",
        "nonce",
        "from",
        "typedData",
        "_signTypedData",
        "domain",
        "types",
        "message",
        "signedData",
        "r",
        "s",
        "v",
        "executeMetaTransaction"
      ],
      "mappings": "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",
      "file": "BreedingLimitTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test/0.7-contracts/proxy_deployment/limits",
      "sourcesContent": [
        "const ganache = require(\"ganache-core\");\n\nimport {\n  funcFromABI,\n  signTxData,\n  getTypedData,\n  getRsvFromSig,\n  metaTxsAccounts,\n  increaseTimeBySeconds,\n  mineBlock,\n  chainId,\n} from \"../../../utils\";\nimport { expect } from \"chai\";\n\nconst DEFAULT_COLOR = ethers.utils.formatBytes32String(\"Midnight Black\"),\n  DEFAULT_AMOUNT = ethers.utils.parseUnits(\"0.2\"),\n  MAX_WETH = ethers.utils.parseUnits(\"1000\");\n\nconst DEFAULT_MIX_PARAMS = [2, 1, DEFAULT_COLOR, DEFAULT_AMOUNT];\n\ndescribe(\"BreedingLimit\", () => {\n  let breedingLimit,\n    breedingLimitLogic,\n    breedingLimitProxy,\n    breeding,\n    breedingLogic,\n    breedingProxy,\n    breedingProxyInstance,\n    proxyAdmin,\n    core,\n    breedTypes,\n    studService,\n    horseData,\n    erc20;\n\n  let acc, owner, poolAddress;\n\n  before(\"populate accs\", async () => {\n    acc = await ethers.getSigners();\n    owner = acc[0];\n    poolAddress = acc[1];\n  });\n\n  beforeEach(\"get factories\", async () => {\n    horseData = await ethers.getContractFactory(\"HorseData\");\n    core = await ethers.getContractFactory(\"Core\");\n    breedTypes = await ethers.getContractFactory(\"BreedTypes\");\n    studService = await ethers.getContractFactory(\"StudServiceV5\");\n    erc20 = await ethers.getContractFactory(\"ERC20Test\");\n    breedingLogic = await ethers.getContractFactory(\"Breeding\");\n    proxyAdmin = await ethers.getContractFactory(\"ZedProxyAdmin\");\n    breedingProxyInstance = await ethers.getContractFactory(\"BreedingProxy\");\n    breedingLimitLogic = await ethers.getContractFactory(\"BreedingLimit\");\n  });\n\n  beforeEach(\"deploy instances\", async () => {\n    horseData = await horseData.deploy();\n    await horseData.deployed();\n\n    core = await core.deploy(horseData.address);\n    await core.deployed();\n\n    breedTypes = await breedTypes.deploy();\n    await breedTypes.deployed();\n\n    studService = await studService.deploy(\n      core.address,\n      horseData.address,\n      breedTypes.address\n    );\n    await studService.deployed();\n\n    erc20 = await erc20.deploy(ethers.utils.parseUnits(\"100\"));\n    await erc20.deployed();\n\n    // Deploys Breeding Logic instance\n    breedingLogic = await breedingLogic.deploy();\n    await breedingLogic.deployed();\n\n    // Deploys Breeding Admin to be used as admin of BreedingProxy and BreedingLimitProxy\n    proxyAdmin = await proxyAdmin.deploy();\n    await proxyAdmin.deployed();\n\n    // Deploys proxy instance\n    breedingProxy = await breedingProxyInstance.deploy(\n      breedingLogic.address,\n      proxyAdmin.address\n    );\n    await breedingProxy.deployed();\n\n    breeding = new ethers.Contract(\n      breedingProxy.address,\n      breedingLogic.interface\n    );\n    breeding = breeding.connect(owner);\n\n    ///////\n\n    // Relayer\n    breedingLimitLogic = await breedingLimitLogic.deploy();\n    await breedingLimitLogic.deployed();\n\n    // Use the same BreedingProxy and ProxyAdmin as it can manage multiple proxies\n    breedingLimitProxy = await breedingProxyInstance.deploy(\n      breedingLimitLogic.address,\n      proxyAdmin.address\n    );\n    await breedingLimitProxy.deployed();\n\n    breedingLimit = new ethers.Contract(\n      breedingLimitProxy.address,\n      breedingLimitLogic.interface\n    );\n    breedingLimit = breedingLimit.connect(owner);\n  });\n\n  beforeEach(\"setup initial state of instances\", async () => {\n    await breedTypes.grantRole(\n      ethers.utils.formatBytes32String(\"breed_types_owners\"),\n      owner.address\n    );\n\n    await breedingLimit.initialize(core.address, breeding.address);\n    await breedingLimit.grantRole(\n      ethers.utils.formatBytes32String(\"breeding_limit_owners\"),\n      owner.address\n    );\n\n    await breedingLimit.setDomainSeparator(\"ZED BreedingLimit\", \"1\", chainId);\n\n    await breeding.initialize(\n      core.address,\n      studService.address,\n      breedTypes.address,\n      erc20.address,\n      poolAddress.address,\n      acc[4].address\n    );\n\n    await breeding.grantRole(\n      ethers.utils.formatBytes32String(\"breeding_owners\"),\n      breedingLimit.address\n    );\n\n    await breedTypes.grantRole(\n      ethers.utils.formatBytes32String(\"breed_types_contracts\"),\n      breeding.address\n    );\n\n    await core.grantRole(\n      ethers.utils.formatBytes32String(\"core_contracts\"),\n      owner.address\n    );\n\n    // Core need to grant CORE_CONTRACTS_ROLE and CORE_OWNERS_ROLE for Breeding to able to invoke method Core.mintOffspring\n    await core.grantRole(\n      ethers.utils.formatBytes32String(\"core_contracts\"),\n      breeding.address\n    );\n    await core.grantRole(\n      ethers.utils.formatBytes32String(\"core_owners\"),\n      breeding.address\n    );\n\n    // We cannot interact with ID 0\n    await core.mintCustomHorse(\n      owner.address,\n      4,\n      ethers.utils.formatBytes32String(\"Male\"),\n      ethers.utils.formatBytes32String(\"FirstName\"),\n      ethers.utils.formatBytes32String(\"Black\")\n    );\n\n    // ID 1\n    await core.mintCustomHorse(\n      owner.address,\n      4,\n      ethers.utils.formatBytes32String(\"Female\"),\n      ethers.utils.formatBytes32String(\"Truc\"),\n      ethers.utils.formatBytes32String(\"violet\")\n    );\n\n    // ID 2\n    await core.mintCustomHorse(\n      owner.address,\n      4,\n      ethers.utils.formatBytes32String(\"Male\"),\n      ethers.utils.formatBytes32String(\"Trung\"),\n      ethers.utils.formatBytes32String(\"blue\")\n    );\n\n    await studService.grantRole(\n      ethers.utils.formatBytes32String(\"stud_owners\"),\n      owner.address\n    );\n    await studService.putInStud(2, DEFAULT_AMOUNT, 86400);\n\n    await erc20.transfer(acc[2].address, DEFAULT_AMOUNT);\n    await erc20.transfer(acc[5].address, DEFAULT_AMOUNT);\n    await erc20.connect(acc[2]).approve(breeding.address, MAX_WETH);\n    await erc20.connect(acc[5]).approve(breeding.address, MAX_WETH);\n    await erc20.approve(breeding.address, MAX_WETH);\n  });\n\n  describe(\"meta-transactions\", async () => {\n    // `relayMix` is being tested here becuse the contract forbids calling it directly\n    // and instead it should be executed through meta transactions.\n    describe(\"relayMix\", async () => {\n      it(\"should record breed data if it is not saved\", async () => {\n        await buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS);\n\n        let maleRecord = await breedingLimit.getBreedingRecord(2);\n\n        expect(maleRecord[0]).to.be.true;\n        // Male limit is 3\n        expect(maleRecord[1]).to.equal(2);\n\n        let femaleRecord = await breedingLimit.getBreedingRecord(1);\n\n        expect(femaleRecord[0]).to.be.true;\n        // Female limit is 1\n        expect(femaleRecord[1]).to.equal(0);\n      });\n\n      it(\"should use correct reset date if horse hasn't been used in months\", async () => {\n        let resetDays = await breedingLimit.breedingCycle();\n        let expectedDifference = resetDays.toNumber() * 5;\n\n        await increaseTimeBySeconds(resetDays.toNumber() * 4);\n        await mineBlock();\n        await buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS);\n\n        let maleRecord = await breedingLimit.getBreedingRecord(2);\n        // Horse next breeding reset should be in ~4-5 months (`resetDays` * 4)\n        let horseData = await core.getHorseData(2);\n        let datesDifference =\n          maleRecord[2].toNumber() - horseData[2].toNumber();\n\n        expect(datesDifference).to.equal(expectedDifference);\n\n        let femaleRecord = await breedingLimit.getBreedingRecord(1);\n        // Horse next breeding reset should be in ~4-5 months (`resetDays` * 4)\n        horseData = await core.getHorseData(1);\n        datesDifference = femaleRecord[2].toNumber() - horseData[2].toNumber();\n\n        expect(datesDifference).to.equal(expectedDifference);\n      });\n\n      it(\"should update breeding counter and reset of horses\", async () => {\n        let resetDays = await breedingLimit.breedingCycle();\n\n        await buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS);\n        await increaseTimeBySeconds(resetDays.toNumber() * 2);\n        await mineBlock();\n\n        // If the reset wasn't working, this transaction wouldn't go through as one of the horses shouldn't have breeds left\n        await buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS);\n\n        let maleRecord = await breedingLimit.getBreedingRecord(2);\n        expect(maleRecord[1]).to.equal(2);\n\n        let femaleRecord = await breedingLimit.getBreedingRecord(1);\n        expect(femaleRecord[1]).to.equal(0);\n      });\n\n      describe(\"reverts\", async () => {\n        it(\"should revert not the owner of the female sends the tx\", async () => {\n          expect(\n            buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS, acc[4])\n          ).to.be.revertedWith(\n            \"BreedingLimit: female owner should be the initiator\"\n          );\n        });\n\n        it(\"should revert if female horse has reached limit\", async () => {\n          await buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS);\n\n          expect(\n            buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS)\n          ).to.be.revertedWith(\"BreedingLimit: female breeding limit reached\");\n        });\n\n        it(\"should revert if horse has 0 breeds left and shouldn't be updated yet\", async () => {\n          let resetDays = await breedingLimit.breedingCycle();\n\n          await buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS);\n          await increaseTimeBySeconds(resetDays.toNumber() - 100);\n          await mineBlock();\n\n          expect(\n            buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS)\n          ).to.be.revertedWith(\"BreedingLimit: female breeding limit reached\");\n        });\n      });\n    });\n  });\n\n  describe(\"recordHorse\", async () => {\n    it(\"should record data for a horse\", async () => {\n      let tx = await breedingLimit.recordHorse(2);\n      let record = await breedingLimit.getBreedingRecord(2);\n\n      expect(record[0]).to.be.true;\n      expect(record[1]).to.equal(3);\n\n      expect(tx).to.emit(breedingLimit, \"HorseRecordInserted\").withArgs(2);\n\n      tx = await breedingLimit.recordHorse(1);\n      record = await breedingLimit.getBreedingRecord(1);\n\n      expect(record[0]).to.be.true;\n      expect(record[1]).to.equal(1);\n\n      expect(tx).to.emit(breedingLimit, \"HorseRecordInserted\").withArgs(1);\n    });\n\n    describe(\"reverts\", async () => {\n      it(\"should revert if horse is already recorded\", async () => {\n        await buildAndExecuteMetaTx(\"relayMix\", DEFAULT_MIX_PARAMS);\n\n        expect(breedingLimit.recordHorse(2)).to.be.revertedWith(\n          \"BreedingLimit: horse already recorded\"\n        );\n      });\n    });\n  });\n\n  describe(\"setBreedingCycle\", async () => {\n    it(\"should update the breeding cycle\", async () => {\n      let tx = await breedingLimit.setBreedingCycle(1);\n      let newCycle = await breedingLimit.breedingCycle();\n\n      expect(newCycle).to.equal(1);\n      expect(tx)\n        .to.emit(breedingLimit, \"BreedingCycleUpdated\")\n        .withArgs(owner.address, 1);\n    });\n  });\n\n  describe(\"updateBreedingLimits\", async () => {\n    it(\"should update the breeding limits\", async () => {\n      let tx = await breedingLimit.updateBreedingLimits(1, 3);\n      let maleLimit = await breedingLimit.maleLimit();\n      let femaleLimit = await breedingLimit.femaleLimit();\n\n      expect(maleLimit).to.equal(1);\n      expect(femaleLimit).to.equal(3);\n\n      expect(tx)\n        .to.emit(breedingLimit, \"HorsesLimitsUpdated\")\n        .withArgs(owner.address, 1, 3);\n    });\n  });\n\n  describe(\"updateHorseRecord\", async () => {\n    it(\"should update horse record with given args\", async () => {\n      let tx = await breedingLimit.updateHorseRecord(1, 10, 123123);\n      let record = await breedingLimit.getBreedingRecord(1);\n\n      expect(record[0]).to.be.true;\n      expect(record[1]).to.equal(10);\n      expect(record[2]).to.equal(123123);\n    });\n  });\n\n  const buildAndExecuteMetaTx = async (method, funcParams, account = owner) => {\n    let functionSignature = breedingLimit.interface.encodeFunctionData(\n      method,\n      funcParams\n    );\n\n    let typedData = await getTypedData({\n      name: \"ZED BreedingLimit\",\n      version: \"1\",\n      chainId: chainId,\n      verifyingContract: breedingLimit.address,\n      nonce: await breedingLimit.getNonce(account.address),\n      from: account.address,\n      functionSignature: functionSignature,\n    });\n\n    let signedData = await account._signTypedData(\n      typedData.domain,\n      typedData.types,\n      typedData.message\n    );\n\n    let { r, s, v } = await getRsvFromSig(signedData);\n\n    await breedingLimit.executeMetaTransaction(\n      account.address,\n      functionSignature,\n      r,\n      s,\n      v\n    );\n  };\n});\n"
      ]
    },
    "mtime": 1627132929549
  },
  "{\"filename\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test/CryptofieldBaseTest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Development/zed/cryptofield-core/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Development/zed/cryptofield-core/test/CryptofieldBaseTest.js",
      "filenameRelative": "/Users/migueldiaz/Development/zed/cryptofield-core/test/CryptofieldBaseTest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "CryptofieldBaseTest.js",
      "sourceFileName": "CryptofieldBaseTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "CryptofieldBaseTest"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar Core = artifacts.require(\"Core\");\nvar GOPCreator = artifacts.require(\"GOPCreatorV2\");\nvar PrivGOP = artifacts.require('PrivateGOPCreatorV2');\nvar HorseData = artifacts.require(\"HorseData\");\n\ncontract(\"CryptofieldBaseContract\", function (accounts) {\n  var core = void 0,\n      privGOP = void 0,\n      gop = void 0,\n      hd = void 0,\n      project = void 0;\n  var hash = \"QmTsG4gGyRYXtBeTY7wqcyoksUp9QUpjzoYNdz8Y91GwoQ\";\n  var owner = accounts[1];\n  var amount = web3.utils.toWei(\"0.5\", \"ether\");\n\n  before(\"setup instances\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Core.new();\n\n          case 2:\n            core = _context.sent;\n            _context.next = 5;\n            return core.initialize(owner);\n\n          case 5:\n            _context.next = 7;\n            return PrivGOP.new();\n\n          case 7:\n            privGOP = _context.sent;\n            _context.next = 10;\n            return GOPCreator.new(owner, privGOP.address, core.address, accounts[3], {\n              from: owner\n            });\n\n          case 10:\n            gop = _context.sent;\n            _context.next = 13;\n            return HorseData.new();\n\n          case 13:\n            hd = _context.sent;\n            _context.next = 16;\n            return hd.initialize();\n\n          case 16:\n            _context.next = 18;\n            return core.setGOPCreator(gop.address, {\n              from: owner\n            });\n\n          case 18:\n            _context.next = 20;\n            return core.setHorseDataAddr(hd.address, {\n              from: owner\n            });\n\n          case 20:\n            _context.next = 22;\n            return gop.openBatch(1, {\n              from: owner\n            });\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  })));\n\n  it(\"should be able to buy a horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var horseHash;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return gop.createGOP(owner, hash, {\n              from: owner,\n              value: amount\n            });\n\n          case 2:\n            _context2.next = 4;\n            return core.getHorseData(0);\n\n          case 4:\n            horseHash = _context2.sent;\n\n\n            assert.equal(horseHash[0], hash);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })));\n\n  it(\"should create correct genotype based on number of sale\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var genotype, i, genotype2;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return core.getHorseData(0);\n\n          case 2:\n            genotype = _context3.sent;\n\n            assert.equal(web3.utils.toBN(genotype[5]).toNumber(), 1);\n\n            i = 0;\n\n          case 5:\n            if (!(i <= 305)) {\n              _context3.next = 19;\n              break;\n            }\n\n            if (!(i === 100)) {\n              _context3.next = 11;\n              break;\n            }\n\n            _context3.next = 9;\n            return gop.openBatch(2, {\n              from: owner\n            });\n\n          case 9:\n            _context3.next = 14;\n            break;\n\n          case 11:\n            if (!(i === 299)) {\n              _context3.next = 14;\n              break;\n            }\n\n            _context3.next = 14;\n            return gop.openBatch(3, {\n              from: owner\n            });\n\n          case 14:\n            _context3.next = 16;\n            return gop.createGOP(accounts[5], \"random hash\", {\n              from: accounts[5],\n              value: amount\n            });\n\n          case 16:\n            i++;\n            _context3.next = 5;\n            break;\n\n          case 19:\n            _context3.next = 21;\n            return core.getHorseData(100);\n\n          case 21:\n            genotype = _context3.sent;\n\n            assert.equal(web3.utils.toBN(genotype[5]).toNumber(), 1);\n\n            _context3.next = 25;\n            return core.getHorseData(120);\n\n          case 25:\n            genotype2 = _context3.sent;\n\n            assert.equal(web3.utils.toBN(genotype2[5]).toNumber(), 2);\n\n          case 27:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  })));\n\n  it(\"should create the correct bloodline for a horse\", _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    var bloodline;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return core.getHorseData(88);\n\n          case 2:\n            bloodline = _context4.sent;\n\n            assert.equal(web3.utils.hexToUtf8(bloodline[6]), \"N\");\n\n            _context4.next = 6;\n            return core.getHorseData(150);\n\n          case 6:\n            bloodline = _context4.sent;\n\n            assert.equal(web3.utils.hexToUtf8(bloodline[6]), \"N\");\n\n            _context4.next = 10;\n            return core.getHorseData(302);\n\n          case 10:\n            bloodline = _context4.sent;\n\n            assert.equal(web3.utils.hexToUtf8(bloodline[6]), \"S\");\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "CryptofieldBaseTest.js"
      ],
      "names": [
        "Core",
        "artifacts",
        "require",
        "GOPCreator",
        "PrivGOP",
        "HorseData",
        "contract",
        "core",
        "privGOP",
        "gop",
        "hd",
        "project",
        "hash",
        "owner",
        "accounts",
        "amount",
        "web3",
        "utils",
        "toWei",
        "before",
        "new",
        "initialize",
        "address",
        "from",
        "setGOPCreator",
        "setHorseDataAddr",
        "openBatch",
        "it",
        "createGOP",
        "value",
        "getHorseData",
        "horseHash",
        "assert",
        "equal",
        "genotype",
        "toBN",
        "toNumber",
        "i",
        "genotype2",
        "bloodline",
        "hexToUtf8"
      ],
      "mappings": ";;;;AAAA,IAAMA,OAAOC,UAAUC,OAAV,CAAkB,MAAlB,CAAb;AACA,IAAMC,aAAaF,UAAUC,OAAV,CAAkB,cAAlB,CAAnB;AACA,IAAME,UAAUH,UAAUC,OAAV,CAAkB,qBAAlB,CAAhB;AACA,IAAMG,YAAYJ,UAAUC,OAAV,CAAkB,WAAlB,CAAlB;;AAEAI,SAAS,yBAAT,EAAoC,oBAAY;AAC9C,MAAIC,aAAJ;AAAA,MAAUC,gBAAV;AAAA,MAAmBC,YAAnB;AAAA,MAAwBC,WAAxB;AAAA,MAA4BC,gBAA5B;AACA,MAAIC,OAAO,gDAAX;AACA,MAAIC,QAAQC,SAAS,CAAT,CAAZ;AACA,MAAIC,SAASC,KAAKC,KAAL,CAAWC,KAAX,CAAiB,KAAjB,EAAwB,OAAxB,CAAb;;AAEAC,SAAO,iBAAP,0DAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACXnB,KAAKoB,GAAL,EADW;;AAAA;AACxBb,gBADwB;AAAA;AAAA,mBAElBA,KAAKc,UAAL,CAAgBR,KAAhB,CAFkB;;AAAA;AAAA;AAAA,mBAIRT,QAAQgB,GAAR,EAJQ;;AAAA;AAIxBZ,mBAJwB;AAAA;AAAA,mBAMZL,WAAWiB,GAAX,CAAeP,KAAf,EAAsBL,QAAQc,OAA9B,EAAuCf,KAAKe,OAA5C,EAAqDR,SAAS,CAAT,CAArD,EAAkE;AAC5ES,oBAAMV;AADsE,aAAlE,CANY;;AAAA;AAMxBJ,eANwB;AAAA;AAAA,mBAUbJ,UAAUe,GAAV,EAVa;;AAAA;AAUxBV,cAVwB;AAAA;AAAA,mBAWlBA,GAAGW,UAAH,EAXkB;;AAAA;AAAA;AAAA,mBAalBd,KAAKiB,aAAL,CAAmBf,IAAIa,OAAvB,EAAgC;AACpCC,oBAAMV;AAD8B,aAAhC,CAbkB;;AAAA;AAAA;AAAA,mBAgBlBN,KAAKkB,gBAAL,CAAsBf,GAAGY,OAAzB,EAAkC;AACtCC,oBAAMV;AADgC,aAAlC,CAhBkB;;AAAA;AAAA;AAAA,mBAoBlBJ,IAAIiB,SAAJ,CAAc,CAAd,EAAiB;AACrBH,oBAAMV;AADe,aAAjB,CApBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AA0BAc,KAAG,+BAAH,0DAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC5BlB,IAAImB,SAAJ,CAAcf,KAAd,EAAqBD,IAArB,EAA2B;AAC/BW,oBAAMV,KADyB;AAE/BgB,qBAAOd;AAFwB,aAA3B,CAD4B;;AAAA;AAAA;AAAA,mBAMZR,KAAKuB,YAAL,CAAkB,CAAlB,CANY;;AAAA;AAM9BC,qBAN8B;;;AAQlCC,mBAAOC,KAAP,CAAaF,UAAU,CAAV,CAAb,EAA2BnB,IAA3B;;AARkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAWAe,KAAG,wDAAH,0DAA6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEtCpB,KAAKuB,YAAL,CAAkB,CAAlB,CAFsC;;AAAA;AAEvDI,oBAFuD;;AAG3DF,mBAAOC,KAAP,CAAajB,KAAKC,KAAL,CAAWkB,IAAX,CAAgBD,SAAS,CAAT,CAAhB,EACVE,QADU,EAAb,EACe,CADf;;AAGQC,aANmD,GAM/C,CAN+C;;AAAA;AAAA,kBAM5CA,KAAK,GANuC;AAAA;AAAA;AAAA;;AAAA,kBAOtDA,MAAM,GAPgD;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAQjD5B,IAAIiB,SAAJ,CAAc,CAAd,EAAiB;AACrBH,oBAAMV;AADe,aAAjB,CARiD;;AAAA;AAAA;AAAA;;AAAA;AAAA,kBAW/CwB,MAAM,GAXyC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAYjD5B,IAAIiB,SAAJ,CAAc,CAAd,EAAiB;AACrBH,oBAAMV;AADe,aAAjB,CAZiD;;AAAA;AAAA;AAAA,mBAiBnDJ,IAAImB,SAAJ,CAAcd,SAAS,CAAT,CAAd,EAA2B,aAA3B,EAA0C;AAC9CS,oBAAMT,SAAS,CAAT,CADwC;AAE9Ce,qBAAOd;AAFuC,aAA1C,CAjBmD;;AAAA;AAMlCsB,eANkC;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAuB1C9B,KAAKuB,YAAL,CAAkB,GAAlB,CAvB0C;;AAAA;AAuB3DI,oBAvB2D;;AAwB3DF,mBAAOC,KAAP,CAAajB,KAAKC,KAAL,CAAWkB,IAAX,CAAgBD,SAAS,CAAT,CAAhB,EACVE,QADU,EAAb,EACe,CADf;;AAxB2D;AAAA,mBA2BrC7B,KAAKuB,YAAL,CAAkB,GAAlB,CA3BqC;;AAAA;AA2BvDQ,qBA3BuD;;AA4B3DN,mBAAOC,KAAP,CAAajB,KAAKC,KAAL,CAAWkB,IAAX,CAAgBG,UAAU,CAAV,CAAhB,EACVF,QADU,EAAb,EACe,CADf;;AA5B2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7D;;AAgCAT,KAAG,iDAAH,0DAAsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE9BpB,KAAKuB,YAAL,CAAkB,EAAlB,CAF8B;;AAAA;AAEhDS,qBAFgD;;AAGpDP,mBAAOC,KAAP,CAAajB,KAAKC,KAAL,CAAWuB,SAAX,CAAqBD,UAAU,CAAV,CAArB,CAAb,EAAiD,GAAjD;;AAHoD;AAAA,mBAKlChC,KAAKuB,YAAL,CAAkB,GAAlB,CALkC;;AAAA;AAKpDS,qBALoD;;AAMpDP,mBAAOC,KAAP,CAAajB,KAAKC,KAAL,CAAWuB,SAAX,CAAqBD,UAAU,CAAV,CAArB,CAAb,EAAiD,GAAjD;;AANoD;AAAA,mBAQlChC,KAAKuB,YAAL,CAAkB,GAAlB,CARkC;;AAAA;AAQpDS,qBARoD;;AASpDP,mBAAOC,KAAP,CAAajB,KAAKC,KAAL,CAAWuB,SAAX,CAAqBD,UAAU,CAAV,CAArB,CAAb,EAAiD,GAAjD;;AAToD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtD;AAWD,CAtFD",
      "file": "CryptofieldBaseTest.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core/test",
      "sourcesContent": [
        "const Core = artifacts.require(\"Core\");\nconst GOPCreator = artifacts.require(\"GOPCreatorV2\");\nconst PrivGOP = artifacts.require('PrivateGOPCreatorV2')\nconst HorseData = artifacts.require(\"HorseData\");\n\ncontract(\"CryptofieldBaseContract\", accounts => {\n  let core, privGOP, gop, hd, project;\n  let hash = \"QmTsG4gGyRYXtBeTY7wqcyoksUp9QUpjzoYNdz8Y91GwoQ\";\n  let owner = accounts[1];\n  let amount = web3.utils.toWei(\"0.5\", \"ether\");\n\n  before(\"setup instances\", async() => {\n    core = await Core.new();\n    await core.initialize(owner);\n\n    privGOP = await PrivGOP.new();\n\n    gop = await GOPCreator.new(owner, privGOP.address, core.address, accounts[3], {\n      from: owner\n    })\n\n    hd = await HorseData.new();\n    await hd.initialize();\n\n    await core.setGOPCreator(gop.address, {\n      from: owner\n    });\n    await core.setHorseDataAddr(hd.address, {\n      from: owner\n    });\n\n    await gop.openBatch(1, {\n      from: owner\n    });\n  })\n\n\n  it(\"should be able to buy a horse\", async() => {\n    await gop.createGOP(owner, hash, {\n      from: owner,\n      value: amount\n    }); // 0\n\n    let horseHash = await core.getHorseData(0);\n\n    assert.equal(horseHash[0], hash);\n  })\n\n  it(\"should create correct genotype based on number of sale\", async() => {\n    // If we get the first one, we should have genotype 1.\n    let genotype = await core.getHorseData(0);\n    assert.equal(web3.utils.toBN(genotype[5])\n      .toNumber(), 1);\n\n    for(let i = 0; i <= 305; i++) {\n      if(i === 100) {\n        await gop.openBatch(2, {\n          from: owner\n        });\n      } else if(i === 299) {\n        await gop.openBatch(3, {\n          from: owner\n        });\n      }\n\n      await gop.createGOP(accounts[5], \"random hash\", {\n        from: accounts[5],\n        value: amount\n      });\n    }\n\n    genotype = await core.getHorseData(100);\n    assert.equal(web3.utils.toBN(genotype[5])\n      .toNumber(), 1);\n\n    let genotype2 = await core.getHorseData(120);\n    assert.equal(web3.utils.toBN(genotype2[5])\n      .toNumber(), 2);\n  })\n\n  it(\"should create the correct bloodline for a horse\", async() => {\n    // We're using horses from the above test.\n    let bloodline = await core.getHorseData(88);\n    assert.equal(web3.utils.hexToUtf8(bloodline[6]), \"N\");\n\n    bloodline = await core.getHorseData(150);\n    assert.equal(web3.utils.hexToUtf8(bloodline[6]), \"N\");\n\n    bloodline = await core.getHorseData(302);\n    assert.equal(web3.utils.hexToUtf8(bloodline[6]), \"S\");\n  })\n})\n"
      ]
    },
    "mtime": 1625091362722
  },
  "{\"filename\":\"/Users/migueldiaz/Development/zed/cryptofield-core/.solcover.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/migueldiaz/Development/zed/cryptofield-core\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/migueldiaz/Development/zed/cryptofield-core/.solcover.js",
      "filenameRelative": "/Users/migueldiaz/Development/zed/cryptofield-core/.solcover.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": ".solcover.js",
      "sourceFileName": ".solcover.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/migueldiaz/Development/zed/cryptofield-core",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": ".solcover"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nmodule.exports = {\n  skipFiles: [\"0.7-contracts/base/ZedProxyAdmin.sol\", \"0.7-contracts/interfaces\", \"0.7-contracts/mocks\"]\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi5zb2xjb3Zlci5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2tpcEZpbGVzIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLGFBQVcsQ0FDVCxzQ0FEUyxFQUVULDBCQUZTLEVBR1QscUJBSFM7QUFESSxDQUFqQiIsImZpbGUiOiIuc29sY292ZXIuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL21pZ3VlbGRpYXovRGV2ZWxvcG1lbnQvemVkL2NyeXB0b2ZpZWxkLWNvcmUiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2tpcEZpbGVzOiBbXG4gICAgXCIwLjctY29udHJhY3RzL2Jhc2UvWmVkUHJveHlBZG1pbi5zb2xcIixcbiAgICBcIjAuNy1jb250cmFjdHMvaW50ZXJmYWNlc1wiLFxuICAgIFwiMC43LWNvbnRyYWN0cy9tb2Nrc1wiLFxuICBdLFxufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        ".solcover.js"
      ],
      "names": [
        "module",
        "exports",
        "skipFiles"
      ],
      "mappings": ";;AAAAA,OAAOC,OAAP,GAAiB;AACfC,aAAW,CACT,sCADS,EAET,0BAFS,EAGT,qBAHS;AADI,CAAjB",
      "file": ".solcover.js",
      "sourceRoot": "/Users/migueldiaz/Development/zed/cryptofield-core",
      "sourcesContent": [
        "module.exports = {\n  skipFiles: [\n    \"0.7-contracts/base/ZedProxyAdmin.sol\",\n    \"0.7-contracts/interfaces\",\n    \"0.7-contracts/mocks\",\n  ],\n};\n"
      ]
    },
    "mtime": 1627135151830
  }
}